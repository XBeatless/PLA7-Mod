
/********************************************************
*                                                       *
*   Package generated using UEDumper by Spuckwaffel.    *
*                                                       *
********************************************************/

#pragma once
/// dependency: BasicType
/// dependency: AIModule
/// dependency: CinematicCamera
/// dependency: CoreUObject
/// dependency: CriWareRuntime
/// dependency: Engine
/// dependency: GameplayAbilities
/// dependency: GameplayTags
/// dependency: GameplayTasks
/// dependency: InputCore
/// dependency: LevelSequence
/// dependency: MovieScene
/// dependency: PaladinAutoTestUtilRuntime
/// dependency: Paper2D
/// dependency: PathFollow
/// dependency: Slate
/// dependency: SlateCore
/// dependency: UMG

/// Enum /Script/Pal7.EPaladinKeyEventName
/// Size: 0x120
enum class EPaladinKeyEventName : uint8_t
{
	EPaladinKeyEventName__None                                                       = 0,
	EPaladinKeyEventName__Front                                                      = 1,
	EPaladinKeyEventName__Back                                                       = 2,
	EPaladinKeyEventName__Left                                                       = 3,
	EPaladinKeyEventName__Right                                                      = 4,
	EPaladinKeyEventName__Turn                                                       = 5,
	EPaladinKeyEventName__LookUp                                                     = 6,
	EPaladinKeyEventName__ChangeHeroNan1                                             = 7,
	EPaladinKeyEventName__ChangeHeroNv1                                              = 8,
	EPaladinKeyEventName__ChangeHeroNan2                                             = 9,
	EPaladinKeyEventName__ChangeHeroNv2                                              = 10,
	EPaladinKeyEventName__LockEnemy                                                  = 11,
	EPaladinKeyEventName__SwitchLockEnemyUp                                          = 12,
	EPaladinKeyEventName__SwitchLockEnemyDown                                        = 13,
	EPaladinKeyEventName__CameraLensReset                                            = 14,
	EPaladinKeyEventName__ChangeSkillPage                                            = 15,
	EPaladinKeyEventName__Jump                                                       = 16,
	EPaladinKeyEventName__DodgeAndSprint                                             = 17,
	EPaladinKeyEventName__Dodge                                                      = 18,
	EPaladinKeyEventName__Sprint                                                     = 19,
	EPaladinKeyEventName__ToggleWalk                                                 = 20,
	EPaladinKeyEventName__Attack                                                     = 21,
	EPaladinKeyEventName__Awake                                                      = 22,
	EPaladinKeyEventName__SuperAwake                                                 = 23,
	EPaladinKeyEventName__Skill0                                                     = 24,
	EPaladinKeyEventName__Skill1                                                     = 25,
	EPaladinKeyEventName__Skill2                                                     = 26,
	EPaladinKeyEventName__Skill3                                                     = 27,
	EPaladinKeyEventName__Skill4                                                     = 28,
	EPaladinKeyEventName__HotItem1                                                   = 29,
	EPaladinKeyEventName__HotItem2                                                   = 30,
	EPaladinKeyEventName__HotItem3                                                   = 31,
	EPaladinKeyEventName__HotItem4                                                   = 32,
	EPaladinKeyEventName__FightHotItem1                                              = 33,
	EPaladinKeyEventName__FightHotItem2                                              = 34,
	EPaladinKeyEventName__FightHotItem3                                              = 35,
	EPaladinKeyEventName__FightHotItem4                                              = 36,
	EPaladinKeyEventName__OpenBigMap                                                 = 37,
	EPaladinKeyEventName__OpenQuest                                                  = 38,
	EPaladinKeyEventName__OpenWorldMap                                               = 39,
	EPaladinKeyEventName__OpenBag                                                    = 40,
	EPaladinKeyEventName__OpenOverview                                               = 41,
	EPaladinKeyEventName__OpenPet                                                    = 42,
	EPaladinKeyEventName__OpenSystem                                                 = 43,
	EPaladinKeyEventName__OpenMuseum                                                 = 44,
	EPaladinKeyEventName__OpenEquipment                                              = 45,
	EPaladinKeyEventName__OpenSkill                                                  = 46,
	EPaladinKeyEventName__OpenScreenshot                                             = 47,
	EPaladinKeyEventName__Interaction                                                = 48,
	EPaladinKeyEventName__SkipDialogue                                               = 49,
	EPaladinKeyEventName__SwimGameUp                                                 = 50,
	EPaladinKeyEventName__SwimGameDown                                               = 51,
	EPaladinKeyEventName__SwimGameInteract                                           = 52,
	EPaladinKeyEventName__MiniGameShoot                                              = 53,
	EPaladinKeyEventName__MiniGameAim                                                = 54,
	EPaladinKeyEventName__PatrolGameSprint                                           = 55,
	EPaladinKeyEventName__PatrolGameSkill                                            = 56,
	EPaladinKeyEventName__DanceGameUP                                                = 57,
	EPaladinKeyEventName__DanceGameDown                                              = 58,
	EPaladinKeyEventName__DanceGameLeft                                              = 59,
	EPaladinKeyEventName__DanceGameRight                                             = 60,
	EPaladinKeyEventName__DanceGameY                                                 = 61,
	EPaladinKeyEventName__DanceGameX                                                 = 62,
	EPaladinKeyEventName__DanceGameA                                                 = 63,
	EPaladinKeyEventName__DanceGameB                                                 = 64,
	EPaladinKeyEventName__PatrolGameKill                                             = 65,
	EPaladinKeyEventName__SwimGameSkill0                                             = 66,
	EPaladinKeyEventName__SwimGameSkill1                                             = 67,
	EPaladinKeyEventName__XiLouGameOut                                               = 68,
	EPaladinKeyEventName__XiLouGameChoose                                            = 69,
	EPaladinKeyEventName__SkipPuzzle                                                 = 70,
	EPaladinKeyEventName__CardGameUp                                                 = 71,
	EPaladinKeyEventName__CardGameDown                                               = 72,
	EPaladinKeyEventName__CardGameLeft                                               = 73,
	EPaladinKeyEventName__CardGameRight                                              = 74,
	EPaladinKeyEventName__GamepadSkillHelper                                         = 75,
	EPaladinKeyEventName__GamepadChangeHeroHelper                                    = 76,
	EPaladinKeyEventName__GamepadLeftHelper                                          = 77,
	EPaladinKeyEventName__GamepadRightHelper                                         = 78,
	EPaladinKeyEventName__GamepadY                                                   = 79,
	EPaladinKeyEventName__GamepadX                                                   = 80,
	EPaladinKeyEventName__GamepadB                                                   = 81,
	EPaladinKeyEventName__GamepadA                                                   = 82,
	EPaladinKeyEventName__GamepadRightShoulder                                       = 83,
	EPaladinKeyEventName__GamepadLeftShoulder                                        = 84,
	EPaladinKeyEventName__GamepadLeftThumbstick                                      = 85,
	EPaladinKeyEventName__GamepadRightThumbstick                                     = 86,
	EPaladinKeyEventName__SkipSequence                                               = 87,
	EPaladinKeyEventName__StopSequence                                               = 88,
	EPaladinKeyEventName__ResumeSequence                                             = 89,
	EPaladinKeyEventName__HidePhotoUI                                                = 90,
	EPaladinKeyEventName__CameraUP                                                   = 91,
	EPaladinKeyEventName__CameraDown                                                 = 92,
	EPaladinKeyEventName__CameraXLeft                                                = 93,
	EPaladinKeyEventName__CameraXRight                                               = 94,
	EPaladinKeyEventName__CameraUnlock                                               = 95,
	EPaladinKeyEventName__QuitPhotograph                                             = 96,
	EPaladinKeyEventName__StartPhotograph                                            = 97,
	EPaladinKeyEventName__GamepadRightShoulderForPhoto                               = 98,
	EPaladinKeyEventName__GamepadLeftShoulderForPhoto                                = 99,
	EPaladinKeyEventName__EffectOptionChangeUp                                       = 100,
	EPaladinKeyEventName__EffectOptionChangeDown                                     = 101,
	EPaladinKeyEventName__EffectValueChangeUp                                        = 102,
	EPaladinKeyEventName__EffectValueChangeDown                                      = 103,
	EPaladinKeyEventName__CameraReset                                                = 104,
	EPaladinKeyEventName__CameraShoot                                                = 105,
	EPaladinKeyEventName__DecalRepeal                                                = 106,
	EPaladinKeyEventName__DecalMirror                                                = 107,
	EPaladinKeyEventName__TabPhotoPage                                               = 108,
	EPaladinKeyEventName__PhotoDecalMode                                             = 109,
	EPaladinKeyEventName__TrackRecentQuest                                           = 110,
	EPaladinKeyEventName__ShowUnlockAbility                                          = 111,
	EPaladinKeyEventName__LoadingStartGame                                           = 112,
	EPaladinKeyEventName__Num                                                        = 113,
	EPaladinKeyEventName__SwitchWalk                                                 = 114,
	EPaladinKeyEventName__SwitchRTX                                                  = 115,
	EPaladinKeyEventName__SwitchDLSS                                                 = 116,
	EPaladinKeyEventName__SequneceSpeedUp                                            = 117,
	EPaladinKeyEventName__SequneceSpeedDown                                          = 118,
	EPaladinKeyEventName__EPaladinKeyEventName_MAX                                   = 119
};

/// Enum /Script/Pal7.EPaladinControllerMode
/// Size: 0x31
enum class EPaladinControllerMode : uint8_t
{
	EPaladinControllerMode__PCME_Free                                                = 0,
	EPaladinControllerMode__PCME_Town                                                = 1,
	EPaladinControllerMode__PCME_Fight                                               = 2,
	EPaladinControllerMode__PCME_MoveBox                                             = 3,
	EPaladinControllerMode__PCME_DivingGame                                          = 4,
	EPaladinControllerMode__PCME_PatrolGame                                          = 5,
	EPaladinControllerMode__PCME_DanceGame                                           = 6,
	EPaladinControllerMode__PCME_SlidingGame                                         = 7,
	EPaladinControllerMode__PCME_Photo                                               = 8,
	EPaladinControllerMode__PCME_Interaction                                         = 9,
	EPaladinControllerMode__PCME_Dialogue                                            = 10,
	EPaladinControllerMode__PCME_MainMission1                                        = 11,
	EPaladinControllerMode__PCME_Cruise                                              = 12,
	EPaladinControllerMode__PCME_GameEnd                                             = 13,
	EPaladinControllerMode__PCME_Sequence                                            = 14,
	EPaladinControllerMode__PCME_Sequence_DisableMove                                = 15,
	EPaladinControllerMode__PCME_Sequence_DisableLookUp                              = 16,
	EPaladinControllerMode__PCME_Sequence_DisableInput                               = 17,
	EPaladinControllerMode__PCME_Sequence_Pause                                      = 18,
	EPaladinControllerMode__PCME_Sequence_Group                                      = 19,
	EPaladinControllerMode__PCME_Picking                                             = 20,
	EPaladinControllerMode__PCME_InRoom                                              = 21,
	EPaladinControllerMode__PCME_GamePause_DisableSystem                             = 22,
	EPaladinControllerMode__PCME_UIOnly                                              = 23,
	EPaladinControllerMode__PCME_ChangeUI_DisableInput                               = 24,
	EPaladinControllerMode__PCME_Group_Free                                          = 25,
	EPaladinControllerMode__PCME_Puzzle_Free                                         = 26,
	EPaladinControllerMode__PCME_Puzzle_Town                                         = 27,
	EPaladinControllerMode__PCME_Esc_Only                                            = 28,
	EPaladinControllerMode__Unknown                                                  = 29,
	EPaladinControllerMode__EPaladinControllerMode_MAX                               = 30
};

/// Enum /Script/Pal7.EQuestCategory
/// Size: 0x05
enum class EQuestCategory : uint8_t
{
	EQuestCategory__Main                                                             = 0,
	EQuestCategory__Branch                                                           = 1,
	EQuestCategory__Other                                                            = 2,
	EQuestCategory__None                                                             = 3,
	EQuestCategory__EQuestCategory_MAX                                               = 4
};

/// Enum /Script/Pal7.EPaladinSaveFileType
/// Size: 0x05
enum class EPaladinSaveFileType : uint8_t
{
	EPaladinSaveFileType__GlobalFile                                                 = 0,
	EPaladinSaveFileType__MetaFile                                                   = 1,
	EPaladinSaveFileType__SlotFile                                                   = 2,
	EPaladinSaveFileType__ScreenShotFile                                             = 3,
	EPaladinSaveFileType__EPaladinSaveFileType_MAX                                   = 4
};

/// Enum /Script/Pal7.EItemMainType
/// Size: 0x22
enum class EItemMainType : uint8_t
{
	EItemMainType__IT_Weapon                                                         = 0,
	EItemMainType__IT_Equip_UpperBody                                                = 1,
	EItemMainType__IT_Equip_LowerBody                                                = 2,
	EItemMainType__IT_Equip_Feet                                                     = 3,
	EItemMainType__IT_Equip_Accessory                                                = 4,
	EItemMainType__IT_Equip_Suit                                                     = 5,
	EItemMainType__IT_Weapon_Skin                                                    = 6,
	EItemMainType__IT_EquipmentNum                                                   = 7,
	EItemMainType__IT_Consumable                                                     = 8,
	EItemMainType__IT_Food_Material                                                  = 9,
	EItemMainType__IT_Forge_Material                                                 = 10,
	EItemMainType__IT_Story_Item                                                     = 11,
	EItemMainType__IT_Quest_Item                                                     = 12,
	EItemMainType__IT_Museum_Item                                                    = 13,
	EItemMainType__IT_Other_Item                                                     = 14,
	EItemMainType__IT_Card                                                           = 15,
	EItemMainType__IT_PetFood                                                        = 16,
	EItemMainType__IT_Wine                                                           = 17,
	EItemMainType__IT_Recipe                                                         = 18,
	EItemMainType__IT_Food                                                           = 19,
	EItemMainType__TC_Main_MAX                                                       = 20,
	EItemMainType__EItemMainType_MAX                                                 = 21
};

/// Enum /Script/Pal7.EPaladinHeroName
/// Size: 0x07
enum class EPaladinHeroName : uint8_t
{
	EPaladinHeroName__PalHero_NAN1                                                   = 0,
	EPaladinHeroName__PalHero_NV1                                                    = 1,
	EPaladinHeroName__PalHero_NAN2                                                   = 2,
	EPaladinHeroName__PalHero_NV2                                                    = 3,
	EPaladinHeroName__SuperHero                                                      = 4,
	EPaladinHeroName__PalHero_None                                                   = 10,
	EPaladinHeroName__EPaladinHeroName_MAX                                           = 11
};

/// Enum /Script/Pal7.EDeckGroup
/// Size: 0x05
enum class EDeckGroup : uint8_t
{
	EDeckGroup__EDeckGroup_1stGroup                                                  = 0,
	EDeckGroup__EDeckGroup_2ndGroup                                                  = 1,
	EDeckGroup__EDeckGroup_3rdGroup                                                  = 2,
	EDeckGroup__EDeckGroup_Num                                                       = 3,
	EDeckGroup__EDeckGroup_MAX                                                       = 4
};

/// Enum /Script/Pal7.EPaladinNPCEnableLord
/// Size: 0x07
enum class EPaladinNPCEnableLord : uint8_t
{
	EPaladinNPCEnableLord__ENABLE_QUEST                                              = 0,
	EPaladinNPCEnableLord__ENABLE_Sequence                                           = 1,
	EPaladinNPCEnableLord__ENABLE_Sleep                                              = 2,
	EPaladinNPCEnableLord__ENABLE_Config                                             = 3,
	EPaladinNPCEnableLord__ENABLE_Running                                            = 4,
	EPaladinNPCEnableLord__ENABLE_None                                               = 5,
	EPaladinNPCEnableLord__ENABLE_MAX                                                = 6
};

/// Enum /Script/Pal7.EPaladinNPCEnableFactor
/// Size: 0x13
enum class EPaladinNPCEnableFactor : uint8_t
{
	EPaladinNPCEnableFactor__FACTOR_ShowMesh                                         = 0,
	EPaladinNPCEnableFactor__FACTOR_EnableCollision                                  = 1,
	EPaladinNPCEnableFactor__FACTOR_EnableBehaviorTree                               = 2,
	EPaladinNPCEnableFactor__FACTOR_EnablePerception                                 = 3,
	EPaladinNPCEnableFactor__FACTOR_RegisterActor                                    = 4,
	EPaladinNPCEnableFactor__FACTOR_MarkInMap                                        = 5,
	EPaladinNPCEnableFactor__FACTOR_EnableClothSim                                   = 6,
	EPaladinNPCEnableFactor__FACTOR_ResumeClothSim                                   = 7,
	EPaladinNPCEnableFactor__FACTOR_UpdateAnimation                                  = 8,
	EPaladinNPCEnableFactor__FACTOR_EnableMoveComponent                              = 9,
	EPaladinNPCEnableFactor__FACTOR_EnableBodyPhysics                                = 10,
	EPaladinNPCEnableFactor__FACTOR_None                                             = 11,
	EPaladinNPCEnableFactor__FACTOR_MAX                                              = 12
};

/// Enum /Script/Pal7.EBossBattleName
/// Size: 0x27
enum class EBossBattleName : uint8_t
{
	EBossBattleName__XiQu                                                            = 0,
	EBossBattleName__KuiYu_TianShiMen_Battle1                                        = 1,
	EBossBattleName__KuiYu_TianShiMen_Battle2                                        = 2,
	EBossBattleName__KuiYu_LuLongZhen                                                = 3,
	EBossBattleName__BingXianShou                                                    = 4,
	EBossBattleName__HuaLiu                                                          = 5,
	EBossBattleName__HuoXianShou                                                     = 6,
	EBossBattleName__QiOu                                                            = 7,
	EBossBattleName__Jiuying                                                         = 8,
	EBossBattleName__JingJianRenOu                                                   = 9,
	EBossBattleName__JiaLouLuoWang                                                   = 10,
	EBossBattleName__MengZhang_TianShiMen                                            = 11,
	EBossBattleName__ChongLou                                                        = 12,
	EBossBattleName__ChiRu                                                           = 13,
	EBossBattleName__DuZhangWeiShu                                                   = 14,
	EBossBattleName__MoHuai                                                          = 15,
	EBossBattleName__ShenGuan_XuYing                                                 = 16,
	EBossBattleName__ShenGuan_BenTi_S1                                               = 17,
	EBossBattleName__ShenGuan_BenTi_S2                                               = 18,
	EBossBattleName__ShenGuan_BenTi_S3                                               = 19,
	EBossBattleName__BossXiuWu_S1                                                    = 20,
	EBossBattleName__BossXiuWu_S2                                                    = 21,
	EBossBattleName__ChongLou_DiYiZhan                                               = 22,
	EBossBattleName__DuzhangQiOu                                                     = 23,
	EBossBattleName__JianShiGroup                                                    = 24,
	EBossBattleName__BattleNone                                                      = 25,
	EBossBattleName__EBossBattleName_MAX                                             = 26
};

/// Enum /Script/Pal7.EPaladinCookSurroundType
/// Size: 0x03
enum class EPaladinCookSurroundType : uint8_t
{
	EPaladinCookSurroundType__CST_OutDoor                                            = 0,
	EPaladinCookSurroundType__CST_InDoor                                             = 1,
	EPaladinCookSurroundType__CST_MAX                                                = 2
};

/// Enum /Script/Pal7.EPaladinGuideType
/// Size: 0x17
enum class EPaladinGuideType : uint8_t
{
	EPaladinGuideType__GuideType_Non                                                 = 0,
	EPaladinGuideType__GuideType_Move                                                = 1,
	EPaladinGuideType__GuideType_Jump                                                = 2,
	EPaladinGuideType__GuideType_JumpSprint                                          = 3,
	EPaladinGuideType__GuideType_UesItem                                             = 4,
	EPaladinGuideType__GuideType_Attack_single                                       = 5,
	EPaladinGuideType__GuideType_Attack_multi                                        = 6,
	EPaladinGuideType__GuideType_LianXie                                             = 7,
	EPaladinGuideType__GuideType_Dodge                                               = 8,
	EPaladinGuideType__GuideType_Skill                                               = 9,
	EPaladinGuideType__GuideType_KOBoss                                              = 10,
	EPaladinGuideType__GuideType_JianYu                                              = 11,
	EPaladinGuideType__GuideType_JianYu2                                             = 12,
	EPaladinGuideType__GuideType_ZhuiJi1                                             = 13,
	EPaladinGuideType__GuideType_ZhuiJi2                                             = 14,
	EPaladinGuideType__GuideType_ZhuiJi3                                             = 15,
	EPaladinGuideType__GuideType_Max                                                 = 16
};

/// Enum /Script/Pal7.EPaladinGuidProgress
/// Size: 0x08
enum class EPaladinGuidProgress : uint8_t
{
	EPaladinGuidProgress__GuideProgressType_Non                                      = 0,
	EPaladinGuidProgress__GuideProgressType_Normal_LianJi                            = 1,
	EPaladinGuidProgress__GuideProgressType_Air_LianJi                               = 2,
	EPaladinGuidProgress__GuideProgressType_LianXie                                  = 3,
	EPaladinGuidProgress__GuideProgressType_KillMonster                              = 4,
	EPaladinGuidProgress__GuideProgressType_Dodge                                    = 5,
	EPaladinGuidProgress__GuideProgressType_Skill                                    = 6,
	EPaladinGuidProgress__GuideProgressType_Max                                      = 7
};

/// Enum /Script/Pal7.EPaladinUIMouseCursor
/// Size: 0x04
enum class EPaladinUIMouseCursor : uint8_t
{
	EPaladinUIMouseCursor__None                                                      = 0,
	EPaladinUIMouseCursor__Default                                                   = 1,
	EPaladinUIMouseCursor__Type1                                                     = 2,
	EPaladinUIMouseCursor__EPaladinUIMouseCursor_MAX                                 = 3
};

/// Enum /Script/Pal7.EChangeNumberType
/// Size: 0x03
enum class EChangeNumberType : uint8_t
{
	EChangeNumberType__Increase                                                      = 0,
	EChangeNumberType__Reduce                                                        = 1,
	EChangeNumberType__EChangeNumberType_MAX                                         = 2
};

/// Enum /Script/Pal7.EPaladinLockChangeState
/// Size: 0x10
enum class EPaladinLockChangeState : uint8_t
{
	EPaladinLockChangeState__PalLock_NoneToPassive                                   = 0,
	EPaladinLockChangeState__PalLock_NoneToInitiative                                = 1,
	EPaladinLockChangeState__PalLock_PassiveToInitiative                             = 2,
	EPaladinLockChangeState__PalLock_PassiveToPassive                                = 3,
	EPaladinLockChangeState__PalLock_PassiveToNone                                   = 4,
	EPaladinLockChangeState__PalLock_InitiativeToPassive                             = 5,
	EPaladinLockChangeState__PalLock_InitiativeToInitiative                          = 6,
	EPaladinLockChangeState__PalLock_InitiativeToNone                                = 7,
	EPaladinLockChangeState__PalHero_None                                            = 10,
	EPaladinLockChangeState__EPaladinLockChangeState_MAX                             = 11
};

/// Enum /Script/Pal7.EQTEUMGType
/// Size: 0x05
enum class EQTEUMGType : uint8_t
{
	EQTEUMGType__SingleKeyPress                                                      = 0,
	EQTEUMGType__QTEWithProgress                                                     = 1,
	EQTEUMGType__CombatKeyPress                                                      = 2,
	EQTEUMGType__QTEUMGTypeMax                                                       = 3,
	EQTEUMGType__EQTEUMGType_MAX                                                     = 4
};

/// Enum /Script/Pal7.ECameraTemplate
/// Size: 0x05
enum class ECameraTemplate : uint8_t
{
	ECameraTemplate__CameraPitch_Low                                                 = 0,
	ECameraTemplate__CameraPitch_Middle                                              = 1,
	ECameraTemplate__CameraPitch_High                                                = 2,
	ECameraTemplate__CameraPitch_Custom                                              = 3,
	ECameraTemplate__CameraPitch_MAX                                                 = 4
};

/// Enum /Script/Pal7.ELightIntensity
/// Size: 0x05
enum class ELightIntensity : uint8_t
{
	ELightIntensity__ELight_Default                                                  = 0,
	ELightIntensity__ELight_Boss                                                     = 1,
	ELightIntensity__ELight_People                                                   = 2,
	ELightIntensity__ELight_Standby                                                  = 3,
	ELightIntensity__ELight_MAX                                                      = 4
};

/// Enum /Script/Pal7.EPaladinHeroWeaponState
/// Size: 0x07
enum class EPaladinHeroWeaponState : uint8_t
{
	EPaladinHeroWeaponState__PHWS_OnBody                                             = 0,
	EPaladinHeroWeaponState__PHWS_PickingUp                                          = 1,
	EPaladinHeroWeaponState__PHWS_InHand                                             = 2,
	EPaladinHeroWeaponState__PHWS_PuttingDown                                        = 3,
	EPaladinHeroWeaponState__PHWS_Null                                               = 4,
	EPaladinHeroWeaponState__PHWS_YuLing                                             = 5,
	EPaladinHeroWeaponState__PHWS_MAX                                                = 6
};

/// Enum /Script/Pal7.EPaladinBossStateType
/// Size: 0x06
enum class EPaladinBossStateType : uint8_t
{
	EPaladinBossStateType__EPalBS_None                                               = 0,
	EPaladinBossStateType__EPalBS_HuaLiu_KuangBao                                    = 1,
	EPaladinBossStateType__EPalBS_DuZhangWeiShu_ZhongDu                              = 2,
	EPaladinBossStateType__EPalBS_JingJianRenOu_HuDun                                = 3,
	EPaladinBossStateType__EPalBS_XiuWu_ZhongDu                                      = 4,
	EPaladinBossStateType__EPalBS_MAX                                                = 5
};

/// Enum /Script/Pal7.EPaladinPhotoMode
/// Size: 0x17
enum class EPaladinPhotoMode : uint8_t
{
	EPaladinPhotoMode__EPalPhoto_FocusLength                                         = 0,
	EPaladinPhotoMode__EPalPhoto_Aperture                                            = 1,
	EPaladinPhotoMode__EPalPhoto_FOV                                                 = 2,
	EPaladinPhotoMode__EPalPhoto_XRotation                                           = 3,
	EPaladinPhotoMode__EPalPhoto_Exposure                                            = 4,
	EPaladinPhotoMode__EPalPhoto_Filter                                              = 5,
	EPaladinPhotoMode__EPalPhoto_Chroma                                              = 6,
	EPaladinPhotoMode__EPalPhoto_Role                                                = 7,
	EPaladinPhotoMode__EPalPhoto_Action                                              = 8,
	EPaladinPhotoMode__EPalPhoto_Face                                                = 9,
	EPaladinPhotoMode__EPalPhoto_Decor                                               = 10,
	EPaladinPhotoMode__EPalPhoto_Frame                                               = 11,
	EPaladinPhotoMode__EPalPhoto_FrameSharpness                                      = 12,
	EPaladinPhotoMode__EPalPhoto_Decals                                              = 13,
	EPaladinPhotoMode__EPalPhoto_DecalsSharpness                                     = 14,
	EPaladinPhotoMode__EPalPhoto_Num                                                 = 15,
	EPaladinPhotoMode__EPalPhoto_MAX                                                 = 16
};

/// Enum /Script/Pal7.EOpenFunctionID
/// Size: 0x17
enum class EOpenFunctionID : uint8_t
{
	EOpenFunctionID__OpenFunctionID_QuickOpen                                        = 0,
	EOpenFunctionID__OpenFunctionID_Pet                                              = 1,
	EOpenFunctionID__OpenFunctionID_Museum                                           = 2,
	EOpenFunctionID__OpenFunctionID_CardGame                                         = 3,
	EOpenFunctionID__OpenFunctionID_Suit                                             = 4,
	EOpenFunctionID__OpenFunctionID_WeaponSkin                                       = 5,
	EOpenFunctionID__OpenFunctionID_HeroAwake                                        = 6,
	EOpenFunctionID__OpenFunctionID_HeroSummon                                       = 7,
	EOpenFunctionID__OpenFunctionID_UseItem                                          = 8,
	EOpenFunctionID__OpenFunctionID_Skill                                            = 9,
	EOpenFunctionID__OpenFunctionID_Overview                                         = 10,
	EOpenFunctionID__OpenFunctionID_Nv1InTeamOpenPet                                 = 11,
	EOpenFunctionID__OpenFunctionID_BigMap                                           = 12,
	EOpenFunctionID__OpenFunctionID_MiddleMap                                        = 13,
	EOpenFunctionID__OpenFunctionID_SQChangeSpeed                                    = 14,
	EOpenFunctionID__OpenFunctionID_None                                             = 15,
	EOpenFunctionID__OpenFunctionID_MAX                                              = 16
};

/// Enum /Script/Pal7.EPaladinBossDebuffType
/// Size: 0x04
enum class EPaladinBossDebuffType : uint8_t
{
	EPaladinBossDebuffType__EDebuff_None                                             = 0,
	EPaladinBossDebuffType__EDebuff_HpLimit                                          = 1,
	EPaladinBossDebuffType__EDebuff_HpMpExchange                                     = 2,
	EPaladinBossDebuffType__EDebuff_MAX                                              = 3
};

/// Enum /Script/Pal7.EFoot
/// Size: 0x04
enum class EFoot : uint8_t
{
	EFoot__E_Null                                                                    = 0,
	EFoot__E_LeftFoot                                                                = 1,
	EFoot__E_RightFoot                                                               = 2,
	EFoot__E_MAX                                                                     = 3
};

/// Enum /Script/Pal7.EPaladinPhotoModeType
/// Size: 0x04
enum class EPaladinPhotoModeType : uint8_t
{
	EPaladinPhotoModeType__EPalPhoto_Camera                                          = 0,
	EPaladinPhotoModeType__EPalPhoto_Hero                                            = 1,
	EPaladinPhotoModeType__EPalPhoto_Its                                             = 2,
	EPaladinPhotoModeType__EPalPhoto_MAX                                             = 3
};

/// Enum /Script/Pal7.EPaladinPhotoStateMode
/// Size: 0x04
enum class EPaladinPhotoStateMode : uint8_t
{
	EPaladinPhotoStateMode__EPhotoState_CurTaking                                    = 0,
	EPaladinPhotoStateMode__EPhotoState_PreviewEdit                                  = 1,
	EPaladinPhotoStateMode__EPhotoState_ExitPhoto                                    = 2,
	EPaladinPhotoStateMode__EPhotoState_MAX                                          = 3
};

/// Enum /Script/Pal7.EMiniMapPinType
/// Size: 0x03
enum class EMiniMapPinType : uint8_t
{
	EMiniMapPinType__PinMapPanel                                                     = 0,
	EMiniMapPinType__PinPlayerForward                                                = 1,
	EMiniMapPinType__EMiniMapPinType_MAX                                             = 2
};

/// Enum /Script/Pal7.ECruiseGameState
/// Size: 0x04
enum class ECruiseGameState : uint8_t
{
	ECruiseGameState__CS_Begine                                                      = 0,
	ECruiseGameState__CS_PrepareEnd                                                  = 1,
	ECruiseGameState__CS_End                                                         = 2,
	ECruiseGameState__CS_MAX                                                         = 3
};

/// Enum /Script/Pal7.EPaladinNPCEnableCompositeMode
/// Size: 0x04
enum class EPaladinNPCEnableCompositeMode : uint8_t
{
	EPaladinNPCEnableCompositeMode__MODE_NORMAL                                      = 0,
	EPaladinNPCEnableCompositeMode__MODE_OTHERFALSE                                  = 1,
	EPaladinNPCEnableCompositeMode__MODE_NONE                                        = 2,
	EPaladinNPCEnableCompositeMode__MODE_MAX                                         = 3
};

/// Enum /Script/Pal7.EAchievementType
/// Size: 0x05
enum class EAchievementType : uint8_t
{
	EAchievementType__BattleAchievement                                              = 0,
	EAchievementType__StoryAchievement                                               = 1,
	EAchievementType__SystemAchievement                                              = 2,
	EAchievementType__SideQuestAchievement                                           = 3,
	EAchievementType__EAchievementType_MAX                                           = 4
};

/// Enum /Script/Pal7.EMedalType
/// Size: 0x05
enum class EMedalType : uint8_t
{
	EMedalType__Bronze                                                               = 0,
	EMedalType__Silver                                                               = 1,
	EMedalType__Gold                                                                 = 2,
	EMedalType__Platinum                                                             = 3,
	EMedalType__EMedalType_MAX                                                       = 4
};

/// Enum /Script/Pal7.EActionRotateMode
/// Size: 0x03
enum class EActionRotateMode : uint8_t
{
	EActionRotateMode__ActionRotate_ToAngle                                          = 0,
	EActionRotateMode__ActionRotate_ToTarget                                         = 1,
	EActionRotateMode__ActionRotate_MAX                                              = 2
};

/// Enum /Script/Pal7.EAddionalMessageCondition
/// Size: 0x07
enum class EAddionalMessageCondition : uint8_t
{
	EAddionalMessageCondition__Equal                                                 = 0,
	EAddionalMessageCondition__NotEqual                                              = 1,
	EAddionalMessageCondition__MoreThan                                              = 2,
	EAddionalMessageCondition__LessThan                                              = 3,
	EAddionalMessageCondition__MoreAndEqual                                          = 4,
	EAddionalMessageCondition__LessAndEqual                                          = 5,
	EAddionalMessageCondition__EAddionalMessageCondition_MAX                         = 6
};

/// Enum /Script/Pal7.EAnimationTargetType
/// Size: 0x04
enum class EAnimationTargetType : uint8_t
{
	EAnimationTargetType__E_AnimationTargetType_None                                 = 0,
	EAnimationTargetType__E_AnimationTargetType_Self                                 = 1,
	EAnimationTargetType__E_AnimationTargetType_Target                               = 2,
	EAnimationTargetType__E_AnimationTargetType_MAX                                  = 3
};

/// Enum /Script/Pal7.ESpecialEnvironment
/// Size: 0x04
enum class ESpecialEnvironment : uint8_t
{
	ESpecialEnvironment__Null                                                        = 0,
	ESpecialEnvironment__Water                                                       = 1,
	ESpecialEnvironment__River                                                       = 2,
	ESpecialEnvironment__ESpecialEnvironment_MAX                                     = 3
};

/// Enum /Script/Pal7.EMovementState
/// Size: 0x07
enum class EMovementState : uint8_t
{
	EMovementState__E_Null                                                           = 0,
	EMovementState__E_Walk                                                           = 1,
	EMovementState__E_Run                                                            = 2,
	EMovementState__E_Rush                                                           = 3,
	EMovementState__E_Jump                                                           = 4,
	EMovementState__E_Dodge                                                          = 5,
	EMovementState__E_MAX                                                            = 6
};

/// Enum /Script/Pal7.AttackableNPCState
/// Size: 0x04
enum class AttackableNPCState : uint8_t
{
	AttackableNPCState__E_AttackAbleNPC_State_Idle                                   = 0,
	AttackableNPCState__E_AttackAbleNPC_State_InFighting                             = 1,
	AttackableNPCState__E_AttackAbleNPC_State_Die                                    = 2,
	AttackableNPCState__E_AttackAbleNPC_State_MAX                                    = 3
};

/// Enum /Script/Pal7.ENPCReceiveAttackedType
/// Size: 0x04
enum class ENPCReceiveAttackedType : uint8_t
{
	ENPCReceiveAttackedType__E_NPCReceiveDamage_From_Monster                         = 0,
	ENPCReceiveAttackedType__E_NPCReceiveDamage_From_Hero                            = 1,
	ENPCReceiveAttackedType__E_NPCReceiveDamage_From_BothMonsterAndHero              = 2,
	ENPCReceiveAttackedType__E_NPCReceiveDamage_From_MAX                             = 3
};

/// Enum /Script/Pal7.EHuoXianShouWeaponType
/// Size: 0x07
enum class EHuoXianShouWeaponType : uint8_t
{
	EHuoXianShouWeaponType__E_WEAPON_TYPE_Non                                        = 0,
	EHuoXianShouWeaponType__E_WEAPON_TYPE_CHANG_DAO                                  = 1,
	EHuoXianShouWeaponType__E_WEAPON_TYPE_CHUI_ZI                                    = 2,
	EHuoXianShouWeaponType__E_WEAPON_TYPE_DAO                                        = 3,
	EHuoXianShouWeaponType__E_WEAPON_TYPE_FUZI                                       = 4,
	EHuoXianShouWeaponType__E_WEAPON_TYPE_QIANG                                      = 5,
	EHuoXianShouWeaponType__E_WEAPON_TYPE_MAX                                        = 6
};

/// Enum /Script/Pal7.ETurnAroundMontageType
/// Size: 0x08
enum class ETurnAroundMontageType : uint8_t
{
	ETurnAroundMontageType__T_Montage_L                                              = 0,
	ETurnAroundMontageType__T_Montage_L2                                             = 1,
	ETurnAroundMontageType__T_Montage_L3                                             = 2,
	ETurnAroundMontageType__T_Montage_R                                              = 3,
	ETurnAroundMontageType__T_Montage_R5                                             = 4,
	ETurnAroundMontageType__T_Montage_R6                                             = 5,
	ETurnAroundMontageType__T_MONTAGE_MAX                                            = 6,
	ETurnAroundMontageType__T_MAX                                                    = 7
};

/// Enum /Script/Pal7.EDataCollectFileVersion
/// Size: 0x05
enum class EDataCollectFileVersion : uint8_t
{
	EDataCollectFileVersion__DC_V                                                    = 0,
	EDataCollectFileVersion__DC_V2                                                   = 1,
	EDataCollectFileVersion__DC_V3                                                   = 2,
	EDataCollectFileVersion__DC_V_CURRENT                                            = 3,
	EDataCollectFileVersion__DC_V_MAX                                                = 4
};

/// Enum /Script/Pal7.EQuestProgressType
/// Size: 0x05
enum class EQuestProgressType : uint8_t
{
	EQuestProgressType__NoAccept                                                     = 0,
	EQuestProgressType__InProgress                                                   = 1,
	EQuestProgressType__Finish                                                       = 2,
	EQuestProgressType__NotFinish                                                    = 3,
	EQuestProgressType__EQuestProgressType_MAX                                       = 4
};

/// Enum /Script/Pal7.EDialogueNodeType
/// Size: 0x08
enum class EDialogueNodeType : uint8_t
{
	EDialogueNodeType__SequenceNode                                                  = 0,
	EDialogueNodeType__PlayerChoiceSetNode                                           = 1,
	EDialogueNodeType__PlayerChoiceNode                                              = 2,
	EDialogueNodeType__BasicNode                                                     = 3,
	EDialogueNodeType__RandomNode                                                    = 4,
	EDialogueNodeType__TaskNode                                                      = 5,
	EDialogueNodeType__ActionNode                                                    = 6,
	EDialogueNodeType__EDialogueNodeType_MAX                                         = 7
};

/// Enum /Script/Pal7.EPaladinInteractionType
/// Size: 0x04
enum class EPaladinInteractionType : uint8_t
{
	EPaladinInteractionType__PalInteraction_Normal                                   = 0,
	EPaladinInteractionType__PalInteraction_LockEnemy                                = 1,
	EPaladinInteractionType__PalInteraction_NONE                                     = 10,
	EPaladinInteractionType__PalInteraction_MAX                                      = 11
};

/// Enum /Script/Pal7.EInteractionType
/// Size: 0x06
enum class EInteractionType : uint8_t
{
	EInteractionType__None                                                           = 0,
	EInteractionType__Dialogue                                                       = 1,
	EInteractionType__Pickup                                                         = 2,
	EInteractionType__ActionTask                                                     = 3,
	EInteractionType__Others                                                         = 4,
	EInteractionType__EInteractionType_MAX                                           = 5
};

/// Enum /Script/Pal7.EGainItemType
/// Size: 0x04
enum class EGainItemType : uint8_t
{
	EGainItemType__GIT_IMMEDIATELY                                                   = 0,
	EGainItemType__GIT_AFTERCUSTOMEVENT                                              = 1,
	EGainItemType__GIT_SPAWNSUBITEMS                                                 = 2,
	EGainItemType__GIT_MAX                                                           = 3
};

/// Enum /Script/Pal7.ELockType
/// Size: 0x04
enum class ELockType : uint8_t
{
	ELockType__E_Lock_State_None                                                     = 0,
	ELockType__E_Lock_State_Passive                                                  = 1,
	ELockType__E_Lock_State_Initiative                                               = 2,
	ELockType__E_Lock_State_MAX                                                      = 3
};

/// Enum /Script/Pal7.EDialogTriggerType
/// Size: 0x03
enum class EDialogTriggerType : uint8_t
{
	EDialogTriggerType__TriggerBattleBegin                                           = 0,
	EDialogTriggerType__TriggerBossHPPercent                                         = 1,
	EDialogTriggerType__EDialogTriggerType_MAX                                       = 2
};

/// Enum /Script/Pal7.EMengZhangAttackAttribute
/// Size: 0x04
enum class EMengZhangAttackAttribute : uint8_t
{
	EMengZhangAttackAttribute__MZ_ATKATTRIBUTE_BING                                  = 0,
	EMengZhangAttackAttribute__MZ_ATKATTRIBUTE_HUO                                   = 1,
	EMengZhangAttackAttribute__MZ_ATKATTRIBUTE_LEI                                   = 2,
	EMengZhangAttackAttribute__MZ_ATKATTRIBUTE_MAX                                   = 3
};

/// Enum /Script/Pal7.EPaladinSkillEffectMontage
/// Size: 0x04
enum class EPaladinSkillEffectMontage : uint8_t
{
	EPaladinSkillEffectMontage__MONTAGE_None                                         = 0,
	EPaladinSkillEffectMontage__MONTAGE_STUN                                         = 1,
	EPaladinSkillEffectMontage__MONTAGE_STUN_AIR                                     = 2,
	EPaladinSkillEffectMontage__MONTAGE_MAX                                          = 3
};

/// Enum /Script/Pal7.EPaladinActionMontage
/// Size: 0x16
enum class EPaladinActionMontage : uint8_t
{
	EPaladinActionMontage__MONTAGE_None                                              = 0,
	EPaladinActionMontage__MONTAGE_ALERT                                             = 1,
	EPaladinActionMontage__MONTAGE_BEATEN_FRONT                                      = 2,
	EPaladinActionMontage__MONTAGE_BEATEN_BACK                                       = 3,
	EPaladinActionMontage__MONTAGE_BEATEN_LEFT                                       = 4,
	EPaladinActionMontage__MONTAGE_BEATEN_RIGHT                                      = 5,
	EPaladinActionMontage__MONTAGE_BEATEN_FRONT2                                     = 6,
	EPaladinActionMontage__MONTAGE_BEATEN_BACK2                                      = 7,
	EPaladinActionMontage__MONTAGE_BEATEN_LEFT2                                      = 8,
	EPaladinActionMontage__MONTAGE_BEATEN_RIGHT2                                     = 9,
	EPaladinActionMontage__MONTAGE_GETUP_FRONT                                       = 10,
	EPaladinActionMontage__MONTAGE_GETUP_BACK                                        = 11,
	EPaladinActionMontage__MONTAGE_ATTACK                                            = 12,
	EPaladinActionMontage__MONTAGE_DEATH                                             = 13,
	EPaladinActionMontage__MONTAGE_Skill1                                            = 14,
	EPaladinActionMontage__MONTAGE_MAX                                               = 15
};

/// Enum /Script/Pal7.EMonsteraAnimStateNormal
/// Size: 0x05
enum class EMonsteraAnimStateNormal : uint8_t
{
	EMonsteraAnimStateNormal__E_MONSTER_ANIM_STATE_NORMAL_MOVEING                    = 0,
	EMonsteraAnimStateNormal__E_MONSTER_ANIM_STATE_NORMAL_IDLE                       = 1,
	EMonsteraAnimStateNormal__E_MONSTER_ANIM_STATE_NORMAL_DIE                        = 2,
	EMonsteraAnimStateNormal__E_MONSTER_ANIM_STATE_NORMAL_FALLDOWN                   = 3,
	EMonsteraAnimStateNormal__E_MONSTER_ANIM_STATE_NORMAL_MAX                        = 4
};

/// Enum /Script/Pal7.EMonsterSpeedMode
/// Size: 0x05
enum class EMonsterSpeedMode : uint8_t
{
	EMonsterSpeedMode__E_MONSTER_SPEED_TYPE_WALK                                     = 0,
	EMonsterSpeedMode__E_MONSTER_SPEED_TYPE_RUN                                      = 1,
	EMonsterSpeedMode__E_MONSTER_SPEED_TYPE_HOVER                                    = 2,
	EMonsterSpeedMode__E_MONSTER_SPEED_TYPE_FLY                                      = 3,
	EMonsterSpeedMode__E_MONSTER_SPEED_TYPE_MAX                                      = 4
};

/// Enum /Script/Pal7.EMonsterAttackType
/// Size: 0x04
enum class EMonsterAttackType : uint8_t
{
	EMonsterAttackType__E_MONSTER_ATK_TYPE_MELEE                                     = 0,
	EMonsterAttackType__E_MONSTER_ATK_TYPE_RANGE                                     = 1,
	EMonsterAttackType__E_MONSTER_ATK_TYPE_MIX                                       = 2,
	EMonsterAttackType__E_MONSTER_ATK_TYPE_MAX                                       = 3
};

/// Enum /Script/Pal7.EAISleepType
/// Size: 0x03
enum class EAISleepType : uint8_t
{
	EAISleepType__T_AISLEEP_NEVER                                                    = 0,
	EAISleepType__T_AISLEEP_BYDISTANCE                                               = 1,
	EAISleepType__T_AISLEEP_MAX                                                      = 2
};

/// Enum /Script/Pal7.EMonsterKind
/// Size: 0x109
enum class EMonsterKind : uint8_t
{
	EMonsterKind__MONSTER_NONE                                                       = 0,
	EMonsterKind__MONSTER_NORMAL_HUAYAO                                              = 1,
	EMonsterKind__MONSTER_NORMAL_YELING                                              = 2,
	EMonsterKind__MONSTER_NORMAL_FENGXIESHOU                                         = 3,
	EMonsterKind__MONSTER_NORMAL_SAIRENSHEN                                          = 4,
	EMonsterKind__MONSTER_NORMAL_WANSHIGUAI                                          = 5,
	EMonsterKind__MONSTER_NORMAL_JINGJIGUAI                                          = 6,
	EMonsterKind__MONSTER_NORMAL_CAIDAOPOPO                                          = 7,
	EMonsterKind__MONSTER_ELITE_MOHUARENSHEN                                         = 8,
	EMonsterKind__MONSTER_PATROLONLY_MOHUARENSHEN                                    = 9,
	EMonsterKind__MONSTER_NORMAL_XIQU                                                = 10,
	EMonsterKind__MONSTER_BOSS_XIUWU_Stage1                                          = 11,
	EMonsterKind__MONSTER_ELITE_GARGOYLE                                             = 12,
	EMonsterKind__MONSTER_NORMAL_JIALOULUO_MAN                                       = 13,
	EMonsterKind__MONSTER_ELITE_JIALOULUO_WOMAN                                      = 14,
	EMonsterKind__MONSTER_ELITE_BINGXUEJINGLING                                      = 15,
	EMonsterKind__MONSTER_ELITE_BINGXUEJINGLING_ELITE                                = 16,
	EMonsterKind__MONSTER_NORMAL_XUETONG                                             = 17,
	EMonsterKind__MONSTER_BOSS_KUIYU_B1_S1                                           = 18,
	EMonsterKind__MONSTER_BOSS_KUIYU_B1_S2                                           = 19,
	EMonsterKind__MONSTER_BOSS_KUIYU_B2                                              = 20,
	EMonsterKind__MONSTER_BOSS_HUALIU                                                = 21,
	EMonsterKind__MONSTER_NORMAL_UNFIGHT                                             = 22,
	EMonsterKind__MONSTER_BOSS_BINGXIANSHOU                                          = 23,
	EMonsterKind__MONSTER_NORMAL_BINGPIXIU                                           = 24,
	EMonsterKind__MONSTER_NORMAL_FENGHU                                              = 25,
	EMonsterKind__MONSTER_NORMAL_HUOPIXIU                                            = 26,
	EMonsterKind__MONSTER_BOSS_MENGZHANG                                             = 27,
	EMonsterKind__MONSTER_BOSS_CHONGLOU                                              = 28,
	EMonsterKind__MONSTER_NORMAL_SHUANGTOUSHE                                        = 29,
	EMonsterKind__MONSTER_NORMAL_SHEPIHUA                                            = 30,
	EMonsterKind__MONSTER_BOSS_QIOU_WUGOU                                            = 31,
	EMonsterKind__MONSTER_BOSS_QIOU_REHAI                                            = 32,
	EMonsterKind__MONSTER_BOSS_QIOU_WUHUN                                            = 33,
	EMonsterKind__MONSTER_BOSS_QIOU_LONGTAN                                          = 34,
	EMonsterKind__MONSTER_BOSS_QIOU_HANSUI                                           = 35,
	EMonsterKind__MONSTER_BOSS_AOQING_BENTI_S1                                       = 36,
	EMonsterKind__MONSTER_BOSS_AOQING_BENTI_S2                                       = 37,
	EMonsterKind__MONSTER_BOSS_AOQING_BENTI_S3                                       = 38,
	EMonsterKind__MONSTER_BOSS_AOQING_XUYING                                         = 39,
	EMonsterKind__MONSTER_NORMAL_SUMMONING_NV1                                       = 40,
	EMonsterKind__MONSTER_NORMAL_SUMMONING_NAN1                                      = 41,
	EMonsterKind__MONSTER_BOSS_JINGRENOU                                             = 42,
	EMonsterKind__MONSTER_BOSS_JIANRENOU                                             = 43,
	EMonsterKind__MONSTER_NORMAL_SHIRENHUA                                           = 44,
	EMonsterKind__MONSTER_BOSS_JIUYING                                               = 45,
	EMonsterKind__MONSTER_NORMAL_GUAIZAICHONG                                        = 46,
	EMonsterKind__MONSTER_NORMAL_HEGULAN                                             = 47,
	EMonsterKind__MONSTER_NORMAL_ANXIANG                                             = 48,
	EMonsterKind__MONSTER_NORMAL_MOLANG                                              = 49,
	EMonsterKind__MONSTER_BOSS_DUZHANGQIOU                                           = 50,
	EMonsterKind__MONSTER_BOSS_DUZHANGQIOU_JIUYING                                   = 51,
	EMonsterKind__MONSTER_BOSS_HUOXIANSHOU                                           = 52,
	EMonsterKind__MONSTER_BOSS_CHIRU                                                 = 53,
	EMonsterKind__MONSTER_BOSS_DUZHANGWEISHU                                         = 54,
	EMonsterKind__MONSTER_NORMAL_MOLONG                                              = 55,
	EMonsterKind__MONSTER_NORMAL_BANBOJIAZHOU                                        = 56,
	EMonsterKind__MONSTER_NORMAL_DengLongCaoJing                                     = 57,
	EMonsterKind__MONSTER_NORMAL_JianShi                                             = 58,
	EMonsterKind__MONSTER_BOSS_MOHUAI                                                = 59,
	EMonsterKind__MONSTER_MOHUAI_CHUSHOU                                             = 60,
	EMonsterKind__MONSTER_MOHUAI_CHUSHOU62                                           = 61,
	EMonsterKind__MONSTER_MOHUAI_CHUSHOU63                                           = 62,
	EMonsterKind__MONSTER_MOHUAI_CHUSHOU64                                           = 63,
	EMonsterKind__MONSTER_BOSS_JIALOULUOWANG                                         = 64,
	EMonsterKind__MONSTER_NORMAL_BAIJIASHIBING_GONG                                  = 65,
	EMonsterKind__MONSTER_NORMAL_BAIJIASHIBING_QIANG                                 = 66,
	EMonsterKind__MONSTER_NORMAL_BAIJIASHIBING_NUCHE                                 = 67,
	EMonsterKind__MONSTER_NORMAL_MOLANGJINAGYING                                     = 68,
	EMonsterKind__MONSTER_NORMAL_FULING                                              = 69,
	EMonsterKind__MONSTER_NORMAL_HUAYAO_LAN                                          = 70,
	EMonsterKind__MONSTER_NORMAL_ZHAOZEYUGUAI                                        = 71,
	EMonsterKind__MONSTER_NORMAL_ZHAOZEYUGUAIELITE                                   = 72,
	EMonsterKind__MONSTER_NORMAL_WANSHIGUAI2                                         = 73,
	EMonsterKind__MONSTER_ELITE_JianShi                                              = 74,
	EMonsterKind__MONSTER_QUEST_JINGJIGUAI_CHAP01                                    = 75,
	EMonsterKind__MONSTER_NORMAL_DIEXIAN                                             = 76,
	EMonsterKind__MONSTER_NORMAL_HUOSHU                                              = 77,
	EMonsterKind__MONSTER_NORMAL_RENMIANZHU                                          = 78,
	EMonsterKind__MONSTER_NORMAL_CAIDAOPOPOELITE                                     = 79,
	EMonsterKind__MONSTER_NORMAL_TONGCAO                                             = 80,
	EMonsterKind__MONSTER_NORMAL_AIZAINIAO                                           = 81,
	EMonsterKind__MONSTER_NORMAL_JINGRENOU_JINGZI                                    = 82,
	EMonsterKind__MONSTER_BOSS_XIUWU_Stage2                                          = 83,
	EMonsterKind__MONSTER_NORMAL_JianYu                                              = 84,
	EMonsterKind__MONSTER_BOSS_JIALOULUOWANGZHUIJI                                   = 85,
	EMonsterKind__MONSTER_NORMAL_SHENGUANXUYING_ZHENFADENGTA                         = 86,
	EMonsterKind__MONSTER_NORMAL_SHENGUANXUYING_GONGJIFULING                         = 87,
	EMonsterKind__MONSTER_NORMAL_SHENGUANXUYING_ZhiLiaoFULING                        = 88,
	EMonsterKind__MONSTER_ELITE_JINGJIGUAI                                           = 89,
	EMonsterKind__MONSTER_NORMAL_SHENGUANXUYING_FangHuZhao                           = 90,
	EMonsterKind__MONSTER_BOSS_CHONGLOUDIYIZHAN                                      = 91,
	EMonsterKind__MONSTER_NORMAL_ANXIANGELITE                                        = 92,
	EMonsterKind__MONSTER_ELITEE_FENGXIESHOU                                         = 93,
	EMonsterKind__MONSTER_NORMAL_XUETONGBLUE                                         = 94,
	EMonsterKind__MONSTER_BOSS_QIOUQUN                                               = 95,
	EMonsterKind__MONSTER_NORMAL_JIALOULUO_WOMAN_ZHUIZHU                             = 97,
	EMonsterKind__MONSTER_JIANSHI_GROUP                                              = 98,
	EMonsterKind__MONSTER_NORMAL_YELING_HAIDAO                                       = 99,
	EMonsterKind__MONSTER_QUEST_CAIDAOPOPO                                           = 100,
	EMonsterKind__MONSTER_QUEST_JINGJIGUAI_MAINQUESTCH01                             = 101,
	EMonsterKind__MONSTER_NORMAL_JIALOULUO_MAN_XUZHANG                               = 102,
	EMonsterKind__MONSTER_NORMAL_JIALOULUO_WOMAN_XUZHANG                             = 103,
	EMonsterKind__MONSTER_QUEST_TIAOZHANRENWU_MOLANG                                 = 104,
	EMonsterKind__MONSTER_UNFIGHT_SHUIWA                                             = 105,
	EMonsterKind__MONSTER_NORMAL_BAIJIASHIBING_GONG_FUMO                             = 106,
	EMonsterKind__MONSTER_NORMAL_BAIJIASHIBING_QIANG_FUMO                            = 107,
	EMonsterKind__MONSTER_NORMAL_BAIJIASHIBING_NUCHE_FUMO                            = 108,
	EMonsterKind__MONSTER_MAX                                                        = 109
};

/// Enum /Script/Pal7.EEnemyState
/// Size: 0x03
enum class EEnemyState : uint8_t
{
	EEnemyState__E_ENEMYSTATE_FIGHTING_READY                                         = 0,
	EEnemyState__E_ENEMYSTATE_FIGHTING_WAIT                                          = 1,
	EEnemyState__E_ENEMYSTATE_FIGHTING_MAX                                           = 2
};

/// Enum /Script/Pal7.ENavigationDirection
/// Size: 0x03
enum class ENavigationDirection : uint8_t
{
	ENavigationDirection__Horizontal                                                 = 0,
	ENavigationDirection__Vertical                                                   = 1,
	ENavigationDirection__ENavigationDirection_MAX                                   = 2
};

/// Enum /Script/Pal7.EPaladinSpecialEffectTargetType
/// Size: 0x05
enum class EPaladinSpecialEffectTargetType : uint8_t
{
	EPaladinSpecialEffectTargetType__Global                                          = 0,
	EPaladinSpecialEffectTargetType__OnlyTarget                                      = 1,
	EPaladinSpecialEffectTargetType__OnlySource                                      = 2,
	EPaladinSpecialEffectTargetType__BothSourceAndTarget                             = 3,
	EPaladinSpecialEffectTargetType__EPaladinSpecialEffectTargetType_MAX             = 4
};

/// Enum /Script/Pal7.ETargetFilterType
/// Size: 0x04
enum class ETargetFilterType : uint8_t
{
	ETargetFilterType__E_Filter_Friend                                               = 0,
	ETargetFilterType__E_Filter_Enemy                                                = 1,
	ETargetFilterType__E_Filter_All                                                  = 2,
	ETargetFilterType__E_Filter_MAX                                                  = 3
};

/// Enum /Script/Pal7.EPaladinAbilityEffectType
/// Size: 0x05
enum class EPaladinAbilityEffectType : uint8_t
{
	EPaladinAbilityEffectType__PAET_None                                             = 0,
	EPaladinAbilityEffectType__PAET_Buff                                             = 1,
	EPaladinAbilityEffectType__PAET_TimeDilatin                                      = 2,
	EPaladinAbilityEffectType__PAET_CameraShake                                      = 3,
	EPaladinAbilityEffectType__PAET_MAX                                              = 4
};

/// Enum /Script/Pal7.EPaladinActionScope
/// Size: 0x04
enum class EPaladinActionScope : uint8_t
{
	EPaladinActionScope__System                                                      = 0,
	EPaladinActionScope__Hero                                                        = 1,
	EPaladinActionScope__Owner                                                       = 2,
	EPaladinActionScope__EPaladinActionScope_MAX                                     = 3
};

/// Enum /Script/Pal7.EAnimalNPCState
/// Size: 0x06
enum class EAnimalNPCState : uint8_t
{
	EAnimalNPCState__Idle                                                            = 0,
	EAnimalNPCState__Walk                                                            = 1,
	EAnimalNPCState__Scared                                                          = 2,
	EAnimalNPCState__Crouch                                                          = 3,
	EAnimalNPCState__Around                                                          = 4,
	EAnimalNPCState__EAnimalNPCState_MAX                                             = 5
};

/// Enum /Script/Pal7.EAudioType
/// Size: 0x04
enum class EAudioType : uint8_t
{
	EAudioType__ENull                                                                = 0,
	EAudioType__ELevelBGM                                                            = 1,
	EAudioType__EEnvironment                                                         = 2,
	EAudioType__EAudioType_MAX                                                       = 3
};

/// Enum /Script/Pal7.EAudioChannelType
/// Size: 0x05
enum class EAudioChannelType : uint8_t
{
	EAudioChannelType__NONE                                                          = 0,
	EAudioChannelType__BGM                                                           = 1,
	EAudioChannelType__Volume                                                        = 2,
	EAudioChannelType__Boss                                                          = 3,
	EAudioChannelType__EAudioChannelType_MAX                                         = 4
};

/// Enum /Script/Pal7.ELoadingType
/// Size: 0x05
enum class ELoadingType : uint8_t
{
	ELoadingType__NotLoading                                                         = 0,
	ELoadingType__UILoading                                                          = 1,
	ELoadingType__LevelLoading                                                       = 2,
	ELoadingType__SequenceLoading                                                    = 3,
	ELoadingType__ELoadingType_MAX                                                   = 4
};

/// Enum /Script/Pal7.ESoundVolumeControlType
/// Size: 0x06
enum class ESoundVolumeControlType : uint8_t
{
	ESoundVolumeControlType__ENull                                                   = 0,
	ESoundVolumeControlType__EGlobalVolume                                           = 1,
	ESoundVolumeControlType__EBGMVolume                                              = 2,
	ESoundVolumeControlType__EEnvironmentVolume                                      = 3,
	ESoundVolumeControlType__EVoice                                                  = 4,
	ESoundVolumeControlType__ESoundVolumeControlType_MAX                             = 5
};

/// Enum /Script/Pal7.EMeshConfigType
/// Size: 0x03
enum class EMeshConfigType : uint8_t
{
	EMeshConfigType__MergeMesh                                                       = 0,
	EMeshConfigType__SetMasterPose                                                   = 1,
	EMeshConfigType__EMeshConfigType_MAX                                             = 2
};

/// Enum /Script/Pal7.EBaseAttr
/// Size: 0x11
enum class EBaseAttr : uint8_t
{
	EBaseAttr__E_Null                                                                = 0,
	EBaseAttr__E_CharacterLevel                                                      = 1,
	EBaseAttr__E_HP                                                                  = 2,
	EBaseAttr__E_MAXHP                                                               = 3,
	EBaseAttr__E_MP                                                                  = 4,
	EBaseAttr__E_MAXMP                                                               = 5,
	EBaseAttr__E_PhysicalAtk                                                         = 6,
	EBaseAttr__E_PhysicalDef                                                         = 7,
	EBaseAttr__E_SpellAtk                                                            = 8,
	EBaseAttr__E_SpellDef                                                            = 9,
	EBaseAttr__E_MAX                                                                 = 10
};

/// Enum /Script/Pal7.EBattleVoiceType
/// Size: 0x09
enum class EBattleVoiceType : uint8_t
{
	EBattleVoiceType__BV_None                                                        = 0,
	EBattleVoiceType__BV_BattleEndPartnerVoice                                       = 1,
	EBattleVoiceType__BV_ChangePlayerVoice                                           = 2,
	EBattleVoiceType__BV_MonsterBegineInBattle                                       = 4,
	EBattleVoiceType__BV_PartnerEncourange                                           = 8,
	EBattleVoiceType__BV_PartnerWorry                                                = 16,
	EBattleVoiceType__BV_DieOrRespawnVoice                                           = 32,
	EBattleVoiceType__BV_All                                                         = 255,
	EBattleVoiceType__BV_MAX                                                         = 256
};

/// Enum /Script/Pal7.AudioType
/// Size: 0x04
enum class AudioType : uint8_t
{
	AudioType__Music                                                                 = 0,
	AudioType__Effects                                                               = 1,
	AudioType__voice                                                                 = 2,
	AudioType__AudioType_MAX                                                         = 3
};

/// Enum /Script/Pal7.EPaladinCameraTransType
/// Size: 0x03
enum class EPaladinCameraTransType : uint8_t
{
	EPaladinCameraTransType__PalCamera_Normal                                        = 0,
	EPaladinCameraTransType__PalCamera_MoreMonster                                   = 1,
	EPaladinCameraTransType__PalCamera_MAX                                           = 2
};

/// Enum /Script/Pal7.ECharacterAttckType
/// Size: 0x04
enum class ECharacterAttckType : uint8_t
{
	ECharacterAttckType__T_DEFAULT                                                   = 0,
	ECharacterAttckType__T_RANGE                                                     = 1,
	ECharacterAttckType__T_MELEE                                                     = 2,
	ECharacterAttckType__T_MAX                                                       = 3
};

/// Enum /Script/Pal7.EBeatenBackDirection
/// Size: 0x06
enum class EBeatenBackDirection : uint8_t
{
	EBeatenBackDirection__BEATE_INVALID                                              = 0,
	EBeatenBackDirection__BEATEN_FRONT                                               = 1,
	EBeatenBackDirection__BEATEN_BACK                                                = 2,
	EBeatenBackDirection__BEATEN_LEFT                                                = 3,
	EBeatenBackDirection__BEATEN_RIGHT                                               = 4,
	EBeatenBackDirection__EBeatenBackDirection_MAX                                   = 5
};

/// Enum /Script/Pal7.EPaladinPassiveMoveMode
/// Size: 0x04
enum class EPaladinPassiveMoveMode : uint8_t
{
	EPaladinPassiveMoveMode__PPM_UseAnimationSpeed                                   = 0,
	EPaladinPassiveMoveMode__PPM_CustomSpeed                                         = 1,
	EPaladinPassiveMoveMode__PPM_UseAnimationVelocity                                = 2,
	EPaladinPassiveMoveMode__PPM_MAX                                                 = 3
};

/// Enum /Script/Pal7.EUseSkillFailErrorCode
/// Size: 0x05
enum class EUseSkillFailErrorCode : uint8_t
{
	EUseSkillFailErrorCode__SFEC_None                                                = 0,
	EUseSkillFailErrorCode__SFEC_NotEnoughMP                                         = 1,
	EUseSkillFailErrorCode__SFEC_CD                                                  = 2,
	EUseSkillFailErrorCode__SFEC_CannotUseWhenNotInFight                             = 3,
	EUseSkillFailErrorCode__SFEC_MAX                                                 = 4
};

/// Enum /Script/Pal7.EPaladinLogicalOperation
/// Size: 0x03
enum class EPaladinLogicalOperation : uint8_t
{
	EPaladinLogicalOperation__AND                                                    = 0,
	EPaladinLogicalOperation__OR                                                     = 1,
	EPaladinLogicalOperation__EPaladinLogicalOperation_MAX                           = 2
};

/// Enum /Script/Pal7.EPaladinCookFailReason
/// Size: 0x07
enum class EPaladinCookFailReason : uint8_t
{
	EPaladinCookFailReason__CFR_Unknown                                              = 0,
	EPaladinCookFailReason__CFR_Empty                                                = 1,
	EPaladinCookFailReason__CFR_Success                                              = 2,
	EPaladinCookFailReason__CST_Money                                                = 3,
	EPaladinCookFailReason__CST_Material                                             = 4,
	EPaladinCookFailReason__CFR_PerfectSuccess                                       = 5,
	EPaladinCookFailReason__EPaladinCookFailReason_MAX                               = 6
};

/// Enum /Script/Pal7.ECanAwakeState
/// Size: 0x04
enum class ECanAwakeState : uint8_t
{
	ECanAwakeState__CAS_None                                                         = 0,
	ECanAwakeState__CAS_Normal                                                       = 1,
	ECanAwakeState__CAS_Super                                                        = 2,
	ECanAwakeState__CAS_MAX                                                          = 3
};

/// Enum /Script/Pal7.EPaladinEngineGameMode
/// Size: 0x04
enum class EPaladinEngineGameMode : uint8_t
{
	EPaladinEngineGameMode__PalEngineGame_Engine                                     = 0,
	EPaladinEngineGameMode__PalEngineGame_PlayInEditor                               = 1,
	EPaladinEngineGameMode__PalEngineGame_StandaloneGame                             = 2,
	EPaladinEngineGameMode__PalEngineGame_MAX                                        = 3
};

/// Enum /Script/Pal7.EPaladinGameMode
/// Size: 0x06
enum class EPaladinGameMode : uint8_t
{
	EPaladinGameMode__PalGameMode_Normal                                             = 0,
	EPaladinGameMode__PalGameMode_Battle                                             = 1,
	EPaladinGameMode__PalGameMode_CardGame                                           = 2,
	EPaladinGameMode__PalGameMode_SplineGame                                         = 3,
	EPaladinGameMode__PalGameMode_PatroleGame                                        = 4,
	EPaladinGameMode__PalGameMode_MAX                                                = 5
};

/// Enum /Script/Pal7.EPaladinGameCulture
/// Size: 0x05
enum class EPaladinGameCulture : uint8_t
{
	EPaladinGameCulture__EPGC_Default                                                = 0,
	EPaladinGameCulture__EPGC_TraditionalChinese                                     = 1,
	EPaladinGameCulture__EPGC_English                                                = 2,
	EPaladinGameCulture__EPGC_Japanese                                               = 3,
	EPaladinGameCulture__EPGC_MAX                                                    = 4
};

/// Enum /Script/Pal7.EPaladinAbilityInputBinds
/// Size: 0x04
enum class EPaladinAbilityInputBinds : uint8_t
{
	EPaladinAbilityInputBinds__UnKnown                                               = 0,
	EPaladinAbilityInputBinds__ComboSkill                                            = 1,
	EPaladinAbilityInputBinds__PassiveAbility                                        = 2,
	EPaladinAbilityInputBinds__EPaladinAbilityInputBinds_MAX                         = 3
};

/// Enum /Script/Pal7.EPaladinCurveType
/// Size: 0x03
enum class EPaladinCurveType : uint8_t
{
	EPaladinCurveType__E_Curve_Type_Scalar                                           = 0,
	EPaladinCurveType__E_Curve_Type_LinearColor                                      = 1,
	EPaladinCurveType__E_Curve_Type_MAX                                              = 2
};

/// Enum /Script/Pal7.ESettingType
/// Size: 0x05
enum class ESettingType : uint8_t
{
	ESettingType__ES_Gameplay                                                        = 0,
	ESettingType__ES_Keys                                                            = 1,
	ESettingType__ES_Graphics                                                        = 2,
	ESettingType__ES_Audio                                                           = 3,
	ESettingType__ES_MAX                                                             = 4
};

/// Enum /Script/Pal7.ENVRTXType
/// Size: 0x06
enum class ENVRTXType : uint8_t
{
	ENVRTXType__EN_NVRTX                                                             = 0,
	ENVRTXType__EN_RTReflex                                                          = 1,
	ENVRTXType__EN_RTShadow                                                          = 2,
	ENVRTXType__EN_RTVRay                                                            = 3,
	ENVRTXType__EN_NVDLSS                                                            = 4,
	ENVRTXType__EN_MAX                                                               = 5
};

/// Enum /Script/Pal7.EHardwareType
/// Size: 0x04
enum class EHardwareType : uint8_t
{
	EHardwareType__Unknown                                                           = 0,
	EHardwareType__PAL_NVRTX                                                         = 1,
	EHardwareType__PAL_AMD                                                           = 2,
	EHardwareType__EHardwareType_MAX                                                 = 3
};

/// Enum /Script/Pal7.EPaladinTravelType
/// Size: 0x04
enum class EPaladinTravelType : uint8_t
{
	EPaladinTravelType__NoMove                                                       = 0,
	EPaladinTravelType__Transform                                                    = 1,
	EPaladinTravelType__PlayerStart                                                  = 2,
	EPaladinTravelType__EPaladinTravelType_MAX                                       = 3
};

/// Enum /Script/Pal7.ECharacterUnInterruptedFlag
/// Size: 0x06
enum class ECharacterUnInterruptedFlag : uint8_t
{
	ECharacterUnInterruptedFlag__UnInterruptedFlag_None                              = 0,
	ECharacterUnInterruptedFlag__UnInterruptedFlag_Buff                              = 1,
	ECharacterUnInterruptedFlag__UnInterruptedFlag_Dodging                           = 2,
	ECharacterUnInterruptedFlag__UnInterruptedFlag_ActionUnInterruptAble             = 4,
	ECharacterUnInterruptedFlag__UnInterruptedFlag_InStruckDown                      = 8,
	ECharacterUnInterruptedFlag__UnInterruptedFlag_MAX                               = 9
};

/// Enum /Script/Pal7.ESkillPreLoadType
/// Size: 0x03
enum class ESkillPreLoadType : uint8_t
{
	ESkillPreLoadType__EPT_SYNC                                                      = 0,
	ESkillPreLoadType__EPT_ASYNC                                                     = 1,
	ESkillPreLoadType__EPT_MAX                                                       = 2
};

/// Enum /Script/Pal7.EPaladinAbilityControlType
/// Size: 0x07
enum class EPaladinAbilityControlType : uint8_t
{
	EPaladinAbilityControlType__PA_NormalAttack                                      = 0,
	EPaladinAbilityControlType__PA_Skill                                             = 1,
	EPaladinAbilityControlType__PA_AwakenTrigger                                     = 2,
	EPaladinAbilityControlType__PA_AwakenSkill                                       = 3,
	EPaladinAbilityControlType__PA_ComboAttack                                       = 4,
	EPaladinAbilityControlType__PAC_MAX                                              = 5,
	EPaladinAbilityControlType__EPaladinAbilityControlType_MAX                       = 6
};

/// Enum /Script/Pal7.EPaladinAbilityType
/// Size: 0x12
enum class EPaladinAbilityType : uint8_t
{
	EPaladinAbilityType__PA_PhysicalDmg                                              = 0,
	EPaladinAbilityType__PA_SpellDmg                                                 = 1,
	EPaladinAbilityType__PA_EarthDmg                                                 = 2,
	EPaladinAbilityType__PA_WaterDmg                                                 = 3,
	EPaladinAbilityType__PA_FireDmg                                                  = 4,
	EPaladinAbilityType__PA_WindDmg                                                  = 5,
	EPaladinAbilityType__PA_LightningDmg                                             = 6,
	EPaladinAbilityType__PA_Heal                                                     = 7,
	EPaladinAbilityType__PA_BUff                                                     = 8,
	EPaladinAbilityType__PA_DeBuff                                                   = 9,
	EPaladinAbilityType__PA_Poison                                                   = 10,
	EPaladinAbilityType__PA_MAX                                                      = 11
};

/// Enum /Script/Pal7.EPaladinCharacterType
/// Size: 0x05
enum class EPaladinCharacterType : uint8_t
{
	EPaladinCharacterType__Hero                                                      = 0,
	EPaladinCharacterType__Mob                                                       = 1,
	EPaladinCharacterType__Elite                                                     = 2,
	EPaladinCharacterType__Boss                                                      = 3,
	EPaladinCharacterType__EPaladinCharacterType_MAX                                 = 4
};

/// Enum /Script/Pal7.EPaladinAbilityActiveTurnWay
/// Size: 0x04
enum class EPaladinAbilityActiveTurnWay : uint8_t
{
	EPaladinAbilityActiveTurnWay__PAATW_None                                         = 0,
	EPaladinAbilityActiveTurnWay__PAATW_TurnToLockTargetInstant                      = 1,
	EPaladinAbilityActiveTurnWay__PAATW_TurnToLockTargetRotation                     = 2,
	EPaladinAbilityActiveTurnWay__PAATW_MAX                                          = 3
};

/// Enum /Script/Pal7.EPaladinKeyEventType
/// Size: 0x03
enum class EPaladinKeyEventType : uint8_t
{
	EPaladinKeyEventType__EPalKeyEventType_SystemCommondKeyMapping                   = 0,
	EPaladinKeyEventType__EPalKeyEventType_SystemCommondKeyAction                    = 1,
	EPaladinKeyEventType__EPalKeyEventType_MAX                                       = 2
};

/// Enum /Script/Pal7.EPaladinKeyEventDeviceType
/// Size: 0x04
enum class EPaladinKeyEventDeviceType : uint8_t
{
	EPaladinKeyEventDeviceType__PKEDT_UnKnow                                         = 0,
	EPaladinKeyEventDeviceType__PKEDT_Keyboard                                       = 1,
	EPaladinKeyEventDeviceType__PKEDT_Gamepad                                        = 2,
	EPaladinKeyEventDeviceType__PKEDT_MAX                                            = 3
};

/// Enum /Script/Pal7.EPaladinKeyPressedType
/// Size: 0x06
enum class EPaladinKeyPressedType : uint8_t
{
	EPaladinKeyPressedType__PKPT_Pressed                                             = 0,
	EPaladinKeyPressedType__PKPT_ShortPressed                                        = 1,
	EPaladinKeyPressedType__PKPT_LongPressed                                         = 2,
	EPaladinKeyPressedType__PKPT_Hold                                                = 3,
	EPaladinKeyPressedType__PKPT_Released                                            = 4,
	EPaladinKeyPressedType__PKPT_MAX                                                 = 5
};

/// Enum /Script/Pal7.EAbilityPhysicalDmgType
/// Size: 0x03
enum class EAbilityPhysicalDmgType : uint8_t
{
	EAbilityPhysicalDmgType__A_Melee                                                 = 0,
	EAbilityPhysicalDmgType__A_Ranged                                                = 1,
	EAbilityPhysicalDmgType__A_MAX                                                   = 2
};

/// Enum /Script/Pal7.EAbilityElementalType
/// Size: 0x07
enum class EAbilityElementalType : uint8_t
{
	EAbilityElementalType__NoElement                                                 = 0,
	EAbilityElementalType__Earth                                                     = 1,
	EAbilityElementalType__Water                                                     = 2,
	EAbilityElementalType__Fire                                                      = 3,
	EAbilityElementalType__Wind                                                      = 4,
	EAbilityElementalType__Lightning                                                 = 5,
	EAbilityElementalType__EAbilityElementalType_MAX                                 = 6
};

/// Enum /Script/Pal7.ECharacterActionStateFlags
/// Size: 0x07
enum class ECharacterActionStateFlags : uint8_t
{
	ECharacterActionStateFlags__CharacterActionState_None                            = 0,
	ECharacterActionStateFlags__CharacterActionState_Move                            = 1,
	ECharacterActionStateFlags__CharacterActionState_Turn                            = 2,
	ECharacterActionStateFlags__CharacterActionState_Dodge                           = 4,
	ECharacterActionStateFlags__CharacterActionState_Attack                          = 8,
	ECharacterActionStateFlags__CharacterActionState_Last                            = 16,
	ECharacterActionStateFlags__CharacterActionState_MAX                             = 17
};

/// Enum /Script/Pal7.EPaladinGameDifficulty
/// Size: 0x06
enum class EPaladinGameDifficulty : uint8_t
{
	EPaladinGameDifficulty__D_Easy                                                   = 0,
	EPaladinGameDifficulty__D_Normal                                                 = 1,
	EPaladinGameDifficulty__D_Hard                                                   = 2,
	EPaladinGameDifficulty__D_Nightmare                                              = 3,
	EPaladinGameDifficulty__D_BossChallenge                                          = 4,
	EPaladinGameDifficulty__D_Max                                                    = 5
};

/// Enum /Script/Pal7.EBreakLevel
/// Size: 0x06
enum class EBreakLevel : uint8_t
{
	EBreakLevel__BREAK_LEVEL_NONE                                                    = 0,
	EBreakLevel__BREAK_LEVEL_ANIMATIONONLY                                           = 1,
	EBreakLevel__BREAK_LEVEL_ANIMATIONANDBEATENBACK                                  = 2,
	EBreakLevel__BREAK_LEVEL_ANIMATIONANDBEATENBACK_STRONG                           = 3,
	EBreakLevel__BREAK_LEVEL_STRUCKDOWNONLY                                          = 4,
	EBreakLevel__BREAK_LEVEL_MAX                                                     = 5
};

/// Enum /Script/Pal7.EAnimUROType
/// Size: 0x03
enum class EAnimUROType : uint8_t
{
	EAnimUROType__URO_ByDistanceFactor                                               = 0,
	EAnimUROType__URO_ByMeshLod                                                      = 1,
	EAnimUROType__URO_MAX                                                            = 2
};

/// Enum /Script/Pal7.EGameEndReason
/// Size: 0x07
enum class EGameEndReason : uint8_t
{
	EGameEndReason__EGameEnd_KilledInNormalMonsterFighting                           = 0,
	EGameEndReason__EGameEnd_KilledInBossFighting                                    = 1,
	EGameEndReason__EGameEnd_KilledInMissionFighting                                 = 2,
	EGameEndReason__EGameEnd_MissionFailed                                           = 3,
	EGameEndReason__EGameEnd_GuidFailed                                              = 4,
	EGameEndReason__EGameEnd_Other                                                   = 5,
	EGameEndReason__EGameEnd_MAX                                                     = 6
};

/// Enum /Script/Pal7.ECardType
/// Size: 0x11
enum class ECardType : uint8_t
{
	ECardType__ECardType_Tian                                                        = 0,
	ECardType__ECardType_Di                                                          = 1,
	ECardType__ECardType_Ren                                                         = 2,
	ECardType__ECardType_All                                                         = 3,
	ECardType__ECardType_Num                                                         = 4,
	ECardType__ECardType_None                                                        = 5,
	ECardType__ECardType_TianDi                                                      = 6,
	ECardType__ECardType_TianRen                                                     = 7,
	ECardType__ECardType_DiRen                                                       = 8,
	ECardType__ECardType_TianDiRen                                                   = 9,
	ECardType__ECardType_MAX                                                         = 10
};

/// Enum /Script/Pal7.EItemRarity
/// Size: 0x07
enum class EItemRarity : uint8_t
{
	EItemRarity__IT_Common                                                           = 0,
	EItemRarity__IT_Uncommon                                                         = 1,
	EItemRarity__IT_Rare                                                             = 2,
	EItemRarity__IT_Epic                                                             = 3,
	EItemRarity__IT_Legendary                                                        = 4,
	EItemRarity__TC_Rarity_MAX                                                       = 5,
	EItemRarity__EItemRarity_MAX                                                     = 6
};

/// Enum /Script/Pal7.EJointStrikeType
/// Size: 0x04
enum class EJointStrikeType : uint8_t
{
	EJointStrikeType__JointStrikeType_None                                           = 0,
	EJointStrikeType__JointStrikeType_Base                                           = 1,
	EJointStrikeType__JointStrikeType_Advance                                        = 2,
	EJointStrikeType__JointStrikeType_MAX                                            = 3
};

/// Enum /Script/Pal7.EPaladinUIOrder
/// Size: 0x06
enum class EPaladinUIOrder : uint8_t
{
	EPaladinUIOrder__MainUI                                                          = 0,
	EPaladinUIOrder__FunctionUI                                                      = 1,
	EPaladinUIOrder__MessageBox                                                      = 2,
	EPaladinUIOrder__SequenceLoading                                                 = 3,
	EPaladinUIOrder__MapLoading                                                      = 4,
	EPaladinUIOrder__EPaladinUIOrder_MAX                                             = 5
};

/// Enum /Script/Pal7.EUIProperty
/// Size: 0x06
enum class EUIProperty : uint8_t
{
	EUIProperty__MainUI                                                              = 0,
	EUIProperty__FunctionUI                                                          = 1,
	EUIProperty__MessageBox                                                          = 2,
	EUIProperty__LoadingAssetUI                                                      = 3,
	EUIProperty__LoadingUI                                                           = 4,
	EUIProperty__EUIProperty_MAX                                                     = 5
};

/// Enum /Script/Pal7.EBeatenBackMode
/// Size: 0x04
enum class EBeatenBackMode : uint8_t
{
	EBeatenBackMode__BeatenBackMode_None                                             = 0,
	EBeatenBackMode__BeatenBackMode_PassiveMove                                      = 1,
	EBeatenBackMode__BeatenBackMode_Physics                                          = 2,
	EBeatenBackMode__BeatenBackMode_MAX                                              = 3
};

/// Enum /Script/Pal7.EPaladinSuperHeroState
/// Size: 0x05
enum class EPaladinSuperHeroState : uint8_t
{
	EPaladinSuperHeroState__None                                                     = 0,
	EPaladinSuperHeroState__AppearanceShow                                           = 1,
	EPaladinSuperHeroState__BeginFight                                               = 2,
	EPaladinSuperHeroState__HeroBack                                                 = 3,
	EPaladinSuperHeroState__EPaladinSuperHeroState_MAX                               = 4
};

/// Enum /Script/Pal7.EDashState
/// Size: 0x05
enum class EDashState : uint8_t
{
	EDashState__DashState_None                                                       = 0,
	EDashState__DashState_Start                                                      = 1,
	EDashState__DashState_MakeEffect                                                 = 2,
	EDashState__DashState_End                                                        = 3,
	EDashState__DashState_MAX                                                        = 4
};

/// Enum /Script/Pal7.EPaladinHeroAttackState
/// Size: 0x04
enum class EPaladinHeroAttackState : uint8_t
{
	EPaladinHeroAttackState__Attack_Normal                                           = 0,
	EPaladinHeroAttackState__Attack_Sprint                                           = 1,
	EPaladinHeroAttackState__Attack_Dodge                                            = 2,
	EPaladinHeroAttackState__Attack_MAX                                              = 3
};

/// Enum /Script/Pal7.EPaladinHeroWalkState
/// Size: 0x05
enum class EPaladinHeroWalkState : uint8_t
{
	EPaladinHeroWalkState__MS_SLOWWALK                                               = 0,
	EPaladinHeroWalkState__MS_WALK                                                   = 1,
	EPaladinHeroWalkState__MS_BATTLEWALK                                             = 2,
	EPaladinHeroWalkState__MS_SPRINT                                                 = 3,
	EPaladinHeroWalkState__MS_MAX                                                    = 4
};

/// Enum /Script/Pal7.EPaladinInteractResult
/// Size: 0x04
enum class EPaladinInteractResult : uint8_t
{
	EPaladinInteractResult__Succeeded                                                = 0,
	EPaladinInteractResult__Failed                                                   = 1,
	EPaladinInteractResult__Aborted                                                  = 2,
	EPaladinInteractResult__EPaladinInteractResult_MAX                               = 3
};

/// Enum /Script/Pal7.EItemForgeResult
/// Size: 0x05
enum class EItemForgeResult : uint8_t
{
	EItemForgeResult__IT_Forge_Success                                               = 0,
	EItemForgeResult__IT_Forge_MoneyNotEnough                                        = 1,
	EItemForgeResult__IT_Forge_MaterialNotEnough                                     = 2,
	EItemForgeResult__IT_Forge_Other                                                 = 3,
	EItemForgeResult__IT_Forge_MAX                                                   = 4
};

/// Enum /Script/Pal7.EItemEnhanceResult
/// Size: 0x07
enum class EItemEnhanceResult : uint8_t
{
	EItemEnhanceResult__IT_Enhance_Success                                           = 0,
	EItemEnhanceResult__IT_Enhance_MaxTimes                                          = 1,
	EItemEnhanceResult__IT_Enhance_MaxLevel                                          = 2,
	EItemEnhanceResult__IT_Enhance_MoneyNotEnough                                    = 3,
	EItemEnhanceResult__IT_Enhance_MaterialNotEnough                                 = 4,
	EItemEnhanceResult__IT_Enhance_Other                                             = 5,
	EItemEnhanceResult__IT_Enhance_MAX                                               = 6
};

/// Enum /Script/Pal7.EMarkInMapType
/// Size: 0x03
enum class EMarkInMapType : uint8_t
{
	EMarkInMapType__MiniMap                                                          = 0,
	EMarkInMapType__BigMap                                                           = 1,
	EMarkInMapType__EMarkInMapType_MAX                                               = 2
};

/// Enum /Script/Pal7.ERelativeZAxisType
/// Size: 0x04
enum class ERelativeZAxisType : uint8_t
{
	ERelativeZAxisType__NearlyHight                                                  = 0,
	ERelativeZAxisType__AbovePlayer                                                  = 1,
	ERelativeZAxisType__UnderPlayer                                                  = 2,
	ERelativeZAxisType__ERelativeZAxisType_MAX                                       = 3
};

/// Enum /Script/Pal7.EPaladinMarkCategory
/// Size: 0x25
enum class EPaladinMarkCategory : uint8_t
{
	EPaladinMarkCategory__PlayerMark                                                 = 0,
	EPaladinMarkCategory__PlayerCustomMark                                           = 1,
	EPaladinMarkCategory__MainQuestTrack                                             = 16,
	EPaladinMarkCategory__BranchQuestTrack                                           = 17,
	EPaladinMarkCategory__QuestPublisher                                             = 18,
	EPaladinMarkCategory__NoActivedQuestTrack                                        = 19,
	EPaladinMarkCategory__InactiveBranchQuest                                        = 20,
	EPaladinMarkCategory__InactiveQuestPublisher                                     = 21,
	EPaladinMarkCategory__InactiveVisiblePublisher                                   = 22,
	EPaladinMarkCategory__Custom                                                     = 32,
	EPaladinMarkCategory__Teammate                                                   = 33,
	EPaladinMarkCategory__Entrance                                                   = 48,
	EPaladinMarkCategory__Exit                                                       = 49,
	EPaladinMarkCategory__Forging                                                    = 50,
	EPaladinMarkCategory__Weapon                                                     = 51,
	EPaladinMarkCategory__Cargo                                                      = 52,
	EPaladinMarkCategory__Herbs                                                      = 53,
	EPaladinMarkCategory__Cook                                                       = 54,
	EPaladinMarkCategory__Jump                                                       = 55,
	EPaladinMarkCategory__Card                                                       = 56,
	EPaladinMarkCategory__Scenic                                                     = 57,
	EPaladinMarkCategory__Collection                                                 = 58,
	EPaladinMarkCategory__Museum                                                     = 59,
	EPaladinMarkCategory__None                                                       = 255,
	EPaladinMarkCategory__EPaladinMarkCategory_MAX                                   = 256
};

/// Enum /Script/Pal7.EDistrictOperate
/// Size: 0x05
enum class EDistrictOperate : uint8_t
{
	EDistrictOperate__OP_UnLock                                                      = 0,
	EDistrictOperate__OP_Enable                                                      = 1,
	EDistrictOperate__OP_Locke                                                       = 2,
	EDistrictOperate__OP_Disable                                                     = 3,
	EDistrictOperate__OP_MAX                                                         = 4
};

/// Enum /Script/Pal7.EDistrictUnLockState
/// Size: 0x04
enum class EDistrictUnLockState : uint8_t
{
	EDistrictUnLockState__ST_Locked                                                  = 0,
	EDistrictUnLockState__ST_UnLockAndEnable                                         = 1,
	EDistrictUnLockState__ST_UnLockedAndDisabled                                     = 2,
	EDistrictUnLockState__ST_MAX                                                     = 3
};

/// Enum /Script/Pal7.EDistrictType
/// Size: 0x03
enum class EDistrictType : uint8_t
{
	EDistrictType__DT_RenJie                                                         = 0,
	EDistrictType__DT_MoJie                                                          = 1,
	EDistrictType__DT_MAX                                                            = 2
};

/// Enum /Script/Pal7.EPaladinLevelType
/// Size: 0x04
enum class EPaladinLevelType : uint8_t
{
	EPaladinLevelType__AlwaysLoaded                                                  = 0,
	EPaladinLevelType__CurrentLevel                                                  = 1,
	EPaladinLevelType__PrepareLevel                                                  = 2,
	EPaladinLevelType__EPaladinLevelType_MAX                                         = 3
};

/// Enum /Script/Pal7.EMathcFaceMaterialResult
/// Size: 0x04
enum class EMathcFaceMaterialResult : uint8_t
{
	EMathcFaceMaterialResult__AddToLockMap                                           = 0,
	EMathcFaceMaterialResult__RemoveFromLockMap                                      = 1,
	EMathcFaceMaterialResult__NoMatch                                                = 2,
	EMathcFaceMaterialResult__EMathcFaceMaterialResult_MAX                           = 3
};

/// Enum /Script/Pal7.EMergeMeshReplaceResult
/// Size: 0x04
enum class EMergeMeshReplaceResult : uint8_t
{
	EMergeMeshReplaceResult__ReplaceWithNew                                          = 0,
	EMergeMeshReplaceResult__SetMeshToNull                                           = 1,
	EMergeMeshReplaceResult__KeepCurrentMesh                                         = 2,
	EMergeMeshReplaceResult__EMergeMeshReplaceResult_MAX                             = 3
};

/// Enum /Script/Pal7.EMuseumItemLockState
/// Size: 0x04
enum class EMuseumItemLockState : uint8_t
{
	EMuseumItemLockState__Unknown                                                    = 0,
	EMuseumItemLockState__Locked                                                     = 1,
	EMuseumItemLockState__Opened                                                     = 2,
	EMuseumItemLockState__EMuseumItemLockState_MAX                                   = 3
};

/// Enum /Script/Pal7.EPaladinUIKeyControlType
/// Size: 0x06
enum class EPaladinUIKeyControlType : uint8_t
{
	EPaladinUIKeyControlType__DirectionNavigation                                    = 0,
	EPaladinUIKeyControlType__ChangePage                                             = 1,
	EPaladinUIKeyControlType__ChangePage2                                            = 2,
	EPaladinUIKeyControlType__ViewActor                                              = 3,
	EPaladinUIKeyControlType__Confirm                                                = 4,
	EPaladinUIKeyControlType__EPaladinUIKeyControlType_MAX                           = 5
};

/// Enum /Script/Pal7.EPaladinNPCCurveMethod
/// Size: 0x03
enum class EPaladinNPCCurveMethod : uint8_t
{
	EPaladinNPCCurveMethod__Approach                                                 = 0,
	EPaladinNPCCurveMethod__Linear                                                   = 1,
	EPaladinNPCCurveMethod__EPaladinNPCCurveMethod_MAX                               = 2
};

/// Enum /Script/Pal7.EBodypartType
/// Size: 0x04
enum class EBodypartType : uint8_t
{
	EBodypartType__E_Bodypart_Type_Body                                              = 0,
	EBodypartType__E_Bodypart_Type_Leg                                               = 1,
	EBodypartType__E_Bodypart_Type_Head                                              = 2,
	EBodypartType__E_Bodypart_Type_MAX                                               = 3
};

/// Enum /Script/Pal7.ESuperHeroType
/// Size: 0x07
enum class ESuperHeroType : uint8_t
{
	ESuperHeroType__SHT_None                                                         = 0,
	ESuperHeroType__SHT_JiuShen                                                      = 1,
	ESuperHeroType__SHT_WuShen                                                       = 2,
	ESuperHeroType__SHT_FaShen                                                       = 3,
	ESuperHeroType__SHT_GuShen                                                       = 4,
	ESuperHeroType__SHT_JianshShen                                                   = 5,
	ESuperHeroType__SHT_MAX                                                          = 6
};

/// Enum /Script/Pal7.ECameraModifierHandleType
/// Size: 0x04
enum class ECameraModifierHandleType : uint8_t
{
	ECameraModifierHandleType__Add                                                   = 0,
	ECameraModifierHandleType__OnlySelf                                              = 1,
	ECameraModifierHandleType__Ignore                                                = 2,
	ECameraModifierHandleType__ECameraModifierHandleType_MAX                         = 3
};

/// Enum /Script/Pal7.EPaladinPreloadLifeCycle
/// Size: 0x04
enum class EPaladinPreloadLifeCycle : uint8_t
{
	EPaladinPreloadLifeCycle__SameWithPlayMode                                       = 0,
	EPaladinPreloadLifeCycle__SameWithInstance                                       = 1,
	EPaladinPreloadLifeCycle__CustomManage                                           = 2,
	EPaladinPreloadLifeCycle__EPaladinPreloadLifeCycle_MAX                           = 3
};

/// Enum /Script/Pal7.EQTEWaveEndType
/// Size: 0x05
enum class EQTEWaveEndType : uint8_t
{
	EQTEWaveEndType__QTEWAVE_IMMEDIATELY_END                                         = 0,
	EQTEWaveEndType__QTEWAVE_IMMEDIATELY_SUCCESS_ONLY_END                            = 1,
	EQTEWaveEndType__QTEWAVE_IMMEDIATELY_FAIL_ONLY_END                               = 2,
	EQTEWaveEndType__QTEWAVE_TIMEOUT_END                                             = 3,
	EQTEWaveEndType__QTEWAVE_MAX                                                     = 4
};

/// Enum /Script/Pal7.EQuestState
/// Size: 0x04
enum class EQuestState : uint8_t
{
	EQuestState__Todo                                                                = 0,
	EQuestState__Open                                                                = 1,
	EQuestState__Complete                                                            = 2,
	EQuestState__EQuestState_MAX                                                     = 3
};

/// Enum /Script/Pal7.EQuestProccessIDCompareResult
/// Size: 0x06
enum class EQuestProccessIDCompareResult : uint8_t
{
	EQuestProccessIDCompareResult__LessThanMin                                       = 0,
	EQuestProccessIDCompareResult__BetweenMinAndMax                                  = 1,
	EQuestProccessIDCompareResult__GreaterThanMax                                    = 2,
	EQuestProccessIDCompareResult__ParamIsInvalid                                    = 3,
	EQuestProccessIDCompareResult__None                                              = 4,
	EQuestProccessIDCompareResult__EQuestProccessIDCompareResult_MAX                 = 5
};

/// Enum /Script/Pal7.EQuestActionExec
/// Size: 0x03
enum class EQuestActionExec : uint8_t
{
	EQuestActionExec__Exec                                                           = 0,
	EQuestActionExec__Skip                                                           = 1,
	EQuestActionExec__EQuestActionExec_MAX                                           = 2
};

/// Enum /Script/Pal7.EQuestInactiveReason
/// Size: 0x03
enum class EQuestInactiveReason : uint8_t
{
	EQuestInactiveReason__PickCondition                                              = 0,
	EQuestInactiveReason__NodeActiveCondition                                        = 1,
	EQuestInactiveReason__EQuestInactiveReason_MAX                                   = 2
};

/// Enum /Script/Pal7.EQuestTrackType
/// Size: 0x03
enum class EQuestTrackType : uint8_t
{
	EQuestTrackType__MainQuest                                                       = 0,
	EQuestTrackType__OtherQuest                                                      = 1,
	EQuestTrackType__EQuestTrackType_MAX                                             = 2
};

/// Enum /Script/Pal7.EPaladinSlotSaveDataType
/// Size: 0x21
enum class EPaladinSlotSaveDataType : uint8_t
{
	EPaladinSlotSaveDataType__MetaData                                               = 0,
	EPaladinSlotSaveDataType__HeroInfo                                               = 1,
	EPaladinSlotSaveDataType__TeamInfo                                               = 2,
	EPaladinSlotSaveDataType__EquipmentInfo                                          = 3,
	EPaladinSlotSaveDataType__EquipmentCategory                                      = 4,
	EPaladinSlotSaveDataType__HeroEquipmentList                                      = 5,
	EPaladinSlotSaveDataType__CardCategory                                           = 6,
	EPaladinSlotSaveDataType__LimitItem                                              = 7,
	EPaladinSlotSaveDataType__BattleDeckList                                         = 8,
	EPaladinSlotSaveDataType__ItemCategory                                           = 9,
	EPaladinSlotSaveDataType__ItemInfo                                               = 10,
	EPaladinSlotSaveDataType__ICardInfo                                              = 11,
	EPaladinSlotSaveDataType__MonsterInfo                                            = 12,
	EPaladinSlotSaveDataType__BattleField                                            = 13,
	EPaladinSlotSaveDataType__PetInfo                                                = 14,
	EPaladinSlotSaveDataType__GuidInfo                                               = 15,
	EPaladinSlotSaveDataType__FoodEffectData                                         = 16,
	EPaladinSlotSaveDataType__CookData                                               = 17,
	EPaladinSlotSaveDataType__QuestData                                              = 18,
	EPaladinSlotSaveDataType__Puzzle                                                 = 19,
	EPaladinSlotSaveDataType__EPaladinSlotSaveDataType_MAX                           = 20
};

/// Enum /Script/Pal7.EPaladinGlobalSaveDataType
/// Size: 0x04
enum class EPaladinGlobalSaveDataType : uint8_t
{
	EPaladinGlobalSaveDataType__Version                                              = 0,
	EPaladinGlobalSaveDataType__HardwareInfo                                         = 1,
	EPaladinGlobalSaveDataType__MemoryUnlockInfo                                     = 2,
	EPaladinGlobalSaveDataType__EPaladinGlobalSaveDataType_MAX                       = 3
};

/// Enum /Script/Pal7.EPaladinSaveGameFileVersion
/// Size: 0x58
enum class EPaladinSaveGameFileVersion : uint8_t
{
	EPaladinSaveGameFileVersion__InitialVersion                                      = 1,
	EPaladinSaveGameFileVersion__Version                                             = 2,
	EPaladinSaveGameFileVersion__Version3                                            = 3,
	EPaladinSaveGameFileVersion__Version_4                                           = 4,
	EPaladinSaveGameFileVersion__Version_45                                          = 5,
	EPaladinSaveGameFileVersion__Version_46                                          = 6,
	EPaladinSaveGameFileVersion__Version_47                                          = 7,
	EPaladinSaveGameFileVersion__Version_48                                          = 8,
	EPaladinSaveGameFileVersion__Version_49                                          = 9,
	EPaladinSaveGameFileVersion__Version_410                                         = 10,
	EPaladinSaveGameFileVersion__Version_411                                         = 11,
	EPaladinSaveGameFileVersion__Version_5                                           = 12,
	EPaladinSaveGameFileVersion__Version_513                                         = 13,
	EPaladinSaveGameFileVersion__Version_514                                         = 14,
	EPaladinSaveGameFileVersion__Version_515                                         = 15,
	EPaladinSaveGameFileVersion__Version_516                                         = 16,
	EPaladinSaveGameFileVersion__Version_517                                         = 17,
	EPaladinSaveGameFileVersion__Version_518                                         = 18,
	EPaladinSaveGameFileVersion__Version_519                                         = 19,
	EPaladinSaveGameFileVersion__Version_520                                         = 20,
	EPaladinSaveGameFileVersion__Version_521                                         = 21,
	EPaladinSaveGameFileVersion__Version_6                                           = 22,
	EPaladinSaveGameFileVersion__Version_1_0                                         = 23,
	EPaladinSaveGameFileVersion__Version_1_024                                       = 24,
	EPaladinSaveGameFileVersion__VersionEnum1                                        = 25,
	EPaladinSaveGameFileVersion__VersionEnum2                                        = 26,
	EPaladinSaveGameFileVersion__VersionEnum3                                        = 27,
	EPaladinSaveGameFileVersion__VersionEnum4                                        = 28,
	EPaladinSaveGameFileVersion__VersionEnum5                                        = 29,
	EPaladinSaveGameFileVersion__VersionEnum6                                        = 30,
	EPaladinSaveGameFileVersion__VersionEnum7                                        = 31,
	EPaladinSaveGameFileVersion__VersionEnum8                                        = 32,
	EPaladinSaveGameFileVersion__VersionEnum9                                        = 33,
	EPaladinSaveGameFileVersion__VersionEnum10                                       = 34,
	EPaladinSaveGameFileVersion__VersionEnum11                                       = 35,
	EPaladinSaveGameFileVersion__VersionEnum12                                       = 36,
	EPaladinSaveGameFileVersion__VersionEnum13                                       = 37,
	EPaladinSaveGameFileVersion__VersionEnum14                                       = 38,
	EPaladinSaveGameFileVersion__VersionEnum15                                       = 39,
	EPaladinSaveGameFileVersion__VersionEnum16                                       = 40,
	EPaladinSaveGameFileVersion__VersionEnum17                                       = 41,
	EPaladinSaveGameFileVersion__VersionEnum18                                       = 42,
	EPaladinSaveGameFileVersion__VersionEnum19                                       = 43,
	EPaladinSaveGameFileVersion__VersionEnum20                                       = 44,
	EPaladinSaveGameFileVersion__VersionEnum21                                       = 45,
	EPaladinSaveGameFileVersion__VersionEnum22                                       = 46,
	EPaladinSaveGameFileVersion__VersionEnum23                                       = 47,
	EPaladinSaveGameFileVersion__VersionEnum24                                       = 48,
	EPaladinSaveGameFileVersion__VersionEnum25                                       = 49,
	EPaladinSaveGameFileVersion__VersionEnum26                                       = 50,
	EPaladinSaveGameFileVersion__VersionEnum27                                       = 51,
	EPaladinSaveGameFileVersion__VersionEnum28                                       = 52,
	EPaladinSaveGameFileVersion__VersionEnum29                                       = 53,
	EPaladinSaveGameFileVersion__VersionEnum30                                       = 54,
	EPaladinSaveGameFileVersion__VersionPlusOne                                      = 55,
	EPaladinSaveGameFileVersion__LatestVersion                                       = 28,
	EPaladinSaveGameFileVersion__VersionEnum457                                      = 28,
	EPaladinSaveGameFileVersion__EPaladinSaveGameFileVersion_MAX                     = 56
};

/// Enum /Script/Pal7.EPaladinAfterSequenceActionType
/// Size: 0x08
enum class EPaladinAfterSequenceActionType : uint8_t
{
	EPaladinAfterSequenceActionType__EACTIONTYPE_RECEIVEQUEST                        = 0,
	EPaladinAfterSequenceActionType__EACTIONTYPE_QUESTUPDATE                         = 1,
	EPaladinAfterSequenceActionType__EACTIONTYPE_NEXTSEQUENCE                        = 2,
	EPaladinAfterSequenceActionType__EACTIONTYPE_SEQUENCECUSTOM                      = 3,
	EPaladinAfterSequenceActionType__EACTIONTYPE_MOVETO                              = 4,
	EPaladinAfterSequenceActionType__EACTIONTYPE_ArchiveHelper                       = 5,
	EPaladinAfterSequenceActionType__EACTIONTYPE_ACTIONWITHBLOCK                     = 6,
	EPaladinAfterSequenceActionType__EACTIONTYPE_MAX                                 = 7
};

/// Enum /Script/Pal7.EPaladinQuestCheckWay
/// Size: 0x04
enum class EPaladinQuestCheckWay : uint8_t
{
	EPaladinQuestCheckWay__QuestProgress                                             = 0,
	EPaladinQuestCheckWay__ReceiveQuest                                              = 1,
	EPaladinQuestCheckWay__CompleteQuest                                             = 2,
	EPaladinQuestCheckWay__EPaladinQuestCheckWay_MAX                                 = 3
};

/// Enum /Script/Pal7.ESequencePauseInitiator
/// Size: 0x03
enum class ESequencePauseInitiator : uint8_t
{
	ESequencePauseInitiator__Player                                                  = 0,
	ESequencePauseInitiator__System                                                  = 1,
	ESequencePauseInitiator__ESequencePauseInitiator_MAX                             = 2
};

/// Enum /Script/Pal7.ESequenceInstanceState
/// Size: 0x11
enum class ESequenceInstanceState : uint8_t
{
	ESequenceInstanceState__Init                                                     = 0,
	ESequenceInstanceState__ExcBeforeAction                                          = 1,
	ESequenceInstanceState__ReadPlay                                                 = 2,
	ESequenceInstanceState__Playing                                                  = 3,
	ESequenceInstanceState__Waiting                                                  = 4,
	ESequenceInstanceState__Pausing                                                  = 5,
	ESequenceInstanceState__ExcAfterAction                                           = 6,
	ESequenceInstanceState__PendingKill                                              = 7,
	ESequenceInstanceState__Skipping                                                 = 8,
	ESequenceInstanceState__None                                                     = 9,
	ESequenceInstanceState__ESequenceInstanceState_MAX                               = 10
};

/// Enum /Script/Pal7.ESequencePlaySpeed
/// Size: 0x05
enum class ESequencePlaySpeed : uint8_t
{
	ESequencePlaySpeed__ESPS_1x                                                      = 0,
	ESequencePlaySpeed__ESPS_1_25x                                                   = 1,
	ESequencePlaySpeed__ESPS_1_5x                                                    = 2,
	ESequencePlaySpeed__ESPS_2x                                                      = 3,
	ESequencePlaySpeed__ESPS_MAX                                                     = 4
};

/// Enum /Script/Pal7.EInstanceHandleState
/// Size: 0x06
enum class EInstanceHandleState : uint8_t
{
	EInstanceHandleState__NeedPlay                                                   = 0,
	EInstanceHandleState__NeedWait                                                   = 1,
	EInstanceHandleState__NeedInterrupt                                              = 2,
	EInstanceHandleState__NeedPause                                                  = 3,
	EInstanceHandleState__None                                                       = 4,
	EInstanceHandleState__EInstanceHandleState_MAX                                   = 5
};

/// Enum /Script/Pal7.ESequencePresetHandleType
/// Size: 0x05
enum class ESequencePresetHandleType : uint8_t
{
	ESequencePresetHandleType__Wait                                                  = 0,
	ESequencePresetHandleType__Replace                                               = 1,
	ESequencePresetHandleType__Ignore                                                = 2,
	ESequencePresetHandleType__Parallel                                              = 3,
	ESequencePresetHandleType__ESequencePresetHandleType_MAX                         = 4
};

/// Enum /Script/Pal7.EPaladinGraphicsLevel
/// Size: 0x05
enum class EPaladinGraphicsLevel : uint8_t
{
	EPaladinGraphicsLevel__Default                                                   = 0,
	EPaladinGraphicsLevel__Low                                                       = 1,
	EPaladinGraphicsLevel__Medium                                                    = 2,
	EPaladinGraphicsLevel__High                                                      = 3,
	EPaladinGraphicsLevel__EPaladinGraphicsLevel_MAX                                 = 4
};

/// Enum /Script/Pal7.EAsycTimeLimitState
/// Size: 0x04
enum class EAsycTimeLimitState : uint8_t
{
	EAsycTimeLimitState__Default                                                     = 0,
	EAsycTimeLimitState__NormalEnterLevel                                            = 1,
	EAsycTimeLimitState__PrepareNextLevel                                            = 2,
	EAsycTimeLimitState__EAsycTimeLimitState_MAX                                     = 3
};

/// Enum /Script/Pal7.EPaladinTipsType
/// Size: 0x05
enum class EPaladinTipsType : uint8_t
{
	EPaladinTipsType__Tips_TrackQuest                                                = 0,
	EPaladinTipsType__Tips_NoviceTeaching                                            = 1,
	EPaladinTipsType__Tips_Illustration                                              = 2,
	EPaladinTipsType__None                                                           = 3,
	EPaladinTipsType__EPaladinTipsType_MAX                                           = 4
};

/// Enum /Script/Pal7.EPaladinUIAnimState
/// Size: 0x05
enum class EPaladinUIAnimState : uint8_t
{
	EPaladinUIAnimState__Opening                                                     = 0,
	EPaladinUIAnimState__Opened                                                      = 1,
	EPaladinUIAnimState__Closing                                                     = 2,
	EPaladinUIAnimState__Closed                                                      = 3,
	EPaladinUIAnimState__EPaladinUIAnimState_MAX                                     = 4
};

/// Enum /Script/Pal7.EPaladinUISelectedState
/// Size: 0x04
enum class EPaladinUISelectedState : uint8_t
{
	EPaladinUISelectedState__None                                                    = 0,
	EPaladinUISelectedState__Selected                                                = 1,
	EPaladinUISelectedState__Locked                                                  = 2,
	EPaladinUISelectedState__EPaladinUISelectedState_MAX                             = 3
};

/// Enum /Script/Pal7.EPaladinUIOpenWay
/// Size: 0x04
enum class EPaladinUIOpenWay : uint8_t
{
	EPaladinUIOpenWay__CoverOnCurrent                                                = 0,
	EPaladinUIOpenWay__JustCloseCurrent                                              = 1,
	EPaladinUIOpenWay__PushCurrentToStack                                            = 2,
	EPaladinUIOpenWay__EPaladinUIOpenWay_MAX                                         = 3
};

/// Enum /Script/Pal7.EZoneType
/// Size: 0x05
enum class EZoneType : uint8_t
{
	EZoneType__None                                                                  = 0,
	EZoneType__Story                                                                 = 1,
	EZoneType__PushQuest                                                             = 2,
	EZoneType__Moveto                                                                = 3,
	EZoneType__EZoneType_MAX                                                         = 4
};

/// Enum /Script/Pal7.EBattleEndGrade
/// Size: 0x04
enum class EBattleEndGrade : uint8_t
{
	EBattleEndGrade__BEG_EASY                                                        = 0,
	EBattleEndGrade__BEG_HARD                                                        = 1,
	EBattleEndGrade__BEG_ESCAPE                                                      = 2,
	EBattleEndGrade__BEG_MAX                                                         = 3
};

/// Class /Script/Pal7.AbilityTask_MySync
/// Size: 0x0010 (0x000080 - 0x000090)
class UAbilityTask_MySync : public UAbilityTask
{ 
public:
	SDK_UNDEFINED(16,1380) /* FMulticastInlineDelegate */ __um(OnSync);                                            // 0x0080   (0x0010)  


	/// Functions
	// Function /Script/Pal7.AbilityTask_MySync.WaitMySyncPoint
	// class UAbilityTask_MySync* WaitMySyncPoint(class UGameplayAbility* OwningAbility);                                    // [0xe2dcd0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.AbilityTask_MySync.OnLocalConfirmCallback
	// void OnLocalConfirmCallback();                                                                                        // [0xe2d320] Final|Native|Public  
	// Function /Script/Pal7.AbilityTask_MySync.OnConfirmCallback
	// void OnConfirmCallback();                                                                                             // [0xe2d300] Final|Native|Public  
};

/// Class /Script/Pal7.AbilityTask_PlayMontage_New
/// Size: 0x00A8 (0x000080 - 0x000128)
class UAbilityTask_PlayMontage_New : public UAbilityTask
{ 
public:
	SDK_UNDEFINED(16,1381) /* FMulticastInlineDelegate */ __um(OnCompleted);                                       // 0x0080   (0x0010)  
	SDK_UNDEFINED(16,1382) /* FMulticastInlineDelegate */ __um(OnBlendOut);                                        // 0x0090   (0x0010)  
	SDK_UNDEFINED(16,1383) /* FMulticastInlineDelegate */ __um(OnInterrupted);                                     // 0x00A0   (0x0010)  
	SDK_UNDEFINED(16,1384) /* FMulticastInlineDelegate */ __um(OnCancelled);                                       // 0x00B0   (0x0010)  
	SDK_UNDEFINED(16,1385) /* FMulticastInlineDelegate */ __um(OnNotifyBegin);                                     // 0x00C0   (0x0010)  
	SDK_UNDEFINED(16,1386) /* FMulticastInlineDelegate */ __um(OnNotifyEnd);                                       // 0x00D0   (0x0010)  
	unsigned char                                      UnknownData00_6[0x48];                                      // 0x00E0   (0x0048)  MISSED


	/// Functions
	// Function /Script/Pal7.AbilityTask_PlayMontage_New.OnNotifyEndReceived
	// void OnNotifyEndReceived(FName NotifyName, FBranchingPointNotifyPayload& BranchingPointNotifyPayload);                // [0xe2d5e0] Final|Native|Public|HasOutParms 
	// Function /Script/Pal7.AbilityTask_PlayMontage_New.OnNotifyBeginReceived
	// void OnNotifyBeginReceived(FName NotifyName, FBranchingPointNotifyPayload& BranchingPointNotifyPayload);              // [0xe2d500] Final|Native|Public|HasOutParms 
	// Function /Script/Pal7.AbilityTask_PlayMontage_New.OnMontageInterrupted
	// void OnMontageInterrupted();                                                                                          // [0xe2d4e0] Final|Native|Public  
	// Function /Script/Pal7.AbilityTask_PlayMontage_New.OnMontageEnded
	// void OnMontageEnded(class UAnimMontage* Montage, bool bInterrupted);                                                  // [0xe2d410] Final|Native|Public  
	// Function /Script/Pal7.AbilityTask_PlayMontage_New.OnMontageBlendingOut
	// void OnMontageBlendingOut(class UAnimMontage* Montage, bool bInterrupted);                                            // [0xe2d340] Final|Native|Public  
	// Function /Script/Pal7.AbilityTask_PlayMontage_New.CreatePlayMontageAndWaitProxy_New
	// class UAbilityTask_PlayMontage_New* CreatePlayMontageAndWaitProxy_New(class UGameplayAbility* OwningAbility, FName TaskInstanceName, class UAnimMontage* MontageToPlay, float Rate, FName StartSection, bool bStopWhenAbilityEnds, float AnimRootMotionTranslationScale); // [0xe2cf70] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/Pal7.AbilityTask_WaitAbilityEnd
/// Size: 0x00B8 (0x000080 - 0x000138)
class UAbilityTask_WaitAbilityEnd : public UAbilityTask
{ 
public:
	SDK_UNDEFINED(16,1387) /* FMulticastInlineDelegate */ __um(OnAbilityEnd);                                      // 0x0080   (0x0010)  
	unsigned char                                      UnknownData00_6[0xA8];                                      // 0x0090   (0x00A8)  MISSED


	/// Functions
	// Function /Script/Pal7.AbilityTask_WaitAbilityEnd.WaitForAbilityEndWithTagRequirements
	// class UAbilityTask_WaitAbilityEnd* WaitForAbilityEndWithTagRequirements(class UGameplayAbility* OwningAbility, FGameplayTagRequirements TagRequirements, bool IncludeTriggeredAbilities, bool TriggerOnce); // [0xe2d930] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.AbilityTask_WaitAbilityEnd.WaitForAbilityEnd_Query
	// class UAbilityTask_WaitAbilityEnd* WaitForAbilityEnd_Query(class UGameplayAbility* OwningAbility, FGameplayTagQuery Query, bool IncludeTriggeredAbilities, bool TriggerOnce); // [0xe2db10] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.AbilityTask_WaitAbilityEnd.WaitForAbilityEnd
	// class UAbilityTask_WaitAbilityEnd* WaitForAbilityEnd(class UGameplayAbility* OwningAbility, FGameplayTag WithTag, FGameplayTag WithoutTag, bool IncludeTriggeredAbilities, bool TriggerOnce); // [0xe2d7a0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.AbilityTask_WaitAbilityEnd.OnAbilityEndCallBack
	// void OnAbilityEndCallBack(FAbilityEndedData& EndedData);                                                              // [0xe2d260] Final|Native|Public|HasOutParms 
};

/// Class /Script/Pal7.AbilityTask_WaitMovementInput
/// Size: 0x0028 (0x000080 - 0x0000A8)
class UAbilityTask_WaitMovementInput : public UAbilityTask
{ 
public:
	SDK_UNDEFINED(16,1388) /* FMulticastInlineDelegate */ __um(OnMovementInput);                                   // 0x0080   (0x0010)  
	class APlayerController*                           CachedPlayerController;                                     // 0x0090   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0098   (0x0010)  MISSED


	/// Functions
	// Function /Script/Pal7.AbilityTask_WaitMovementInput.CreateWaitMovementInput
	// class UAbilityTask_WaitMovementInput* CreateWaitMovementInput(class UGameplayAbility* OwningAbility);                 // [0xe2d160] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/Pal7.AbilityTask_WaitSyncInputDir
/// Size: 0x0010 (0x000080 - 0x000090)
class UAbilityTask_WaitSyncInputDir : public UAbilityTask
{ 
public:
	SDK_UNDEFINED(16,1389) /* FMulticastInlineDelegate */ __um(OnSync);                                            // 0x0080   (0x0010)  


	/// Functions
	// Function /Script/Pal7.AbilityTask_WaitSyncInputDir.WaitSyncInputDir
	// class UAbilityTask_WaitSyncInputDir* WaitSyncInputDir(class UGameplayAbility* OwningAbility);                         // [0xe2dd50] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.AbilityTask_WaitSyncInputDir.OnServerReceiveEvent
	// void OnServerReceiveEvent();                                                                                          // [0xe2d6c0] Final|Native|Protected 
};

/// Struct /Script/Pal7.ActionRotateSetting
/// Size: 0x0018 (0x000000 - 0x000018)
struct FActionRotateSetting
{ 
	EActionRotateMode                                  RotateMode;                                                 // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	FName                                              CurveName;                                                  // 0x0004   (0x0008)  
	float                                              RotateAngle;                                                // 0x000C   (0x0004)  
	bool                                               bMovingRotate;                                              // 0x0010   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0011   (0x0003)  MISSED
	float                                              MaxRotateAngle;                                             // 0x0014   (0x0004)  
};

/// Class /Script/Pal7.ActionRotateNotify
/// Size: 0x0018 (0x000038 - 0x000050)
class UActionRotateNotify : public UAnimNotify
{ 
public:
	FActionRotateSetting                               ActionRotateSetting;                                        // 0x0038   (0x0018)  
};

/// Struct /Script/Pal7.SubConditionConfigInfo
/// Size: 0x00C0 (0x000000 - 0x0000C0)
struct FSubConditionConfigInfo
{ 
	int32_t                                            CurNum;                                                     // 0x0000   (0x0004)  
	int32_t                                            TargetNum;                                                  // 0x0004   (0x0004)  
	FName                                              SubgoalKey;                                                 // 0x0008   (0x0008)  
	SDK_UNDEFINED(24,1390) /* FText */                 __um(PreText);                                              // 0x0010   (0x0018)  
	SDK_UNDEFINED(24,1391) /* FText */                 __um(SplitText);                                            // 0x0028   (0x0018)  
	SDK_UNDEFINED(24,1392) /* FText */                 __um(PostText);                                             // 0x0040   (0x0018)  
	SDK_UNDEFINED(80,1393) /* TMap<FString, FText> */  __um(CustomParamMap);                                       // 0x0058   (0x0050)  
	SDK_UNDEFINED(16,1394) /* FString */               __um(FormatString);                                         // 0x00A8   (0x0010)  
	bool                                               bShowInQuestTrack;                                          // 0x00B8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00B9   (0x0007)  MISSED
};

/// Class /Script/Pal7.PaladinCondition
/// Size: 0x0110 (0x000028 - 0x000138)
class UPaladinCondition : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x48];                                      // 0x0000   (0x0048)  MISSED
	SDK_UNDEFINED(16,1395) /* FMulticastInlineDelegate */ __um(OnConditionMeet);                                   // 0x0048   (0x0010)  
	SDK_UNDEFINED(16,1396) /* FMulticastInlineDelegate */ __um(OnSubConditionMeet);                                // 0x0058   (0x0010)  
	bool                                               bIsNot : 1;                                                 // 0x0068:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x7];                                       // 0x0069   (0x0007)  MISSED
	FSubConditionConfigInfo                            SubgoalConfig;                                              // 0x0070   (0x00C0)  
	EPaladinLogicalOperation                           LogicalOperation;                                           // 0x0130   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0131   (0x0007)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinCondition.UnregisterChangedListener
	// void UnregisterChangedListener(class UWorld* WorldContext);                                                           // [0xe72c90] Native|Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinCondition.SetConditonDesc
	// void SetConditonDesc(FName inString);                                                                                 // [0xe72b30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCondition.SetConditionKey
	// void SetConditionKey(FName InKey);                                                                                    // [0xe72ab0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCondition.SetConditionIndex
	// void SetConditionIndex(int32_t InIndex);                                                                              // [0xe72a30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCondition.ReturnInternal
	// bool ReturnInternal(bool bInResult);                                                                                  // [0xe729a0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/Pal7.PaladinCondition.RegisterChangedListener
	// void RegisterChangedListener(class UWorld* WorldContext);                                                             // [0xe72910] Native|Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinCondition.MeetSubgoalCondition
	// void MeetSubgoalCondition();                                                                                          // [0xe71bc0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCondition.MeetCondition
	// void MeetCondition(bool bMeetCondition);                                                                              // [0xe71b30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCondition.InitCondition
	// void InitCondition(class UWorld* WorldContext, bool bResetSubgoal);                                                   // [0xe71850] Native|Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinCondition.GetConditonDesc
	// FName GetConditonDesc();                                                                                              // [0xe713d0] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinCondition.GetConditionKey
	// FName GetConditionKey();                                                                                              // [0xe713b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinCondition.GetConditionIndex
	// int32_t GetConditionIndex();                                                                                          // [0xe71390] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinCondition.CheckCondition
	// bool CheckCondition(class UObject* WorldContextObject);                                                               // [0xe70ed0] Native|Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/Pal7.DialogConditionBase
/// Size: 0x0000 (0x000138 - 0x000138)
class UDialogConditionBase : public UPaladinCondition
{ 
public:
};

/// Struct /Script/Pal7.AdditionalMessage
/// Size: 0x0020 (0x000000 - 0x000020)
struct FAdditionalMessage
{ 
	FName                                              KeyName;                                                    // 0x0000   (0x0008)  
	SDK_UNDEFINED(16,1397) /* FString */               __um(Option);                                               // 0x0008   (0x0010)  
	bool                                               bNeedOtherValue;                                            // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0019   (0x0003)  MISSED
	int32_t                                            value;                                                      // 0x001C   (0x0004)  
};

/// Struct /Script/Pal7.AdditionMessageCondtion
/// Size: 0x0028 (0x000000 - 0x000028)
struct FAdditionMessageCondtion
{ 
	FName                                              KeyName;                                                    // 0x0000   (0x0008)  
	SDK_UNDEFINED(16,1398) /* FString */               __um(Option);                                               // 0x0008   (0x0010)  
	bool                                               bNeedOtherValue;                                            // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0019   (0x0003)  MISSED
	int32_t                                            value;                                                      // 0x001C   (0x0004)  
	EAddionalMessageCondition                          Condtion;                                                   // 0x0020   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0021   (0x0007)  MISSED
};

/// Class /Script/Pal7.AdditionalMessageCondition_Bp
/// Size: 0x0040 (0x000138 - 0x000178)
class UAdditionalMessageCondition_Bp : public UDialogConditionBase
{ 
public:
	TArray<FAdditionalMessage>                         AdditionMessage;                                            // 0x0138   (0x0010)  
	TArray<FAdditionMessageCondtion>                   HasAllAdditionalMessage;                                    // 0x0148   (0x0010)  
	TArray<FAdditionMessageCondtion>                   HasAnyAdditionalMessage;                                    // 0x0158   (0x0010)  
	TArray<FAdditionMessageCondtion>                   NotAnyAdditionalMessage;                                    // 0x0168   (0x0010)  
};

/// Class /Script/Pal7.AITask_TryActivateAbility
/// Size: 0x0060 (0x000070 - 0x0000D0)
class UAITask_TryActivateAbility : public UAITask
{ 
public:
	bool                                               bAllowRemoteActivation;                                     // 0x0070   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0071   (0x0003)  MISSED
	FGameplayAbilitySpecHandle                         AbilitySpecHandle;                                          // 0x0074   (0x0004)  
	class UClass*                                      AbilityClass;                                               // 0x0078   (0x0008)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x0080   (0x0010)  MISSED
	SDK_UNDEFINED(16,1399) /* FMulticastInlineDelegate */ __um(OnAbilityEnd);                                      // 0x0090   (0x0010)  
	SDK_UNDEFINED(16,1400) /* FMulticastInlineDelegate */ __um(OnActiviteFailed);                                  // 0x00A0   (0x0010)  
	SDK_UNDEFINED(16,1401) /* FMulticastInlineDelegate */ __um(OnAbilityCancel);                                   // 0x00B0   (0x0010)  
	SDK_UNDEFINED(16,1402) /* FMulticastInlineDelegate */ __um(OnAbilityPostStage);                                // 0x00C0   (0x0010)  


	/// Functions
	// Function /Script/Pal7.AITask_TryActivateAbility.ExternalCancel
	// void ExternalCancel();                                                                                                // [0xe2d1e0] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.AITask_TryActivateAbility.AITaskTryActivateAbility
	// class UAITask_TryActivateAbility* AITaskTryActivateAbility(class AAIController* Controller, class UClass* AbilityClass, bool bAllowRemoteActivation); // [0xe2ce70] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/Pal7.AnimNotify_PaladinBase
/// Size: 0x0010 (0x000038 - 0x000048)
class UAnimNotify_PaladinBase : public UAnimNotify
{ 
public:
	SDK_UNDEFINED(16,1403) /* FString */               __um(DisplayString);                                        // 0x0038   (0x0010)  
};

/// Class /Script/Pal7.AnimNotify_GlobalSpecialEffects
/// Size: 0x0010 (0x000048 - 0x000058)
class UAnimNotify_GlobalSpecialEffects : public UAnimNotify_PaladinBase
{ 
public:
	TArray<class UPaladinAbilitySpecialEffect*>        GlobalSpecialEffects;                                       // 0x0048   (0x0010)  
};

/// Class /Script/Pal7.AnimNotify_PlayCameraAnimation
/// Size: 0x0040 (0x000038 - 0x000078)
class UAnimNotify_PlayCameraAnimation : public UAnimNotify
{ 
public:
	float                                              DelayTime;                                                  // 0x0038   (0x0004)  
	EAnimationTargetType                               AnimationTargetType;                                        // 0x003C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x003D   (0x0003)  MISSED
	class UCameraAnim*                                 CameraAnim;                                                 // 0x0040   (0x0008)  
	class UCurveFloat*                                 CustomCurve;                                                // 0x0048   (0x0008)  
	float                                              BlendOutTime;                                               // 0x0050   (0x0004)  
	float                                              Duration;                                                   // 0x0054   (0x0004)  
	EAlphaBlendOption                                  BlendOption;                                                // 0x0058   (0x0001)  
	ECameraAnimPlaySpace                               PlaySpace;                                                  // 0x0059   (0x0001)  
	unsigned char                                      UnknownData01_6[0x1E];                                      // 0x005A   (0x001E)  MISSED


	/// Functions
	// Function /Script/Pal7.AnimNotify_PlayCameraAnimation.PlayCameraAnimation
	// void PlayCameraAnimation(class APaladinPlayerCameraManager* PaladinPlayerCameraManager, class APaladinCharacterBase* PaladinCharacter); // [0xe2d6e0] Final|Native|Protected|Const 
};

/// Class /Script/Pal7.AnimNotify_PlayFootStepsSound
/// Size: 0x0088 (0x000038 - 0x0000C0)
class UAnimNotify_PlayFootStepsSound : public UAnimNotify
{ 
public:
	EFoot                                              Foot;                                                       // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0039   (0x0007)  MISSED
	class USoundAtomCue*                               AtomSound;                                                  // 0x0040   (0x0008)  
	bool                                               bPlaySoundInAir;                                            // 0x0048   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0049   (0x0007)  MISSED
	class USoundAttenuation*                           AttenuationSettings;                                        // 0x0050   (0x0008)  
	float                                              VolumeMultiplier;                                           // 0x0058   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x005C   (0x0004)  MISSED
	float                                              PitchMultiplier;                                            // 0x0060   (0x0004)  
	bool                                               bSoundAttach;                                               // 0x0064   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x0065   (0x0003)  MISSED
	FName                                              SoundAttachName;                                            // 0x0068   (0x0008)  
	class UParticleSystem*                             FootStepsParticle;                                          // 0x0070   (0x0008)  
	EMovementState                                     MovementState;                                              // 0x0078   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3];                                       // 0x0079   (0x0003)  MISSED
	FVector                                            LocationOffset;                                             // 0x007C   (0x000C)  
	FRotator                                           RotationOffset;                                             // 0x0088   (0x000C)  
	FVector                                            Scale;                                                      // 0x0094   (0x000C)  
	bool                                               bParticleAttach;                                            // 0x00A0   (0x0001)  
	unsigned char                                      UnknownData05_5[0x3];                                       // 0x00A1   (0x0003)  MISSED
	FName                                              ParticleAttachName;                                         // 0x00A4   (0x0008)  
	unsigned char                                      UnknownData06_6[0x14];                                      // 0x00AC   (0x0014)  MISSED
};

/// Class /Script/Pal7.AnimNotify_PlayGhostMesh
/// Size: 0x0008 (0x000038 - 0x000040)
class UAnimNotify_PlayGhostMesh : public UAnimNotify
{ 
public:
	class UPaladinGhostMeshData*                       GhostMeshData;                                              // 0x0038   (0x0008)  
};

/// Class /Script/Pal7.AnimNotify_PlaySoundEx
/// Size: 0x0050 (0x000058 - 0x0000A8)
class UAnimNotify_PlaySoundEx : public UAnimNotify_PlaySound
{ 
public:
	bool                                               CanBlockBySpeechManager;                                    // 0x0058   (0x0001)  
	bool                                               PlayOnlyWhenBeHero;                                         // 0x0059   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x005A   (0x0006)  MISSED
	TArray<EBossBattleName>                            BlockWhenInTheseBattles;                                    // 0x0060   (0x0010)  
	class USoundAtomCue*                               AtomSound;                                                  // 0x0070   (0x0008)  
	SDK_UNDEFINED(16,1404) /* FString */               __um(Selector);                                             // 0x0078   (0x0010)  
	SDK_UNDEFINED(16,1405) /* FString */               __um(Label);                                                // 0x0088   (0x0010)  
	bool                                               bStopWhenAttachedToDestroyed;                               // 0x0098   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0099   (0x0007)  MISSED
	class USoundAttenuation*                           AttenuationSettings;                                        // 0x00A0   (0x0008)  
};

/// Class /Script/Pal7.AnimNotify_SimpleCameraAnim
/// Size: 0x0008 (0x000038 - 0x000040)
class UAnimNotify_SimpleCameraAnim : public UAnimNotify
{ 
public:
	class UPaladinSimpleCameraAnimData*                SimpleCameraAnimData;                                       // 0x0038   (0x0008)  
};

/// Class /Script/Pal7.AnimNotifyState_PlaySoundEx
/// Size: 0x0058 (0x000030 - 0x000088)
class UAnimNotifyState_PlaySoundEx : public UAnimNotifyState
{ 
public:
	class USoundAtomCue*                               AtomSound;                                                  // 0x0030   (0x0008)  
	SDK_UNDEFINED(16,1406) /* FString */               __um(Selector);                                             // 0x0038   (0x0010)  
	SDK_UNDEFINED(16,1407) /* FString */               __um(Label);                                                // 0x0048   (0x0010)  
	bool                                               DestroyOnNotifyEnd;                                         // 0x0058   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0059   (0x0003)  MISSED
	float                                              VolumeMultiplier;                                           // 0x005C   (0x0004)  
	float                                              PitchMultiplier;                                            // 0x0060   (0x0004)  
	bool                                               bFollow : 1;                                                // 0x0064:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x0065   (0x0003)  MISSED
	FName                                              AttachName;                                                 // 0x0068   (0x0008)  
	class USoundAttenuation*                           AttenuationSettings;                                        // 0x0070   (0x0008)  
	class UAtomComponent*                              AtomComponent;                                              // 0x0078   (0x0008)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0080   (0x0008)  MISSED
};

/// Class /Script/Pal7.PaladinAntiAddictionComponent
/// Size: 0x0090 (0x0000B0 - 0x000140)
class UPaladinAntiAddictionComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,1408) /* FMulticastInlineDelegate */ __um(ReceiveSystemTips);                                 // 0x00B0   (0x0010)  
	unsigned char                                      UnknownData00_6[0x80];                                      // 0x00C0   (0x0080)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinAntiAddictionComponent.GetPaladinAntiAddictionComponent
	// class UPaladinAntiAddictionComponent* GetPaladinAntiAddictionComponent();                                             // [0xe2d200] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/Pal7.PaladinEquipment
/// Size: 0x0070 (0x000220 - 0x000290)
class APaladinEquipment : public AActor
{ 
public:
	unsigned char                                      UnknownData00_1[0x70];                                      // 0x0220   (0x0070)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinEquipment.TryReMoveEquip
	// void TryReMoveEquip(EItemMainType Type);                                                                              // [0xe7b1d0] Final|Native|Public  
	// Function /Script/Pal7.PaladinEquipment.SetPaladinHidden
	// void SetPaladinHidden(FName InLockCertificate, bool bInHidden);                                                       // [0xe7add0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEquipment.GetOwingHero
	// class APaladinHero* GetOwingHero();                                                                                   // [0xe79900] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEquipment.GetItemId
	// int32_t GetItemId();                                                                                                  // [0xe797f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Pal7.APaladinWeaponSkin
/// Size: 0x0038 (0x000290 - 0x0002C8)
class AAPaladinWeaponSkin : public APaladinEquipment
{ 
public:
	class USkeletalMeshComponent*                      SkinSK0Com;                                                 // 0x0290   (0x0008)  
	class USkeletalMeshComponent*                      SkinCoverSk0Com;                                            // 0x0298   (0x0008)  
	bool                                               bHaveWeaponCover : 1;                                       // 0x02A0:0 (0x0001)  
	bool                                               bIsDefault : 1;                                             // 0x02A0:1 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x02A1   (0x0007)  MISSED
	TArray<class UMaterialInstanceDynamic*>            WeaponMeshDynamicMaterials;                                 // 0x02A8   (0x0010)  
	TArray<class UMaterialInstanceDynamic*>            WeaponCoverMeshDynamicMaterials;                            // 0x02B8   (0x0010)  


	/// Functions
	// Function /Script/Pal7.APaladinWeaponSkin.OnWeaponEquip
	// void OnWeaponEquip();                                                                                                 // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.APaladinWeaponSkin.GetWeaponSkCom
	// class USkeletalMeshComponent* GetWeaponSkCom();                                                                       // [0xe2d230] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.APaladinWeaponSkin.GetWeaponCoverSkCom
	// class USkeletalMeshComponent* GetWeaponCoverSkCom();                                                                  // [0x7dfb50] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.AsyncTaskAttributeChanged
/// Size: 0x0060 (0x000030 - 0x000090)
class UAsyncTaskAttributeChanged : public UBlueprintAsyncActionBase
{ 
public:
	SDK_UNDEFINED(16,1409) /* FMulticastInlineDelegate */ __um(OnAttributeChanged);                                // 0x0030   (0x0010)  
	class UAbilitySystemComponent*                     ASC;                                                        // 0x0040   (0x0008)  
	unsigned char                                      UnknownData00_6[0x48];                                      // 0x0048   (0x0048)  MISSED


	/// Functions
	// Function /Script/Pal7.AsyncTaskAttributeChanged.ListenForAttributesChange
	// class UAsyncTaskAttributeChanged* ListenForAttributesChange(class UAbilitySystemComponent* AbilitySystemComponent, TArray<FGameplayAttribute> Attributes); // [0xe32a30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.AsyncTaskAttributeChanged.ListenForAttributeChange
	// class UAsyncTaskAttributeChanged* ListenForAttributeChange(class UAbilitySystemComponent* AbilitySystemComponent, FGameplayAttribute Attribute); // [0xe32830] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.AsyncTaskAttributeChanged.EndTask
	// void EndTask();                                                                                                       // [0xe31fd0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.AsyncTaskCooldownChanged
/// Size: 0x0050 (0x000030 - 0x000080)
class UAsyncTaskCooldownChanged : public UBlueprintAsyncActionBase
{ 
public:
	SDK_UNDEFINED(16,1410) /* FMulticastInlineDelegate */ __um(OnCooldownBegin);                                   // 0x0030   (0x0010)  
	SDK_UNDEFINED(16,1411) /* FMulticastInlineDelegate */ __um(OnCooldownEnd);                                     // 0x0040   (0x0010)  
	class UAbilitySystemComponent*                     ASC;                                                        // 0x0050   (0x0008)  
	unsigned char                                      UnknownData00_6[0x28];                                      // 0x0058   (0x0028)  MISSED


	/// Functions
	// Function /Script/Pal7.AsyncTaskCooldownChanged.ListenForCooldownChange
	// class UAsyncTaskCooldownChanged* ListenForCooldownChange(class UAbilitySystemComponent* AbilitySystemComponent, FGameplayTagContainer CooldownTags, bool UseServerCooldown); // [0xe32b60] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.AsyncTaskCooldownChanged.EndTask
	// void EndTask();                                                                                                       // [0xe31ff0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.AsyncTaskEffectStackChanged
/// Size: 0x0020 (0x000030 - 0x000050)
class UAsyncTaskEffectStackChanged : public UBlueprintAsyncActionBase
{ 
public:
	SDK_UNDEFINED(16,1412) /* FMulticastInlineDelegate */ __um(OnGameplayEffectStackChange);                       // 0x0030   (0x0010)  
	class UAbilitySystemComponent*                     ASC;                                                        // 0x0040   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0048   (0x0008)  MISSED


	/// Functions
	// Function /Script/Pal7.AsyncTaskEffectStackChanged.ListenForGameplayEffectStackChange
	// class UAsyncTaskEffectStackChanged* ListenForGameplayEffectStackChange(class UAbilitySystemComponent* AbilitySystemComponent, FGameplayTag EffectGameplayTag); // [0xe32cb0] Final|Native|Static|Private|BlueprintCallable 
	// Function /Script/Pal7.AsyncTaskEffectStackChanged.EndTask
	// void EndTask();                                                                                                       // [0xe32010] Final|Native|Private|BlueprintCallable 
};

/// Class /Script/Pal7.AtomSoundDistanceControl
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UAtomSoundDistanceControl : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x00B0   (0x0050)  MISSED


	/// Functions
	// Function /Script/Pal7.AtomSoundDistanceControl.ReceiveSwitchHeroEvent
	// void ReceiveSwitchHeroEvent(class APaladinHero* From, class APaladinHero* to);                                        // [0xe32fb0] Final|Native|Protected 
	// Function /Script/Pal7.AtomSoundDistanceControl.EndOverlap
	// void EndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // [0xe31e90] Final|Native|Protected 
	// Function /Script/Pal7.AtomSoundDistanceControl.BeginOverlap
	// void BeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0xe31c00] Final|Native|Protected|HasOutParms 
};

/// Struct /Script/Pal7.PaladinNPCEnableInfo
/// Size: 0x0002 (0x000000 - 0x000002)
struct FPaladinNPCEnableInfo
{ 
	EPaladinNPCEnableFactor                            Factor;                                                     // 0x0000   (0x0001)  
	bool                                               bValue : 1;                                                 // 0x0001:0 (0x0001)  
};

/// Struct /Script/Pal7.PaladinNPCEnableComposite
/// Size: 0x0018 (0x000000 - 0x000018)
struct FPaladinNPCEnableComposite
{ 
	EPaladinNPCEnableLord                              Lord;                                                       // 0x0000   (0x0001)  
	EPaladinNPCEnableCompositeMode                     CompositeMode;                                              // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0002   (0x0006)  MISSED
	TArray<FPaladinNPCEnableInfo>                      Infos;                                                      // 0x0008   (0x0010)  
};

/// Class /Script/Pal7.PaladinNPC
/// Size: 0x0090 (0x0004C0 - 0x000550)
#pragma pack(push, 0x1)
class alignas(0x10) APaladinNPC : public ACharacter
{ 
public:
	unsigned char                                      UnknownData00_3[0x10];                                      // 0x04B8   (0x0010)  MISSED
	SDK_UNDEFINED(16,1413) /* FMulticastInlineDelegate */ __um(OnMoveActiveDelegate);                              // 0x04C8   (0x0010)  
	SDK_UNDEFINED(16,1414) /* FMulticastInlineDelegate */ __um(OnEnableFactorChangedDelegate);                     // 0x04D8   (0x0010)  
	bool                                               IsAlwaysExist;                                              // 0x04E8   (0x0001)  
	bool                                               bAutoActiveMove : 1;                                        // 0x04E9:0 (0x0001)  
	bool                                               bEnableCharMove : 1;                                        // 0x04E9:1 (0x0001)  
	FGenericTeamId                                     TeamID;                                                     // 0x04EA   (0x0001)  
	bool                                               bEnableAI : 1;                                              // 0x04EB:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x4];                                       // 0x04EC   (0x0004)  MISSED
	class UBehaviorTree*                               BehaviorTree;                                               // 0x04F0   (0x0008)  
	bool                                               bEnableTurn : 1;                                            // 0x04F8:0 (0x0001)  
	bool                                               bIgnoreOnPS4 : 1;                                           // 0x04F8:1 (0x0001)  
	unsigned char                                      UnknownData02_4[0x7];                                       // 0x04F9   (0x0007)  MISSED
	class UInteractionComponent*                       InteractionComponent;                                       // 0x0500   (0x0008)  
	class UPaladinDynamicMonitorComponent*             DynamicMonitor;                                             // 0x0508   (0x0008)  
	class UPaladinActorInfoComponent*                  ActorInfoComponent;                                         // 0x0510   (0x0008)  
	class UPFPathFollowerComponent*                    PathFollowerComponent;                                      // 0x0518   (0x0008)  
	class UPaladinAISleepComponent*                    SleepComponent;                                             // 0x0520   (0x0008)  
	class UPaladinNPCAIPerceptionComponent*            PerceptionComponent;                                        // 0x0528   (0x0008)  
	unsigned char                                      UnknownData03_5[0x8];                                       // 0x0530   (0x0008)  MISSED
	TArray<FPaladinNPCEnableComposite>                 EnableComposites;                                           // 0x0538   (0x0010)  


	/// Functions
	// Function /Script/Pal7.PaladinNPC.SetSleepEnable
	// void SetSleepEnable(bool bEnable);                                                                                    // [0xeb2940] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinNPC.SetQuestEnable
	// void SetQuestEnable(bool bIsEnable);                                                                                  // [0xeb28b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinNPC.SetEnable
	// void SetEnable(FPaladinNPCEnableComposite& Composite);                                                                // [0xeb25d0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinNPC.RefreshEnable
	// void RefreshEnable();                                                                                                 // [0xeb24b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinNPC.Monitor_QuestTagChanged
	// void Monitor_QuestTagChanged();                                                                                       // [0xeb2250] Native|Protected     
	// Function /Script/Pal7.PaladinNPC.Monitor_QuestInvalidTagChanged
	// void Monitor_QuestInvalidTagChanged();                                                                                // [0xeb2230] Native|Protected     
	// Function /Script/Pal7.PaladinNPC.Monitor_QuestEnd
	// void Monitor_QuestEnd(FName InQuestInstanceID, FName InQuestID, EQuestCategory InQuestCategory);                      // [0xeb2130] Native|Protected     
	// Function /Script/Pal7.PaladinNPC.Monitor_PIDChanged
	// void Monitor_PIDChanged(int32_t PIDJudge, FName InQuestInstanceID, FName InQuestID, EQuestCategory InCategory);       // [0xeb1ff0] Native|Protected     
	// Function /Script/Pal7.PaladinNPC.Monitor_Init
	// void Monitor_Init(bool EnvTagExist, bool QuestTagExist, bool QuestInvalidTagExist, int32_t PIDJudge, bool ReceiveQuest, bool CompleteQuest); // [0xeb1e10] Native|Protected     
	// Function /Script/Pal7.PaladinNPC.IsNPCHidden
	// bool IsNPCHidden();                                                                                                   // [0xeb1a70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinNPC.IsMoveActive
	// bool IsMoveActive();                                                                                                  // [0xeb1a40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinNPC.IsFactorEnable
	// bool IsFactorEnable(EPaladinNPCEnableFactor Factor);                                                                  // [0xeb18c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinNPC.GetShowTurnDebugInfo
	// bool GetShowTurnDebugInfo();                                                                                          // [0xe7fdc0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinNPC.GetEnableList
	// TArray<FPaladinNPCEnableComposite> GetEnableList();                                                                   // [0xeb1430] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinNPC.ClearEnable
	// void ClearEnable(EPaladinNPCEnableLord InLord, bool bApplyLord);                                                      // [0xeb1260] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinNPC.CanEnablePerception
	// bool CanEnablePerception();                                                                                           // [0xeb1230] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinNPC.ActiveMove
	// void ActiveMove(bool Inactive, bool bReset);                                                                          // [0xeb0f10] Native|Public|BlueprintCallable 
};
#pragma pack(pop)

/// Class /Script/Pal7.PaladinAvatarNPC
/// Size: 0x0250 (0x000550 - 0x0007A0)
class APaladinAvatarNPC : public APaladinNPC
{ 
public:
	unsigned char                                      UnknownData00_3[0x78];                                      // 0x0548   (0x0078)  MISSED
	class UPhysicsAsset*                               MeshPhysicsAsset;                                           // 0x05C0   (0x0008)  
	TArray<class USkeletalMesh*>                       LoadedMergeMeshes;                                          // 0x05C8   (0x0010)  
	SDK_UNDEFINED(16,1415) /* TArray<TWeakObjectPtr<USkeletalMesh*>> */ __um(AsyncLoadMergeMesheQueues);           // 0x05D8   (0x0010)  
	SDK_UNDEFINED(80,1416) /* TMap<USkeletalMeshComponent*, TWeakObjectPtr<USkeletalMesh*>> */ __um(MasterMeshRuntimeMaps); // 0x05E8   (0x0050)  
	SDK_UNDEFINED(40,1417) /* TWeakObjectPtr<USkeletalMesh*> */ __um(HeadMeshSoftPtr);                             // 0x0638   (0x0028)  
	class USkeletalMeshComponent*                      Head;                                                       // 0x0660   (0x0008)  
	class USkeletalMeshComponent*                      Clothes;                                                    // 0x0668   (0x0008)  
	class USkeletalMeshComponent*                      Pants;                                                      // 0x0670   (0x0008)  
	SDK_UNDEFINED(16,1418) /* FMulticastInlineDelegate */ __um(OnMeshMergeDoneSignature);                          // 0x0678   (0x0010)  
	bool                                               bAllowMergeBodyParts;                                       // 0x0688   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0689   (0x0007)  MISSED
	SDK_UNDEFINED(16,1419) /* TArray<TWeakObjectPtr<USkeletalMesh*>> */ __um(MergeMeshes);                         // 0x0690   (0x0010)  
	TArray<FSkeletalMaterial>                          MergeOverrideMaterials;                                     // 0x06A0   (0x0010)  
	bool                                               bUseFinalMergeRule : 1;                                     // 0x06B0:0 (0x0001)  
	bool                                               bLockMergeMaterial : 1;                                     // 0x06B0:1 (0x0001)  
	bool                                               bDestoryTmpMeshComps : 1;                                   // 0x06B0:2 (0x0001)  
	unsigned char                                      UnknownData02_4[0x7];                                       // 0x06B1   (0x0007)  MISSED
	SDK_UNDEFINED(80,1420) /* TMap<TWeakObjectPtr<UMaterialInterface*>, TWeakObjectPtr<UMaterialInterface*>> */ __um(LockedMaterialMap); // 0x06B8   (0x0050)  
	SDK_UNDEFINED(16,1421) /* TArray<TWeakObjectPtr<USkeletalMesh*>> */ __um(MainMergeMeshes);                     // 0x0708   (0x0010)  
	SDK_UNDEFINED(1,1422) /* TEnumAsByte<EAnimationMode> */ __um(AnimationMode_NPC);                               // 0x0718   (0x0001)  
	unsigned char                                      UnknownData03_5[0x7];                                       // 0x0719   (0x0007)  MISSED
	SDK_UNDEFINED(40,1423) /* TWeakObjectPtr<UAnimationAsset*> */ __um(AnimToPlay_NPC);                            // 0x0720   (0x0028)  
	SDK_UNDEFINED(40,1424) /* TWeakObjectPtr<UClass*> */ __um(AnimInstClass_NPC);                                  // 0x0748   (0x0028)  
	SDK_UNDEFINED(40,1425) /* TWeakObjectPtr<UPhysicsAsset*> */ __um(DynamicPhysicsAsset);                         // 0x0770   (0x0028)  
	bool                                               bDynamicShowMesh : 1;                                       // 0x0798:0 (0x0001)  
	bool                                               bSuperNNNNNNNNNNNPC;                                        // 0x0799   (0x0001)  
	bool                                               bResetAnim_NPC;                                             // 0x079A   (0x0001)  
	bool                                               bReplaceMergeOldMesh_NPC;                                   // 0x079B   (0x0001)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x079C   (0x0004)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinAvatarNPC.UnloadMergedMesh
	// void UnloadMergedMesh();                                                                                              // [0xe5e610] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAvatarNPC.RefreshFaceAnimInEditor
	// void RefreshFaceAnimInEditor(class UAnimSequenceBase*& FaceAnim);                                                     // [0xe5bdb0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinAvatarNPC.OnMergeMeshLoadDone
	// void OnMergeMeshLoadDone();                                                                                           // [0xe5a5e0] Final|Native|Private 
	// Function /Script/Pal7.PaladinAvatarNPC.OnMergeMeshDone
	// void OnMergeMeshDone(class USkeletalMesh* NewMesh);                                                                   // [0xe5a560] Final|Native|Private 
	// Function /Script/Pal7.PaladinAvatarNPC.LockOrRandomMergeMaterial
	// void LockOrRandomMergeMaterial(class USkeletalMeshComponent* MergeMeshComp);                                          // [0xe59ce0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAvatarNPC.K2_SetFaceAnimationEnable
	// void K2_SetFaceAnimationEnable(bool Enable);                                                                          // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinAvatarNPC.DynamicUnloadMergedMesh
	// void DynamicUnloadMergedMesh();                                                                                       // [0xe53710] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAvatarNPC.DynamicMergedMesh
	// void DynamicMergedMesh();                                                                                             // [0xe536f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAvatarNPC.BuildMergePreviewMesh
	// void BuildMergePreviewMesh(bool bReBuild);                                                                            // [0xe52350] Final|Native|Public|BlueprintCallable 
};

/// Struct /Script/Pal7.SimpleAttackableNPCAttr
/// Size: 0x000C (0x000000 - 0x00000C)
struct FSimpleAttackableNPCAttr
{ 
	float                                              MaxHP;                                                      // 0x0000   (0x0004)  
	float                                              CurrentHP;                                                  // 0x0004   (0x0004)  
	float                                              DamagePerAttacked;                                          // 0x0008   (0x0004)  
};

/// Class /Script/Pal7.AttackableAvatarNPC
/// Size: 0x0030 (0x0007A0 - 0x0007D0)
class AAttackableAvatarNPC : public APaladinAvatarNPC
{ 
public:
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x07A0   (0x0008)  MISSED
	FSimpleAttackableNPCAttr                           NPCAttribulte;                                              // 0x07A8   (0x000C)  
	bool                                               bImmediatelyGameEndIfDead;                                  // 0x07B4   (0x0001)  
	ENPCReceiveAttackedType                            CanReceiveDamageFrom;                                       // 0x07B5   (0x0001)  
	AttackableNPCState                                 CurrentState;                                               // 0x07B6   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x07B7   (0x0001)  MISSED
	FGameplayTag                                       DieTriggerTag;                                              // 0x07B8   (0x0008)  
	unsigned char                                      UnknownData02_6[0x10];                                      // 0x07C0   (0x0010)  MISSED


	/// Functions
	// Function /Script/Pal7.AttackableAvatarNPC.RestAttribuilte
	// void RestAttribuilte();                                                                                               // [0xe33070] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.AttackableAvatarNPC.K2_ReceiveAttackedEvent
	// void K2_ReceiveAttackedEvent(class APaladinCharacterBase* Attacker);                                                  // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.AttackableAvatarNPC.K2_OnStateChange
	// void K2_OnStateChange(AttackableNPCState NewState);                                                                   // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.AttackableAvatarNPC.K2_OnDie
	// void K2_OnDie();                                                                                                      // [0x15dd8c0] Event|Public|BlueprintEvent 
};

/// Class /Script/Pal7.BaseCameraModifier
/// Size: 0x0068 (0x000048 - 0x0000B0)
class UBaseCameraModifier : public UCameraModifier
{ 
public:
	float                                              CooldownAfterPlayerInput;                                   // 0x0048   (0x0004)  
	unsigned char                                      UnknownData00_6[0x64];                                      // 0x004C   (0x0064)  MISSED
};

/// Class /Script/Pal7.BaseSceneAtmosphereModifier
/// Size: 0x0020 (0x000028 - 0x000048)
class UBaseSceneAtmosphereModifier : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x48];                                      // 0x0000   (0x0048)  MISSED


	/// Functions
	// Function /Script/Pal7.BaseSceneAtmosphereModifier.ReceiveRevertModify
	// void ReceiveRevertModify();                                                                                           // [0xe32f90] Native|Event|Public|BlueprintEvent 
	// Function /Script/Pal7.BaseSceneAtmosphereModifier.ReceiveApplyModify
	// void ReceiveApplyModify();                                                                                            // [0xe32f70] Native|Event|Public|BlueprintEvent 
	// Function /Script/Pal7.BaseSceneAtmosphereModifier.FinishModify
	// void FinishModify();                                                                                                  // [0xe32030] Final|Native|Public|BlueprintCallable 
};

/// Struct /Script/Pal7.BeatenEffectConfig
/// Size: 0x0018 (0x000000 - 0x000018)
struct FBeatenEffectConfig
{ 
	class UParticleSystem*                             Effect;                                                     // 0x0000   (0x0008)  
	float                                              Delay;                                                      // 0x0008   (0x0004)  
	FName                                              SocketName;                                                 // 0x000C   (0x0008)  
	bool                                               bAttach;                                                    // 0x0014   (0x0001)  
	bool                                               bPlayerHitEffect;                                           // 0x0015   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0016   (0x0002)  MISSED
};

/// Struct /Script/Pal7.CanLockPart
/// Size: 0x0010 (0x000000 - 0x000010)
struct FCanLockPart
{ 
	FName                                              SocketName;                                                 // 0x0000   (0x0008)  
	bool                                               bCanbeLock;                                                 // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	float                                              LockOffset;                                                 // 0x000C   (0x0004)  
};

/// Struct /Script/Pal7.LockTargetSet
/// Size: 0x001C (0x000000 - 0x00001C)
struct FLockTargetSet
{ 
	SDK_UNDEFINED(8,1426) /* TWeakObjectPtr<APaladinCharacterBase*> */ __um(LockTargetObj);                        // 0x0000   (0x0008)  
	ELockType                                          LockType;                                                   // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	FCanLockPart                                       CanLockPart;                                                // 0x000C   (0x0010)  
};

/// Class /Script/Pal7.PaladinCharacterBase
/// Size: 0x07C0 (0x0004C0 - 0x000C80)
#pragma pack(push, 0x1)
class alignas(0x10) APaladinCharacterBase : public ACharacter
{ 
public:
	unsigned char                                      UnknownData00_3[0x20];                                      // 0x04B8   (0x0020)  MISSED
	class UPaladinAbilitySystemComponent*              AbilitySystemComponent;                                     // 0x04D8   (0x0008)  
	class UPaladinCustomSpecialEffect_TimeDilation*    CustomSpecialEffect_TimeDilation;                           // 0x04E0   (0x0008)  
	class UPaladinPostprocessManager*                  PalPostProcessManager;                                      // 0x04E8   (0x0008)  
	class UPaladinBaseAttrSet*                         BaseAttrSet;                                                // 0x04F0   (0x0008)  
	class UPaladinSecondaryAttrSet*                    SecondaryAttrSet;                                           // 0x04F8   (0x0008)  
	class UPaladinActionAttrSet*                       ActionAttrSet;                                              // 0x0500   (0x0008)  
	FName                                              PaladinName;                                                // 0x0508   (0x0008)  
	class UAnimMontage*                                Montage_BeatenBack;                                         // 0x0510   (0x0008)  
	class UAnimMontage*                                Montage_BeatenFront;                                        // 0x0518   (0x0008)  
	class UAnimMontage*                                Montage_BeatenLeft;                                         // 0x0520   (0x0008)  
	class UAnimMontage*                                Montage_BeatenRight;                                        // 0x0528   (0x0008)  
	class UAnimMontage*                                Montage_BeatenBack2;                                        // 0x0530   (0x0008)  
	class UAnimMontage*                                Montage_BeatenFront2;                                       // 0x0538   (0x0008)  
	class UAnimMontage*                                Montage_BeatenLeft2;                                        // 0x0540   (0x0008)  
	class UAnimMontage*                                Montage_BeatenRight2;                                       // 0x0548   (0x0008)  
	class UAnimMontage*                                Montage_GetUpFront;                                         // 0x0550   (0x0008)  
	class UAnimMontage*                                Montage_GetUpBack;                                          // 0x0558   (0x0008)  
	class UAnimMontage*                                Montage_Death;                                              // 0x0560   (0x0008)  
	class UAnimMontage*                                Montage_Dodge;                                              // 0x0568   (0x0008)  
	class UAnimMontage*                                Montage_StrongBeatenBack;                                   // 0x0570   (0x0008)  
	class UAnimMontage*                                Montage_Stand;                                              // 0x0578   (0x0008)  
	class UDataTable*                                  _AbilityDataTable;                                          // 0x0580   (0x0008)  
	class UDataTable*                                  _BaseAttrDataTable;                                         // 0x0588   (0x0008)  
	TArray<class UClass*>                              EventAbilityList;                                           // 0x0590   (0x0010)  
	TArray<FBeatenEffectConfig>                        BeatenEffects;                                              // 0x05A0   (0x0010)  
	bool                                               _bInBattle;                                                 // 0x05B0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x05B1   (0x0003)  MISSED
	FLockTargetSet                                     LockTarget;                                                 // 0x05B4   (0x001C)  
	bool                                               bCanbeLock;                                                 // 0x05D0   (0x0001)  
	bool                                               bOcclusionCheck;                                            // 0x05D1   (0x0001)  
	bool                                               bShowInCreaseUINotControl;                                  // 0x05D2   (0x0001)  
	unsigned char                                      UnknownData02_5[0x5];                                       // 0x05D3   (0x0005)  MISSED
	SDK_UNDEFINED(16,1427) /* FMulticastInlineDelegate */ __um(OnReceiveGameplayEffectAppliedToSelf);              // 0x05D8   (0x0010)  
	SDK_UNDEFINED(16,1428) /* FMulticastInlineDelegate */ __um(OnHitByHostileDamage);                              // 0x05E8   (0x0010)  
	SDK_UNDEFINED(16,1429) /* FMulticastInlineDelegate */ __um(OnHPChanged);                                       // 0x05F8   (0x0010)  
	unsigned char                                      UnknownData03_5[0x30];                                      // 0x0608   (0x0030)  MISSED
	SDK_UNDEFINED(16,1430) /* FMulticastInlineDelegate */ __um(OnInOutFighting);                                   // 0x0638   (0x0010)  
	SDK_UNDEFINED(16,1431) /* FMulticastInlineDelegate */ __um(OnPaladinCharacterRespawn);                         // 0x0648   (0x0010)  
	SDK_UNDEFINED(16,1432) /* FMulticastInlineDelegate */ __um(OnPaladinCharacterDie);                             // 0x0658   (0x0010)  
	SDK_UNDEFINED(16,1433) /* FMulticastInlineDelegate */ __um(OnPaladinLandedEnd);                                // 0x0668   (0x0010)  
	unsigned char                                      UnknownData04_5[0x30];                                      // 0x0678   (0x0030)  MISSED
	SDK_UNDEFINED(16,1434) /* FMulticastInlineDelegate */ __um(OnDodgeDelegate);                                   // 0x06A8   (0x0010)  
	SDK_UNDEFINED(16,1435) /* FMulticastInlineDelegate */ __um(BeHitDelegate);                                     // 0x06B8   (0x0010)  
	float                                              BeHitCustomTimeDilationFactor;                              // 0x06C8   (0x0004)  
	unsigned char                                      UnknownData05_5[0x4];                                       // 0x06CC   (0x0004)  MISSED
	SDK_UNDEFINED(80,1436) /* TMap<EPhysicalSurface, USoundAtomCue*> */ __um(BeHitAtomSounds);                     // 0x06D0   (0x0050)  
	unsigned char                                      UnknownData06_5[0x4];                                       // 0x0720   (0x0004)  MISSED
	float                                              SoundVolume;                                                // 0x0724   (0x0004)  
	class USoundAttenuation*                           AttenuationSettings;                                        // 0x0728   (0x0008)  
	SDK_UNDEFINED(80,1437) /* TMap<EPhysicalSurface, FAtomSelectorParam> */ __um(AtomSoundSelectorMap);            // 0x0730   (0x0050)  
	unsigned char                                      UnknownData07_5[0xC];                                       // 0x0780   (0x000C)  MISSED
	float                                              BodyDisappearTime;                                          // 0x078C   (0x0004)  
	bool                                               IsConfigAbilityNoBeatBack;                                  // 0x0790   (0x0001)  
	unsigned char                                      UnknownData08_5[0x3];                                       // 0x0791   (0x0003)  MISSED
	float                                              StiffTime;                                                  // 0x0794   (0x0004)  
	TArray<FCanLockPart>                               CanLockParts;                                               // 0x0798   (0x0010)  
	float                                              BaseMoveSpeed;                                              // 0x07A8   (0x0004)  
	unsigned char                                      UnknownData09_5[0x4];                                       // 0x07AC   (0x0004)  MISSED
	class UClass*                                      BreakGE;                                                    // 0x07B0   (0x0008)  
	TArray<class UClass*>                              NativeBuffs;                                                // 0x07B8   (0x0010)  
	TArray<FGameplayAttribute>                         CharAttribute;                                              // 0x07C8   (0x0010)  
	bool                                               bCanAirBeatenBack;                                          // 0x07D8   (0x0001)  
	bool                                               bDebugASC;                                                  // 0x07D9   (0x0001)  
	bool                                               bOnlyOneDirectionStrukDown;                                 // 0x07DA   (0x0001)  
	bool                                               bDrawStruckDownArrow;                                       // 0x07DB   (0x0001)  
	unsigned char                                      UnknownData10_5[0x4];                                       // 0x07DC   (0x0004)  MISSED
	FTimerHandle                                       HBodyDisapear;                                              // 0x07E0   (0x0008)  
	bool                                               bDestroyDeathBody;                                          // 0x07E8   (0x0001)  
	unsigned char                                      UnknownData11_5[0x7];                                       // 0x07E9   (0x0007)  MISSED
	SDK_UNDEFINED(16,1438) /* FMulticastInlineDelegate */ __um(OnUpdateBuff);                                      // 0x07F0   (0x0010)  
	SDK_UNDEFINED(16,1439) /* FMulticastInlineDelegate */ __um(OnbilityActiveEvent);                               // 0x0800   (0x0010)  
	SDK_UNDEFINED(16,1440) /* FMulticastInlineDelegate */ __um(OnAbilityActiveEndEvent);                           // 0x0810   (0x0010)  
	bool                                               bCustomCanJump;                                             // 0x0820   (0x0001)  
	bool                                               bCanPushbyLeaderHero;                                       // 0x0821   (0x0001)  
	bool                                               bCanPushDamagebyHurt;                                       // 0x0822   (0x0001)  
	bool                                               bCanStruckDown;                                             // 0x0823   (0x0001)  
	bool                                               bIgnorePressure;                                            // 0x0824   (0x0001)  
	unsigned char                                      UnknownData12_5[0x3];                                       // 0x0825   (0x0003)  MISSED
	SDK_UNDEFINED(16,1441) /* FMulticastInlineDelegate */ __um(OnCharacterSkillLoaded);                            // 0x0828   (0x0010)  
	bool                                               bNotPlayDeathMontage;                                       // 0x0838   (0x0001)  
	unsigned char                                      UnknownData13_5[0x13];                                      // 0x0839   (0x0013)  MISSED
	float                                              BeatenBackCD;                                               // 0x084C   (0x0004)  
	unsigned char                                      UnknownData14_5[0x383];                                     // 0x0850   (0x0383)  MISSED
	bool                                               bAntiStun;                                                  // 0x0BD3   (0x0001)  
	bool                                               bCanDie;                                                    // 0x0BD4   (0x0001)  
	unsigned char                                      UnknownData15_5[0x3];                                       // 0x0BD5   (0x0003)  MISSED
	SDK_UNDEFINED(80,1442) /* TMap<FName, FGameplayAbilitySpecHandle> */ __um(CacheComboAbilitySpecHandles);       // 0x0BD8   (0x0050)  
	unsigned char                                      UnknownData16_6[0x50];                                      // 0x0C28   (0x0050)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinCharacterBase.UpdateTagMap
	// void UpdateTagMap(FGameplayTag& BaseTag, int32_t CountDelta);                                                         // [0xe678b0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.UnLockAllAction
	// void UnLockAllAction();                                                                                               // [0xe67890] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.TryTurnToLockEnemy
	// void TryTurnToLockEnemy(bool IsInstant);                                                                              // [0xe67800] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.TryExcuteAbilityByKey
	// bool TryExcuteAbilityByKey(FName Key);                                                                                // [0xe67770] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.TryExcuteAbility
	// bool TryExcuteAbility(class UClass* AbilityClass);                                                                    // [0xe676d0] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.TryDoJump
	// void TryDoJump();                                                                                                     // [0xe676b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.TryDoDodge
	// bool TryDoDodge();                                                                                                    // [0xe67680] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.TryCancelCurrentAttackAbility
	// void TryCancelCurrentAttackAbility();                                                                                 // [0xe67660] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.ToggleSprintState
	// void ToggleSprintState(bool bOpen);                                                                                   // [0xe675d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.ToggleLockPartState
	// void ToggleLockPartState(FName SocketName, bool bCanLock);                                                            // [0xe67500] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.ToggleHasBeaternMove
	// void ToggleHasBeaternMove(bool bHasMove);                                                                             // [0xe67480] Final|Native|Protected|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.StartStruckDown
	// void StartStruckDown();                                                                                               // [0xe67460] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.StartFighting
	// void StartFighting();                                                                                                 // [0xe67440] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.ShowWidgetComp
	// void ShowWidgetComp();                                                                                                // [0xe67420] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.SetWidgetCompASCRef
	// void SetWidgetCompASCRef();                                                                                           // [0xe67400] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.SetScalarParameterToMID
	// void SetScalarParameterToMID(FName Param, float value);                                                               // [0xe67330] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.SetPaladinHidden
	// void SetPaladinHidden(FName InLockCertificate, bool bInHidden);                                                       // [0xe67260] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.SetNewBaseMoveSpeed
	// void SetNewBaseMoveSpeed(float NewSpeed);                                                                             // [0xe671e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.SetMovementEnabled
	// void SetMovementEnabled(bool IsEnabled);                                                                              // [0xe67150] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.SetIsFloating
	// void SetIsFloating(bool B);                                                                                           // [0xe670c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.SetInterruptedFlag
	// void SetInterruptedFlag(ECharacterUnInterruptedFlag UnInterruptedReason, bool bAdd);                                  // [0xe66ff0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.SetCurrentBreakLevelAndDir
	// void SetCurrentBreakLevelAndDir(EBreakLevel Level, FVector Dir);                                                      // [0xe66f20] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.SetAttribute
	// void SetAttribute(FGameplayAttribute Attribute, float NewValue);                                                      // [0xe66d20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.SetAntiStun
	// void SetAntiStun(bool bValue);                                                                                        // [0xe66c90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.SetActionStateFlag
	// void SetActionStateFlag(ECharacterActionStateFlags flag, bool B);                                                     // [0xe66bc0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.RespawnPlayer
	// void RespawnPlayer(float HPPercent, bool bPlayMontage);                                                               // [0xe66af0] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.ResetLockTarget
	// void ResetLockTarget();                                                                                               // [0xe66ad0] Native|Public        
	// Function /Script/Pal7.PaladinCharacterBase.RemoveBeatenBackQueue
	// void RemoveBeatenBackQueue();                                                                                         // [0xe66ab0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.RemoveAllDebuffWhenEndFigthing
	// void RemoveAllDebuffWhenEndFigthing();                                                                                // [0xe66a90] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.RemoveAllDebuffWhenDead
	// void RemoveAllDebuffWhenDead();                                                                                       // [0xe66a70] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.PrintAbilityDebugInfo
	// void PrintAbilityDebugInfo();                                                                                         // [0xe66a50] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.PlayJumpEndAnim
	// void PlayJumpEndAnim();                                                                                               // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.PerformBeatenRootMotion
	// void PerformBeatenRootMotion(FVector& WorldDirection, float& Strength, class UCurveFloat* PhysicsBeatenCureve, float Duration); // [0xe668d0] Final|Native|Private|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.PerfomrBeatenBack
	// void PerfomrBeatenBack(class UPaladinComboAbility* HitAbility, FVector& BeatenLocation, FVector& BeatenNormal, FBeatenBackParam& BeatenBackParam); // [0xe66740] Final|Native|Private|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.PalMovementComp
	// class UPaladinCharMovementComponent* PalMovementComp();                                                               // [0xe66710] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.OpenPassiveMove
	// void OpenPassiveMove(bool bSweep, EPaladinPassiveMoveMode MoveMode);                                                  // [0xe66650] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.OnSummonSuperHeroState
	// void OnSummonSuperHeroState(EPaladinSuperHeroState SuperHeroState);                                                   // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.OnStartStun
	// void OnStartStun();                                                                                                   // [0xe66630] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.OnMoveSpeedChange
	// void OnMoveSpeedChange();                                                                                             // [0xe66610] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.OnEndStun
	// void OnEndStun();                                                                                                     // [0xe665f0] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.OnCharacterBreak
	// void OnCharacterBreak();                                                                                              // [0x15dd8c0] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.MarkUpdateCurrentCanUseAbilitiesDirty
	// void MarkUpdateCurrentCanUseAbilitiesDirty();                                                                         // [0xe665d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.MarkCanDodgeEnd
	// void MarkCanDodgeEnd();                                                                                               // [0xe665b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.LockAllAction
	// void LockAllAction();                                                                                                 // [0xe66590] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.K2_PostApplyDamage
	// void K2_PostApplyDamage(float& DamageAmount);                                                                         // [0x15dd8c0] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.K2_OnToggleAirBeatern
	// void K2_OnToggleAirBeatern(EBeatenBackDirection BeaternDirT, bool Open);                                              // [0x15dd8c0] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.K2_OnStartStun
	// void K2_OnStartStun();                                                                                                // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.K2_OnStartStruckDown
	// void K2_OnStartStruckDown(bool bFrontHit);                                                                            // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.K2_OnStartFighting
	// void K2_OnStartFighting();                                                                                            // [0x15dd8c0] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.K2_OnReceiveDamage
	// void K2_OnReceiveDamage(class AActor* Attacker, float& DamageAmount);                                                 // [0x15dd8c0] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.K2_OnReceiveCured
	// void K2_OnReceiveCured(class AActor* Curer, float& CureAmount);                                                       // [0x15dd8c0] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.K2_OnPushByLeaderHero
	// void K2_OnPushByLeaderHero(FVector PushDir);                                                                          // [0x15dd8c0] Event|Public|HasDefaults|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.K2_OnGERemoved
	// void K2_OnGERemoved(class UGameplayEffect* GE);                                                                       // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.K2_OnGamePlayCue
	// void K2_OnGamePlayCue(TEnumAsByte<EGameplayCueEvent> EventType, FGameplayCueParameters Parameters);                   // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.K2_OnEndStun
	// void K2_OnEndStun();                                                                                                  // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.K2_OnEndStruckDown
	// void K2_OnEndStruckDown(bool bFrontHit, bool bSkipedGetUp);                                                           // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.K2_OnEndFighting
	// void K2_OnEndFighting();                                                                                              // [0x15dd8c0] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.K2_OnDestructTarget
	// void K2_OnDestructTarget(class AActor* Target, FVector& HitLoc, FVector& HitNormal);                                  // [0x15dd8c0] Event|Public|HasOutParms|HasDefaults|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.K2_EndDead
	// void K2_EndDead();                                                                                                    // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.K2_CauseStruckDown
	// void K2_CauseStruckDown(class AActor* Attacker);                                                                      // [0x15dd8c0] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.K2_CanNotDie
	// bool K2_CanNotDie();                                                                                                  // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.K2_BeginRespawn
	// void K2_BeginRespawn(bool bPlayMontage);                                                                              // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.K2_BeginDie
	// void K2_BeginDie();                                                                                                   // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.K2_AbilityEndedEvent
	// void K2_AbilityEndedEvent(class UPaladinComboAbility* Ability);                                                       // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.K2_AbilityActiveEvent
	// void K2_AbilityActiveEvent(class UPaladinComboAbility* Ability);                                                      // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.IsUnInterruptable
	// bool IsUnInterruptable();                                                                                             // [0xe66560] Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinCharacterBase.IsInvincible
	// bool IsInvincible(bool bDodgeUseful);                                                                                 // [0xe664d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.IsinStrukDown
	// bool IsinStrukDown();                                                                                                 // [0xe66080] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinCharacterBase.IsInAir
	// bool IsInAir();                                                                                                       // [0xe664a0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinCharacterBase.IsDodging
	// bool IsDodging();                                                                                                     // [0xe66470] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinCharacterBase.IsAlive
	// bool IsAlive();                                                                                                       // [0xe66440] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinCharacterBase.HideWidgetComp
	// void HideWidgetComp();                                                                                                // [0xe66420] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.HasAnyBeaternBack
	// bool HasAnyBeaternBack();                                                                                             // [0xe663f0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinCharacterBase.GetUnLockAbilitys
	// void GetUnLockAbilitys(TArray<FText>& OutAbilities);                                                                  // [0xe662f0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinCharacterBase.GetUnLockAbilityRowNames
	// void GetUnLockAbilityRowNames(TArray<FName>& OutAbilities);                                                           // [0xe66240] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinCharacterBase.GetOwnedGameplayTags
	// void GetOwnedGameplayTags(FGameplayTagContainer& TagContainer);                                                       // [0xe66180] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.GetLockTargetDirection
	// FVector GetLockTargetDirection(bool NoTargetReturnMyForward);                                                         // [0xe660d0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.GetLevel
	// int32_t GetLevel();                                                                                                   // [0xe660a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.GetInStruckDown
	// bool GetInStruckDown();                                                                                               // [0xe66080] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.GetInBattle
	// bool GetInBattle();                                                                                                   // [0xe66060] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinCharacterBase.GetHealingAblitys
	// bool GetHealingAblitys(TArray<FName>& SelfAbilities, TArray<FName>& GroupHealingAbilities);                           // [0xe65f40] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinCharacterBase.GetEnableCollision
	// bool GetEnableCollision();                                                                                            // [0xe65f10] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinCharacterBase.GetCurrentCanUseAbilityNames
	// void GetCurrentCanUseAbilityNames(TArray<FName>& OutAbilities);                                                       // [0xe65e60] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinCharacterBase.GetCurrentActiveAbilities
	// void GetCurrentActiveAbilities(TArray<FText>& OutAbilities);                                                          // [0xe65d60] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinCharacterBase.GetCharacterComboAbilityByKey
	// class UPaladinComboAbility* GetCharacterComboAbilityByKey(FName Key);                                                 // [0xe65cd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.GetCharacterComboAbilityByClass
	// class UPaladinComboAbility* GetCharacterComboAbilityByClass(class UClass* AbilityClass);                              // [0xe65c40] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.GetBaseAttr
	// void GetBaseAttr(TArray<FGameplayAttribute>& AttriArray);                                                             // [0xe65b60] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.GetActiveComboAbilitySpec
	// bool GetActiveComboAbilitySpec(FGameplayAbilitySpec& OutAbilitySpec);                                                 // [0xe65940] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.GetActiveComboAbilityRow
	// bool GetActiveComboAbilityRow(FPaladinAbilityDataRow& OutAbilityDataRow);                                             // [0xe65870] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.GetActiveAbilityByClass
	// bool GetActiveAbilityByClass(class UClass* InClass, FGameplayAbilitySpec& OutAbility);                                // [0xe65610] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.GetActionStateFlag
	// bool GetActionStateFlag(ECharacterActionStateFlags flag);                                                             // [0xe65580] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.GetAbilityControlType
	// EPaladinAbilityControlType GetAbilityControlType(class UGameplayAbility* Ability);                                    // [0xe654f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.EndStruckDown
	// void EndStruckDown(bool bSkipGetup);                                                                                  // [0xe65460] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.EndPassiveMove
	// void EndPassiveMove();                                                                                                // [0xe65440] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.EndFighting
	// void EndFighting();                                                                                                   // [0xe65420] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.DoDodge
	// void DoDodge();                                                                                                       // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.DodgeEnd
	// void DodgeEnd();                                                                                                      // [0xe65400] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.Die_LandDisableMovement
	// void Die_LandDisableMovement();                                                                                       // [0xe653e0] Final|Native|Public  
	// Function /Script/Pal7.PaladinCharacterBase.Die
	// void Die(class AActor* InInstigator);                                                                                 // [0xe65360] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.DealSimpleCameraNotify
	// void DealSimpleCameraNotify(class UPaladinSimpleCameraAnimData* CameraAnimData);                                      // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.DealPaladinAnimNotify
	// void DealPaladinAnimNotify(FGameplayEventData& Payload, FString DisplayString);                                       // [0x15dd8c0] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.CustomPerfromBeatenEffects
	// bool CustomPerfromBeatenEffects(class UPaladinComboAbility* HitAbility, int32_t HitIdx, FVector& BeatenLocation, FVector& BeatenNormal, class AActor* Attacker); // [0xe65190] Native|Event|Protected|HasOutParms|HasDefaults|BlueprintEvent 
	// Function /Script/Pal7.PaladinCharacterBase.ComboAbilityIsActive
	// bool ComboAbilityIsActive(class UClass* AbilityClass);                                                                // [0xe65100] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.ClearBeatenBackTimer
	// void ClearBeatenBackTimer();                                                                                          // [0xe650e0] Final|Native|Private|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.CanTurn
	// bool CanTurn();                                                                                                       // [0xe65000] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.CanFreeMove
	// bool CanFreeMove();                                                                                                   // [0xe64fd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.CanExcuteAbilityByKey
	// bool CanExcuteAbilityByKey(FName Key);                                                                                // [0xe64f40] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.CanDodge
	// bool CanDodge();                                                                                                      // [0xe64f10] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.CancelAllAbilities
	// void CancelAllAbilities();                                                                                            // [0xe650c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.CancelAbilityByClass
	// bool CancelAbilityByClass(class UClass* InClass);                                                                     // [0xe65030] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.CanAttack
	// bool CanAttack();                                                                                                     // [0xe64ee0] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.CalcDodgeDirectionDegree
	// float CalcDodgeDirectionDegree();                                                                                     // [0xe64eb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.AddOrRemoveGameplayTag
	// void AddOrRemoveGameplayTag(FGameplayTag Tag, bool isAdd);                                                            // [0xe64de0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.AddOrRemoveDebuf_StrukDown
	// void AddOrRemoveDebuf_StrukDown(bool bAdd);                                                                           // [0xe64d50] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.AddOrRemoveDebuf_Move
	// void AddOrRemoveDebuf_Move(bool B);                                                                                   // [0xe64cc0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterBase.AddOrRemoveDebuf_Attack
	// void AddOrRemoveDebuf_Attack(bool B);                                                                                 // [0xe64c30] Final|Native|Public|BlueprintCallable 
};
#pragma pack(pop)

/// Struct /Script/Pal7.PaladinAttrDataRow
/// Size: 0x0020 (0x000008 - 0x000028)
struct FPaladinAttrDataRow : FTableRowBase
{ 
	float                                              HPMAX;                                                      // 0x0008   (0x0004)  
	float                                              MPMAX;                                                      // 0x000C   (0x0004)  
	float                                              PhysicalAtk;                                                // 0x0010   (0x0004)  
	float                                              PhysicalDef;                                                // 0x0014   (0x0004)  
	float                                              SpellAtk;                                                   // 0x0018   (0x0004)  
	float                                              SpellDef;                                                   // 0x001C   (0x0004)  
	float                                              LevelGainManaRateByNormalAttack;                            // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/Pal7.MonsterInfo
/// Size: 0x02A8 (0x000008 - 0x0002B0)
struct FMonsterInfo : FTableRowBase
{ 
	FGameplayTag                                       Tag;                                                        // 0x0008   (0x0008)  
	EMonsterKind                                       MonsterKind;                                                // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0011   (0x0007)  MISSED
	SDK_UNDEFINED(24,1443) /* FText */                 __um(PaladinName);                                          // 0x0018   (0x0018)  
	SDK_UNDEFINED(40,1444) /* TWeakObjectPtr<UClass*> */ __um(MonsterClass);                                       // 0x0030   (0x0028)  
	FName                                              AttributeGroupName;                                         // 0x0058   (0x0008)  
	int32_t                                            Level;                                                      // 0x0060   (0x0004)  
	FName                                              HateConfigName;                                             // 0x0064   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x006C   (0x0004)  MISSED
	SDK_UNDEFINED(40,1445) /* TWeakObjectPtr<UBehaviorTree*> */ __um(BotBehavior);                                 // 0x0070   (0x0028)  
	SDK_UNDEFINED(80,1446) /* TMap<EPaladinActionMontage, TWeakObjectPtr<UAnimMontage*>> */ __um(FightMontageGroup); // 0x0098   (0x0050)  
	SDK_UNDEFINED(80,1447) /* TMap<EPaladinSkillEffectMontage, TWeakObjectPtr<UAnimMontage*>> */ __um(EffectMontageGroup); // 0x00E8   (0x0050)  
	float                                              AttackInterval;                                             // 0x0138   (0x0004)  
	float                                              AttackDistance;                                             // 0x013C   (0x0004)  
	float                                              MinAttackDistanceRatio;                                     // 0x0140   (0x0004)  
	float                                              MaxAttackAngle;                                             // 0x0144   (0x0004)  
	EMonsterAttackType                                 AttackType;                                                 // 0x0148   (0x0001)  
	bool                                               IsInitiative;                                               // 0x0149   (0x0001)  
	unsigned char                                      UnknownData02_5[0x6];                                       // 0x014A   (0x0006)  MISSED
	SDK_UNDEFINED(40,1448) /* TWeakObjectPtr<UDataTable*> */ __um(MonsterAbilityDataTable);                        // 0x0150   (0x0028)  
	SDK_UNDEFINED(80,1449) /* TMap<EMonsterSpeedMode, float> */ __um(MonsterSpeedConfig);                          // 0x0178   (0x0050)  
	float                                              BackToSpwanPointSpeedRatio;                                 // 0x01C8   (0x0004)  
	FName                                              DeadEffectAttachedBoneName;                                 // 0x01CC   (0x0008)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x01D4   (0x0004)  MISSED
	SDK_UNDEFINED(80,1450) /* TMap<TWeakObjectPtr<UAnimMontage*>, FRange_Angle> */ __um(AnimTurnMap);              // 0x01D8   (0x0050)  
	EBossBattleName                                    BossBattleName;                                             // 0x0228   (0x0001)  
	unsigned char                                      UnknownData04_5[0x7];                                       // 0x0229   (0x0007)  MISSED
	SDK_UNDEFINED(80,1451) /* TMap<EPaladinGameDifficulty, FMonsterDifficultyOverrideData> */ __um(DifficultyOverrideData); // 0x0230   (0x0050)  
	bool                                               IsEnemyGroup;                                               // 0x0280   (0x0001)  
	unsigned char                                      UnknownData05_5[0x7];                                       // 0x0281   (0x0007)  MISSED
	SDK_UNDEFINED(40,1452) /* TWeakObjectPtr<UClass*> */ __um(GroupAttributeMonsterClass);                         // 0x0288   (0x0028)  
};

/// Struct /Script/Pal7.PaladinCameraInfo
/// Size: 0x002C (0x000000 - 0x00002C)
struct FPaladinCameraInfo
{ 
	float                                              FOV;                                                        // 0x0000   (0x0004)  
	float                                              SpringArmLength;                                            // 0x0004   (0x0004)  
	FVector                                            SpringArmSocketOffset;                                      // 0x0008   (0x000C)  
	float                                              DepthOfFieldFocalDistance;                                  // 0x0014   (0x0004)  
	float                                              DepthOfFieldFocalRegion;                                    // 0x0018   (0x0004)  
	float                                              DepthOfFieldNearTransitionRegion;                           // 0x001C   (0x0004)  
	float                                              DepthOfFieldFarTransitionRegion;                            // 0x0020   (0x0004)  
	float                                              DepthOfFieldNearBlurSize;                                   // 0x0024   (0x0004)  
	float                                              DepthOfFieldFarBlurSize;                                    // 0x0028   (0x0004)  
};

/// Struct /Script/Pal7.PaladinTransCameraInfo
/// Size: 0x0030 (0x000000 - 0x000030)
struct FPaladinTransCameraInfo
{ 
	FPaladinCameraInfo                                 CameraInfo;                                                 // 0x0000   (0x002C)  
	float                                              TransitionTime;                                             // 0x002C   (0x0004)  
};

/// Class /Script/Pal7.PaladinEnemy
/// Size: 0x0490 (0x000C80 - 0x001110)
#pragma pack(push, 0x1)
class alignas(0x10) APaladinEnemy : public APaladinCharacterBase
{ 
public:
	EEnemyState                                        EnemyFightingState;                                         // 0x0C78   (0x0001)  
	EMonsterKind                                       MonsterKind;                                                // 0x0C79   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0C7A   (0x0006)  MISSED
	FPaladinAttrDataRow                                EnemyTypeBaseAttrRatio;                                     // 0x0C80   (0x0028)  
	float                                              EnemyDeathExpRatio;                                         // 0x0CA8   (0x0004)  
	bool                                               InitWithDataTable;                                          // 0x0CAC   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0CAD   (0x0003)  MISSED
	FMonsterInfo                                       MonsterInfo;                                                // 0x0CB0   (0x02B0)  
	SDK_UNDEFINED(16,1453) /* FMulticastInlineDelegate */ __um(SkillPerfromFinished);                              // 0x0F60   (0x0010)  
	bool                                               bIgnoreSummonSuperHeroHidden;                               // 0x0F70   (0x0001)  
	unsigned char                                      UnknownData02_5[0x2B];                                      // 0x0F71   (0x002B)  MISSED
	FName                                              GroupName;                                                  // 0x0F9C   (0x0008)  
	FVector                                            SpawnPoint;                                                 // 0x0FA4   (0x000C)  
	class UPaladinEnemyAttrSet*                        EnemyAttrSet;                                               // 0x0FB0   (0x0008)  
	SDK_UNDEFINED(16,1454) /* FMulticastInlineDelegate */ __um(OnSetAttackTarget);                                 // 0x0FB8   (0x0010)  
	bool                                               bNeverEndFightingByDistance;                                // 0x0FC8   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x0FC9   (0x0003)  MISSED
	float                                              MaxDistanceAwayFromSpawnPoint;                              // 0x0FCC   (0x0004)  
	float                                              MaxCatchupDistance;                                         // 0x0FD0   (0x0004)  
	bool                                               bCanAffectHeroCamera;                                       // 0x0FD4   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3];                                       // 0x0FD5   (0x0003)  MISSED
	FPaladinTransCameraInfo                            TransCameraInfo;                                            // 0x0FD8   (0x0030)  
	float                                              LockOffset;                                                 // 0x1008   (0x0004)  
	bool                                               bHoldInitiativeLock;                                        // 0x100C   (0x0001)  
	unsigned char                                      UnknownData05_5[0x3];                                       // 0x100D   (0x0003)  MISSED
	class UInteractionComponent*                       InteractComp;                                               // 0x1010   (0x0008)  
	bool                                               bEnableBattleCourange;                                      // 0x1018   (0x0001)  
	bool                                               bEnableBattleWorried;                                       // 0x1019   (0x0001)  
	bool                                               bNeedHover;                                                 // 0x101A   (0x0001)  
	bool                                               bForceHiideHP;                                              // 0x101B   (0x0001)  
	bool                                               bGiveExp;                                                   // 0x101C   (0x0001)  
	bool                                               bSeqModeBackSpawnPoint;                                     // 0x101D   (0x0001)  
	bool                                               bInitMeshRenderConfig;                                      // 0x101E   (0x0001)  
	bool                                               bAutoRunBotBehavior;                                        // 0x101F   (0x0001)  
	bool                                               bDebugPrintRotate;                                          // 0x1020   (0x0001)  
	bool                                               bSingleRotateDirection;                                     // 0x1021   (0x0001)  
	unsigned char                                      UnknownData06_5[0x6];                                       // 0x1022   (0x0006)  MISSED
	class APaladinHero*                                AttackTarget;                                               // 0x1028   (0x0008)  
	bool                                               IsLookingAtTarget;                                          // 0x1030   (0x0001)  
	unsigned char                                      UnknownData07_5[0x7];                                       // 0x1031   (0x0007)  MISSED
	SDK_UNDEFINED(80,1455) /* TMap<UAnimMontage*, FRange_Angle> */ __um(AnimTurnMap);                              // 0x1038   (0x0050)  
	class ULevelSequence*                              HeroUltimateHitLevelSequence;                               // 0x1088   (0x0008)  
	bool                                               IsInTurning;                                                // 0x1090   (0x0001)  
	EMonsterSpeedMode                                  SpeedMode;                                                  // 0x1091   (0x0001)  
	unsigned char                                      UnknownData08_5[0x56];                                      // 0x1092   (0x0056)  MISSED
	TArray<class UObject*>                             AssetsHolder;                                               // 0x10E8   (0x0010)  
	unsigned char                                      UnknownData09_6[0x10];                                      // 0x10F8   (0x0010)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinEnemy.UpdateLevel
	// void UpdateLevel(int32_t NewLevel);                                                                                   // [0xe77190] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemy.UnbindHeroAbilityActive
	// void UnbindHeroAbilityActive();                                                                                       // [0xe77170] Final|Native|Public  
	// Function /Script/Pal7.PaladinEnemy.TurnToTarget
	// class UAnimMontage* TurnToTarget(class AActor* TargetActor);                                                          // [0xe770e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemy.TurnToLocation
	// class UAnimMontage* TurnToLocation(FVector TargetLoc);                                                                // [0xe77040] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemy.ToggleSpeedMode
	// void ToggleSpeedMode(EMonsterSpeedMode& NewMode);                                                                     // [0xe76fb0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemy.ToggleMeshVisible
	// void ToggleMeshVisible(bool Visible);                                                                                 // [0xe76f20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemy.ToggleEnemyState
	// void ToggleEnemyState(EEnemyState& EnemyState);                                                                       // [0xe76e90] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemy.StopLookAtTarget
	// void StopLookAtTarget();                                                                                              // [0xe76e70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemy.StopActionRotate
	// void StopActionRotate();                                                                                              // [0xe76e50] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemy.StartMoveToActorMode
	// void StartMoveToActorMode();                                                                                          // [0xe76e30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemy.StartLookAtTarget
	// void StartLookAtTarget(class AActor* Target, float RotateRate, float MaxAttackAngle);                                 // [0xe76d30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemy.StartFightingWithDelay
	// void StartFightingWithDelay(float MaxDelayTime);                                                                      // [0xe76cb0] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemy.StartActionRotateToTarget
	// void StartActionRotateToTarget(FName CurveName, bool bMoingWhenRotate, float MaxRotateAngle);                         // [0xe76ba0] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemy.StartActionRotate
	// void StartActionRotate(FName CurveName, float TargetAngle);                                                           // [0xe76ad0] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemy.ResetLevelConfig
	// void ResetLevelConfig(int32_t NewLevel);                                                                              // [0xe767a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemy.PassiveMove
	// void PassiveMove(float PushCharacterRecoverTime, FVector ImpactNormal, float PassiveMoveSpeed);                       // [0xe762a0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemy.OutHover
	// void OutHover();                                                                                                      // [0xe76280] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemy.OnTurnMontageEnded
	// void OnTurnMontageEnded(class UAnimMontage* Montage, bool bInterrupted);                                              // [0xe761b0] Final|Native|Public  
	// Function /Script/Pal7.PaladinEnemy.OnSpeedModeChanged
	// void OnSpeedModeChanged(EMonsterSpeedMode& NewMode);                                                                  // [0x15dd8c0] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/Pal7.PaladinEnemy.OnPerformAttack
	// void OnPerformAttack();                                                                                               // [0xe75df0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemy.OnHeroAblityActive
	// void OnHeroAblityActive(class APaladinCharacterBase* Character, class UPaladinComboAbility* Ability);                 // [0xe759e0] Final|Native|Public  
	// Function /Script/Pal7.PaladinEnemy.LookAtTargetYawDifference
	// float LookAtTargetYawDifference();                                                                                    // [0xe758e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemy.LoadMonsterInfo
	// void LoadMonsterInfo(FSaveMonsterInfo& MonsterInfo);                                                                  // [0xe75750] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemy.K2_UpdateAttrUI
	// void K2_UpdateAttrUI();                                                                                               // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinEnemy.K2_ToggleEnemyState
	// void K2_ToggleEnemyState(EEnemyState& EnemyState);                                                                    // [0x15dd8c0] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinEnemy.K2_SetRandomParolNode
	// void K2_SetRandomParolNode(FRandomPatrolNode RndPatrolNode);                                                          // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinEnemy.K2_SetPatrolNode
	// void K2_SetPatrolNode(class APatrolNode* PatrolNode);                                                                 // [0x15dd8c0] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinEnemy.K2_OutHover
	// void K2_OutHover();                                                                                                   // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinEnemy.K2_OnStartAI
	// void K2_OnStartAI(class AAIController* AIController);                                                                 // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinEnemy.K2_OnHeroAblityActive
	// void K2_OnHeroAblityActive(class APaladinCharacterBase* Character, class UPaladinComboAbility* Ability);              // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinEnemy.K2_OnDie
	// void K2_OnDie(class AActor* OtherActor);                                                                              // [0x15dd8c0] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinEnemy.K2_MonsterPreInit
	// void K2_MonsterPreInit(EPaladinGameDifficulty GameDifficulty);                                                        // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinEnemy.IsLookAtTarget
	// bool IsLookAtTarget();                                                                                                // [0xe75700] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemy.InitEnemyAttribute
	// void InitEnemyAttribute(EPaladinGameDifficulty GameDifficulty);                                                       // [0xe75680] Native|Protected|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemy.GetSpeedMode
	// EMonsterSpeedMode GetSpeedMode();                                                                                     // [0xe75630] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemy.GetRandomSuggestSkill
	// void GetRandomSuggestSkill(class UClass*& SuggestSkill);                                                              // [0xe326f0] Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinEnemy.GetDeathExp
	// float GetDeathExp();                                                                                                  // [0xe755e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemy.FindEffectMontage
	// class UAnimMontage* FindEffectMontage(EPaladinSkillEffectMontage Action);                                             // [0xe75350] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemy.EndMoveToActorMode
	// void EndMoveToActorMode();                                                                                            // [0xe75330] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemy.BindHeroAbilityActive
	// void BindHeroAbilityActive();                                                                                         // [0xe752f0] Final|Native|Public  
};
#pragma pack(pop)

/// Struct /Script/Pal7.PaladinLevelSequence
/// Size: 0x0008 (0x000000 - 0x000008)
struct FPaladinLevelSequence
{ 
	class UPaladinSequenceInfo*                        SequenceInfo;                                               // 0x0000   (0x0008)  
};

/// Struct /Script/Pal7.BattleDialog
/// Size: 0x0010 (0x000000 - 0x000010)
struct FBattleDialog
{ 
	FPaladinLevelSequence                              DialogAssets;                                               // 0x0000   (0x0008)  
	EDialogTriggerType                                 TriggerType;                                                // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	float                                              HPPercent;                                                  // 0x000C   (0x0004)  
};

/// Class /Script/Pal7.PaladinBossMonsterBase
/// Size: 0x0230 (0x001110 - 0x001340)
#pragma pack(push, 0x1)
class alignas(0x10) APaladinBossMonsterBase : public APaladinEnemy
{ 
public:
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x1108   (0x0008)  MISSED
	int32_t                                            BossStage;                                                  // 0x1110   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x1114   (0x0004)  MISSED
	SDK_UNDEFINED(16,1456) /* FMulticastInlineDelegate */ __um(TurnToTargetFinish);                                // 0x1118   (0x0010)  
	SDK_UNDEFINED(16,1457) /* FMulticastInlineDelegate */ __um(EndFightingDelegate);                               // 0x1128   (0x0010)  
	unsigned char                                      UnknownData02_5[0x28];                                      // 0x1138   (0x0028)  MISSED
	class USoundAtomCue*                               SoundAtomCue;                                               // 0x1160   (0x0008)  
	class APaladinAtomSound*                           AgentSound;                                                 // 0x1168   (0x0008)  
	float                                              AgentSoundVolume;                                           // 0x1170   (0x0004)  
	int32_t                                            EndBlock;                                                   // 0x1174   (0x0004)  
	bool                                               bBossAutoToggleAttackTarget;                                // 0x1178   (0x0001)  
	EBossBattleName                                    BossBattleName;                                             // 0x1179   (0x0001)  
	unsigned char                                      UnknownData03_5[0x6];                                       // 0x117A   (0x0006)  MISSED
	SDK_UNDEFINED(80,1458) /* TMap<int32_t, int32_t> */ __um(StageAndSoundBlock);                                  // 0x1180   (0x0050)  
	float                                              MeleeHeroMaxLockDisfactor;                                  // 0x11D0   (0x0004)  
	bool                                               bStaticHpBarInScreen;                                       // 0x11D4   (0x0001)  
	bool                                               EffectCameraArmLength;                                      // 0x11D5   (0x0001)  
	unsigned char                                      UnknownData04_5[0x2];                                       // 0x11D6   (0x0002)  MISSED
	float                                              CameraLenghtAddOffset;                                      // 0x11D8   (0x0004)  
	float                                              StartModifyDistance;                                        // 0x11DC   (0x0004)  
	float                                              MaxModifyDIstance;                                          // 0x11E0   (0x0004)  
	bool                                               bEnabledSwitchingLeader;                                    // 0x11E4   (0x0001)  
	unsigned char                                      UnknownData05_5[0x3];                                       // 0x11E5   (0x0003)  MISSED
	float                                              ProbabilityToDodge;                                         // 0x11E8   (0x0004)  
	bool                                               bAutoPlayBossBattleBGM;                                     // 0x11EC   (0x0001)  
	unsigned char                                      UnknownData06_5[0x3];                                       // 0x11ED   (0x0003)  MISSED
	float                                              LeadPartnerColdDownInterval;                                // 0x11F0   (0x0004)  
	bool                                               bResetHeroToggleWhenEndFightig;                             // 0x11F4   (0x0001)  
	unsigned char                                      UnknownData07_5[0x3];                                       // 0x11F5   (0x0003)  MISSED
	TArray<FGameplayTag>                               DefaultGamePlayTagAddtoBoss;                                // 0x11F8   (0x0010)  
	bool                                               bBossChallengeFinalBoss;                                    // 0x1208   (0x0001)  
	unsigned char                                      UnknownData08_5[0x3];                                       // 0x1209   (0x0003)  MISSED
	int32_t                                            StageMax;                                                   // 0x120C   (0x0004)  
	TArray<FBattleDialog>                              BattleDialogs;                                              // 0x1210   (0x0010)  
	bool                                               bReleaseWhenEndFighint;                                     // 0x1220   (0x0001)  
	unsigned char                                      UnknownData09_5[0x7];                                       // 0x1221   (0x0007)  MISSED
	class UGiveItemComponent*                          GiveItemComponent;                                          // 0x1228   (0x0008)  
	SDK_UNDEFINED(16,1459) /* TArray<TWeakObjectPtr<UObject*>> */ __um(PreloadAssets);                             // 0x1230   (0x0010)  
	SDK_UNDEFINED(16,1460) /* TArray<TWeakObjectPtr<ULevelSequence*>> */ __um(PreloadSequencesAssets);             // 0x1240   (0x0010)  
	float                                              BeginFightDelay;                                            // 0x1250   (0x0004)  
	bool                                               bDestroyBodyWhenSQStart;                                    // 0x1254   (0x0001)  
	unsigned char                                      UnknownData10_6[0xE3];                                      // 0x1255   (0x00E3)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinBossMonsterBase.ToggleFightingState
	// void ToggleFightingState(bool InFighting);                                                                            // [0xe625c0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/Pal7.PaladinBossMonsterBase.ToggleCanBeAttackTarget
	// void ToggleCanBeAttackTarget(bool bCanBeAttack);                                                                      // [0xe62540] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBossMonsterBase.SetNewStage
	// void SetNewStage(int32_t NewStage);                                                                                   // [0xe62400] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBossMonsterBase.SetCanToggleAttackTarget
	// void SetCanToggleAttackTarget(bool bCanToggleTarget);                                                                 // [0xe622b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBossMonsterBase.SetAttackTarget
	// void SetAttackTarget(class APaladinHero* NewTarget);                                                                  // [0xe4bc50] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBossMonsterBase.ReceivePlaymodeChanged
	// void ReceivePlaymodeChanged(FName NewPM);                                                                             // [0xe621a0] Final|Native|Private 
	// Function /Script/Pal7.PaladinBossMonsterBase.PrintDebugeBossAIData
	// void PrintDebugeBossAIData();                                                                                         // [0xe62180] Final|Native|Protected|BlueprintCallable 
	// Function /Script/Pal7.PaladinBossMonsterBase.K2_SetAttackTarget
	// void K2_SetAttackTarget(class APaladinHero* NewTarget);                                                               // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinBossMonsterBase.K2_OnStageChange
	// void K2_OnStageChange(int32_t NewStage);                                                                              // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinBossMonsterBase.GetNewAttackTarget
	// class APaladinHero* GetNewAttackTarget();                                                                             // [0xe61f40] Native|Protected|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBossMonsterBase.GetAngleToTarget
	// bool GetAngleToTarget(float& Angle);                                                                                  // [0xe61a10] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBossMonsterBase.ForceLockToggleAttackTarget
	// void ForceLockToggleAttackTarget(bool bLock);                                                                         // [0xe61980] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBossMonsterBase.ForceEndFighting
	// void ForceEndFighting();                                                                                              // [0xe61960] Final|Native|Public|BlueprintCallable 
};
#pragma pack(pop)

/// Class /Script/Pal7.Boss_DuZhangQiOu
/// Size: 0x0000 (0x001340 - 0x001340)
class ABoss_DuZhangQiOu : public APaladinBossMonsterBase
{ 
public:


	/// Functions
	// Function /Script/Pal7.Boss_DuZhangQiOu.SetAttackTargetWithoutRegist
	// void SetAttackTargetWithoutRegist(class APaladinHero* NewTarget);                                                     // [0xe33090] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/Pal7.Boss_HuoXianShou
/// Size: 0x0030 (0x001340 - 0x001370)
class ABoss_HuoXianShou : public APaladinBossMonsterBase
{ 
public:
	class UPaladinPawnSensingComponent*                PawnSensing;                                                // 0x1338   (0x0008)  
	EHuoXianShouWeaponType                             CurrWeaponType;                                             // 0x1340   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x1341   (0x0003)  MISSED
	FName                                              RWeaponSocket;                                              // 0x1344   (0x0008)  
	FName                                              LWeaponSocket;                                              // 0x134C   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x1354   (0x0004)  MISSED
	class AActor*                                      RHandCurrWeapon;                                            // 0x1358   (0x0008)  
	class AActor*                                      LHandCurrWeapon;                                            // 0x1360   (0x0008)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x1368   (0x0008)  MISSED
};

/// Class /Script/Pal7.BossAoqingBenti
/// Size: 0x0040 (0x001340 - 0x001380)
class ABossAoqingBenti : public APaladinBossMonsterBase
{ 
public:
	int32_t                                            nMaxRecordSize;                                             // 0x1338   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x133C   (0x0004)  MISSED
	SDK_UNDEFINED(16,1461) /* TArray<FText> */         __um(PerformedSkillRecord);                                 // 0x1340   (0x0010)  
	SDK_UNDEFINED(16,1462) /* TArray<FText> */         __um(FilterRecordSkill);                                    // 0x1350   (0x0010)  
	bool                                               bOpenDamageRecord;                                          // 0x1360   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x1361   (0x0003)  MISSED
	float                                              RecordDamage;                                               // 0x1364   (0x0004)  
	TArray<class ATriggerBox*>                         PitFallVolums;                                              // 0x1368   (0x0010)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x1378   (0x0008)  MISSED


	/// Functions
	// Function /Script/Pal7.BossAoqingBenti.SortPitfallPointsByPlayerPose
	// void SortPitfallPointsByPlayerPose(TArray<FVector>& PointsIn, TArray<FVector>& PointsOut);                            // [0xe331a0] Final|Native|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.BossAoqingBenti.RandomSortCrossDataArray
	// void RandomSortCrossDataArray(TArray<FCrossSkillData>& VecArray, TArray<FCrossSkillData>& VecArrayRef);               // [0xe32e60] Final|Native|Static|Protected|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.BossAoqingBenti.GetSuggestSkill
	// void GetSuggestSkill(class UClass*& SuggestSkill);                                                                    // [0xe326f0] Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.BossAoqingBenti.GetPitfallAllSpawnablePoints
	// void GetPitfallAllSpawnablePoints(TArray<FVector>& Points, FPitfallArea& PitfallArea);                                // [0xe325f0] Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.BossAoqingBenti.GetLastPerfromedSkill
	// void GetLastPerfromedSkill(FText& LastPerfromedSkill);                                                                // [0xe32520] Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.BossAoqingBenti.GetFlickerPoint
	// bool GetFlickerPoint(FVector& FlickerPoint, class APaladinHero* FlickerTo, float& RadiusOut, float& RadiusIn);        // [0xe32200] Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.BossAoqingBenti.GetContinusePerfromedSkillsTimes
	// int32_t GetContinusePerfromedSkillsTimes();                                                                           // [0xe32050] Native|Protected|BlueprintCallable|BlueprintPure 
};

/// Class /Script/Pal7.BossChongLou
/// Size: 0x0040 (0x001340 - 0x001380)
class ABossChongLou : public APaladinBossMonsterBase
{ 
public:
	int32_t                                            nMaxRecordSize;                                             // 0x1338   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x133C   (0x0004)  MISSED
	SDK_UNDEFINED(16,1463) /* TArray<FText> */         __um(PerformedSkillRecord);                                 // 0x1340   (0x0010)  
	SDK_UNDEFINED(16,1464) /* TArray<FText> */         __um(FilterRecordSkill);                                    // 0x1350   (0x0010)  
	float                                              BeatenTime_BombTrigger;                                     // 0x1360   (0x0004)  
	float                                              BeatenTime_ReduceValue;                                     // 0x1364   (0x0004)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x1368   (0x0018)  MISSED


	/// Functions
	// Function /Script/Pal7.BossChongLou.GetLastPerfromedSkill
	// void GetLastPerfromedSkill(FText& LastPerfromedSkill);                                                                // [0xe32520] Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.BossChongLou.GetFlickerPoint
	// bool GetFlickerPoint(FVector& FlickerPoint, class APaladinHero* FlickerTo, float& RadiusOut, float& RadiusIn);        // [0xe32200] Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.BossChongLou.GetContinusePerfromedSkillsTimes
	// int32_t GetContinusePerfromedSkillsTimes(TArray<FText>& QuarySkills);                                                 // [0xe32080] Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.BossChongLou.ClearCurrentBeaternRecord
	// void ClearCurrentBeaternRecord();                                                                                     // [0xe31e40] Final|Native|Protected|BlueprintCallable 
	// Function /Script/Pal7.BossChongLou.CanTriggerBomb
	// bool CanTriggerBomb();                                                                                                // [0xe31e10] Final|Native|Protected|BlueprintCallable|BlueprintPure 
};

/// Class /Script/Pal7.BossJiuYing
/// Size: 0x0020 (0x001340 - 0x001360)
class ABossJiuYing : public APaladinBossMonsterBase
{ 
public:
	int32_t                                            nMaxRecordSize;                                             // 0x1338   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x133C   (0x0004)  MISSED
	SDK_UNDEFINED(16,1465) /* TArray<FText> */         __um(PerformedSkillRecord);                                 // 0x1340   (0x0010)  
	SDK_UNDEFINED(16,1466) /* TArray<FText> */         __um(FilterRecordSkill);                                    // 0x1350   (0x0010)  


	/// Functions
	// Function /Script/Pal7.BossJiuYing.K2_ShieldDecrease
	// void K2_ShieldDecrease(float& DamageAmount);                                                                          // [0x15dd8c0] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/Pal7.BossJiuYing.GetLastPerfromedSkill
	// void GetLastPerfromedSkill(FText& LastPerfromedSkill);                                                                // [0xe32520] Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.BossJiuYing.GetCurrentShieldValue
	// float GetCurrentShieldValue();                                                                                        // [0xe32190] Final|Native|Protected|BlueprintCallable|BlueprintPure 
};

/// Class /Script/Pal7.BossKuiYu
/// Size: 0x0020 (0x001340 - 0x001360)
class ABossKuiYu : public APaladinBossMonsterBase
{ 
public:
	int32_t                                            nMaxRecordSize;                                             // 0x1338   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x133C   (0x0004)  MISSED
	SDK_UNDEFINED(16,1467) /* TArray<FText> */         __um(PerformedSkillRecord);                                 // 0x1340   (0x0010)  
	SDK_UNDEFINED(16,1468) /* TArray<FText> */         __um(FilterRecordSkill);                                    // 0x1350   (0x0010)  


	/// Functions
	// Function /Script/Pal7.BossKuiYu.K2_OnSkillPerfromStart
	// void K2_OnSkillPerfromStart();                                                                                        // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.BossKuiYu.K2_OnSkillPerfromEnd
	// void K2_OnSkillPerfromEnd();                                                                                          // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.BossKuiYu.GetLastPerfromedSkill
	// void GetLastPerfromedSkill(FText& LastPerfromedSkill);                                                                // [0xe32520] Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.BossKuiYu.GetFlickerPoint
	// bool GetFlickerPoint(FVector& FlickerPoint, class APaladinHero* FlickerTo, float& RadiusOut, float& RadiusIn);        // [0xe32390] Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.BossKuiYu.GetContinusePerfromedSkillsTimes
	// int32_t GetContinusePerfromedSkillsTimes(TArray<FText>& QuarySkills);                                                 // [0xe32080] Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure 
};

/// Class /Script/Pal7.BossMonsterInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UBossMonsterInterface : public UInterface
{ 
public:


	/// Functions
	// Function /Script/Pal7.BossMonsterInterface.BeginBossBattle
	// void BeginBossBattle();                                                                                               // [0x15dd8c0] Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/Pal7.BossXiQuBase
/// Size: 0x0130 (0x001340 - 0x001470)
class ABossXiQuBase : public APaladinBossMonsterBase
{ 
public:
	bool                                               IsTurning;                                                  // 0x1338   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x1339   (0x0003)  MISSED
	FName                                              Stage1RashSkill;                                            // 0x133C   (0x0008)  
	FName                                              Stage2RashSkill;                                            // 0x1344   (0x0008)  
	FName                                              TailAttackSkill;                                            // 0x134C   (0x0008)  
	FName                                              StompAttackSkill;                                           // 0x1354   (0x0008)  
	float                                              TailAttackAbleAngleThreadhold;                              // 0x135C   (0x0004)  
	float                                              MeleeAttackRange;                                           // 0x1360   (0x0004)  
	float                                              RushAttackRange;                                            // 0x1364   (0x0004)  
	float                                              RushValidAngle;                                             // 0x1368   (0x0004)  
	float                                              RushAimRotateSpeed;                                         // 0x136C   (0x0004)  
	SDK_UNDEFINED(80,1469) /* TMap<FName, FStageProperty> */ __um(MeleeSkillStageProperty);                        // 0x1370   (0x0050)  
	SDK_UNDEFINED(80,1470) /* TMap<ETurnAroundMontageType, UAnimMontage*> */ __um(TurnAroundMontages);             // 0x13C0   (0x0050)  
	class UAnimMontage*                                DashTurnLeftMontage;                                        // 0x1410   (0x0008)  
	class UAnimMontage*                                DashTurnRightMontage;                                       // 0x1418   (0x0008)  
	float                                              Stage2HPExistPercentThreshold;                              // 0x1420   (0x0004)  
	float                                              MusthInterval;                                              // 0x1424   (0x0004)  
	float                                              MusthEffectTime;                                            // 0x1428   (0x0004)  
	bool                                               bMusth;                                                     // 0x142C   (0x0001)  
	bool                                               bInRushSkill;                                               // 0x142D   (0x0001)  
	bool                                               bEnableEndFighting;                                         // 0x142E   (0x0001)  
	bool                                               bEnableQuiteMust;                                           // 0x142F   (0x0001)  
	unsigned char                                      UnknownData01_6[0x40];                                      // 0x1430   (0x0040)  MISSED


	/// Functions
	// Function /Script/Pal7.BossXiQuBase.TurnToTargetPoint
	// bool TurnToTargetPoint(FVector TargetPoint);                                                                          // [0xe33380] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.BossXiQuBase.TurnToAttackTarget
	// bool TurnToAttackTarget();                                                                                            // [0xe33350] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.BossXiQuBase.ToggleRushAim
	// void ToggleRushAim(bool Open);                                                                                        // [0xe332c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.BossXiQuBase.ShowHideUIWhenQTEPerfrom
	// void ShowHideUIWhenQTEPerfrom(bool bHide);                                                                            // [0xe33110] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.BossXiQuBase.QuiteMusthState
	// void QuiteMusthState();                                                                                               // [0xe32e40] Final|Native|Protected|BlueprintCallable 
	// Function /Script/Pal7.BossXiQuBase.PerformSkillByName
	// bool PerformSkillByName(FName& SkillName);                                                                            // [0xe32da0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.BossXiQuBase.PerformRushSkill
	// bool PerformRushSkill();                                                                                              // [0xe32d70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.BossXiQuBase.K2_UpdateRushAim
	// void K2_UpdateRushAim();                                                                                              // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.BossXiQuBase.K2_QuiteMusthState
	// void K2_QuiteMusthState();                                                                                            // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.BossXiQuBase.K2_OnStartRushAim
	// void K2_OnStartRushAim();                                                                                             // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.BossXiQuBase.K2_OnEndRushAim
	// void K2_OnEndRushAim();                                                                                               // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.BossXiQuBase.K2_InMusthState
	// void K2_InMusthState();                                                                                               // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.BossXiQuBase.IsInTailAttackRange
	// bool IsInTailAttackRange();                                                                                           // [0xe32800] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.BossXiQuBase.IsInRushRange
	// bool IsInRushRange();                                                                                                 // [0xe327d0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.BossXiQuBase.IsInRushAngle
	// bool IsInRushAngle();                                                                                                 // [0xe327a0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.BossXiQuBase.InMusthState
	// void InMusthState();                                                                                                  // [0xe32780] Final|Native|Protected|BlueprintCallable 
	// Function /Script/Pal7.BossXiQuBase.GetCurrentValidMeleeSkill
	// FName GetCurrentValidMeleeSkill();                                                                                    // [0xe321c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.BossXiQuBase.ClearMeleeRecord
	// void ClearMeleeRecord();                                                                                              // [0xe31e60] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/Pal7.BossXiuWuBase
/// Size: 0x0000 (0x001340 - 0x001340)
class ABossXiuWuBase : public APaladinBossMonsterBase
{ 
public:


	/// Functions
	// Function /Script/Pal7.BossXiuWuBase.TryPerfomSkills
	// bool TryPerfomSkills();                                                                                               // [0xe38910] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.CameraModifier_PostProcess
/// Size: 0x0018 (0x000048 - 0x000060)
class UCameraModifier_PostProcess : public UCameraModifier
{ 
public:
	TArray<class UPaladinPostProcess*>                 ActivePPBlends;                                             // 0x0048   (0x0010)  
	float                                              SplitScreenShakeScale;                                      // 0x0058   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x005C   (0x0004)  MISSED
};

/// Class /Script/Pal7.CameraModifierFocusLockActor
/// Size: 0x0068 (0x0000B0 - 0x000118)
class UCameraModifierFocusLockActor : public UBaseCameraModifier
{ 
public:
	float                                              SwingCameraSpeed;                                           // 0x00B0   (0x0004)  
	float                                              LockTargetRadioInScreen;                                    // 0x00B4   (0x0004)  
	bool                                               bEnableKeepInScreen;                                        // 0x00B8   (0x0001)  
	bool                                               bEnableLockingOn;                                           // 0x00B9   (0x0001)  
	bool                                               bEnableKeepFarFromCharacter;                                // 0x00BA   (0x0001)  
	bool                                               bConstraintDistance;                                        // 0x00BB   (0x0001)  
	float                                              OriginConstraintDistanceFromCharacter;                      // 0x00BC   (0x0004)  
	float                                              RotateSpeed;                                                // 0x00C0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x54];                                      // 0x00C4   (0x0054)  MISSED


	/// Functions
	// Function /Script/Pal7.CameraModifierFocusLockActor.DrawDebugRect
	// void DrawDebugRect();                                                                                                 // [0xbf6f60] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.CanvasPanelWithNavigation
/// Size: 0x0020 (0x000150 - 0x000170)
class UCanvasPanelWithNavigation : public UCanvasPanel
{ 
public:
	unsigned char                                      UnknownData00_3[0x18];                                      // 0x0150   (0x0018)  MISSED
	EPaladinUIKeyControlType                           ControlType;                                                // 0x0168   (0x0001)  
	SDK_UNDEFINED(1,1471) /* TEnumAsByte<EOrientation> */ __um(Orientation);                                       // 0x0169   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x016A   (0x0006)  MISSED


	/// Functions
	// Function /Script/Pal7.CanvasPanelWithNavigation.SetOrientation
	// void SetOrientation(TEnumAsByte<EOrientation> NewOrientation);                                                        // [0xe38890] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.CanvasPanelWithNavigation.SetControlType
	// void SetControlType(EPaladinUIKeyControlType NewControlType);                                                         // [0xe38810] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.CDModifierCalculation
/// Size: 0x0000 (0x000040 - 0x000040)
class UCDModifierCalculation : public UGameplayModMagnitudeCalculation
{ 
public:
};

/// Class /Script/Pal7.DebuffApplicationChance
/// Size: 0x0000 (0x000028 - 0x000028)
class UDebuffApplicationChance : public UGameplayEffectCustomApplicationRequirement
{ 
public:
};

/// Class /Script/Pal7.QuestProgressCondition
/// Size: 0x0018 (0x000138 - 0x000150)
class UQuestProgressCondition : public UDialogConditionBase
{ 
public:
	EQuestProgressType                                 QuestType;                                                  // 0x0138   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0139   (0x0003)  MISSED
	int32_t                                            MinStep;                                                    // 0x013C   (0x0004)  
	int32_t                                            MaxStep;                                                    // 0x0140   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0144   (0x0004)  MISSED
	class UPaladinQuestAsset*                          QuestAsset;                                                 // 0x0148   (0x0008)  
};

/// Struct /Script/Pal7.SaveGameItemHandle_GlobalTag
/// Size: 0x0008 (0x000000 - 0x000008)
struct FSaveGameItemHandle_GlobalTag
{ 
	FGameplayTag                                       OwnerNodeTag;                                               // 0x0000   (0x0008)  
};

/// Class /Script/Pal7.DialogueGameTagCondition
/// Size: 0x0008 (0x000138 - 0x000140)
class UDialogueGameTagCondition : public UDialogConditionBase
{ 
public:
	FSaveGameItemHandle_GlobalTag                      BindingTag;                                                 // 0x0138   (0x0008)  
};

/// Class /Script/Pal7.DialogueItemCountCondition
/// Size: 0x0050 (0x000138 - 0x000188)
class UDialogueItemCountCondition : public UDialogConditionBase
{ 
public:
	SDK_UNDEFINED(80,1472) /* TMap<int32_t, int32_t> */ __um(needItemCountMap);                                    // 0x0138   (0x0050)  
};

/// Class /Script/Pal7.DialogQuestCondition_Bp
/// Size: 0x0000 (0x000138 - 0x000138)
class UDialogQuestCondition_Bp : public UDialogConditionBase
{ 
public:
};

/// Struct /Script/Pal7.DialogueConditions
/// Size: 0x0010 (0x000000 - 0x000010)
struct FDialogueConditions
{ 
	TArray<class UPaladinCondition*>                   DialogueNodeConditions;                                     // 0x0000   (0x0010)  
};

/// Struct /Script/Pal7.DialogueAnimation
/// Size: 0x0028 (0x000000 - 0x000028)
struct FDialogueAnimation
{ 
	class UAnimSequenceBase*                           Animation;                                                  // 0x0000   (0x0008)  
	FName                                              PlayerID;                                                   // 0x0008   (0x0008)  
	FName                                              SlotName;                                                   // 0x0010   (0x0008)  
	bool                                               Loop;                                                       // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0019   (0x0003)  MISSED
	float                                              BlendInTime;                                                // 0x001C   (0x0004)  
	float                                              BlendOutTime;                                               // 0x0020   (0x0004)  
	float                                              PlayRate;                                                   // 0x0024   (0x0004)  
};

/// Struct /Script/Pal7.DialogueNode
/// Size: 0x00F0 (0x000000 - 0x0000F0)
struct FDialogueNode
{ 
	int32_t                                            ID;                                                         // 0x0000   (0x0004)  
	EDialogueNodeType                                  nodeType;                                                   // 0x0004   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0005   (0x0003)  MISSED
	SDK_UNDEFINED(24,1473) /* FText */                 __um(Text);                                                 // 0x0008   (0x0018)  
	TArray<int32_t>                                    Links;                                                      // 0x0020   (0x0010)  
	FVector2D                                          Coordinates;                                                // 0x0030   (0x0008)  
	bool                                               bHasEvents;                                                 // 0x0038   (0x0001)  
	bool                                               bHasConditions;                                             // 0x0039   (0x0001)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x003A   (0x0006)  MISSED
	TArray<class UDialogueEvent*>                      Events;                                                     // 0x0040   (0x0010)  
	FDialogueConditions                                Conditions;                                                 // 0x0050   (0x0010)  
	class USoundAtomCue*                               DialogueSound;                                              // 0x0060   (0x0008)  
	class UDialogueWave*                               DialogueWave;                                               // 0x0068   (0x0008)  
	float                                              extraSeconds;                                               // 0x0070   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0074   (0x0004)  MISSED
	class UPaladinSequenceInfo*                        Sequence;                                                   // 0x0078   (0x0008)  
	FName                                              PlayerID;                                                   // 0x0080   (0x0008)  
	class UClass*                                      Camera;                                                     // 0x0088   (0x0008)  
	class UCameraAnim*                                 CameraAnim;                                                 // 0x0090   (0x0008)  
	TArray<FDialogueAnimation>                         AnimationArr;                                               // 0x0098   (0x0010)  
	SDK_UNDEFINED(24,1474) /* FText */                 __um(SpeakerName);                                          // 0x00A8   (0x0018)  
	bool                                               AllSubNodeDirectShow;                                       // 0x00C0   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x00C1   (0x0003)  MISSED
	int32_t                                            Weight;                                                     // 0x00C4   (0x0004)  
	SDK_UNDEFINED(16,1475) /* FString */               __um(NodeComment);                                          // 0x00C8   (0x0010)  
	TArray<class UPaladinAction*>                      Actions;                                                    // 0x00D8   (0x0010)  
	FGameplayTag                                       ActiveTag;                                                  // 0x00E8   (0x0008)  
};

/// Class /Script/Pal7.Dialogue
/// Size: 0x0070 (0x000030 - 0x0000A0)
class UDialogue : public UDataAsset
{ 
public:
	bool                                               DisplayIdleSplines;                                         // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	SDK_UNDEFINED(24,1476) /* FText */                 __um(Name);                                                 // 0x0038   (0x0018)  
	TArray<FDialogueNode>                              Data;                                                       // 0x0050   (0x0010)  
	int32_t                                            NextNodeId;                                                 // 0x0060   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0064   (0x0004)  MISSED
	class UClass*                                      DefaultPlayerCamera;                                        // 0x0068   (0x0008)  
	class UClass*                                      PlayerTransformsTemplate;                                   // 0x0070   (0x0008)  
	TArray<FName>                                      PlayersList;                                                // 0x0078   (0x0010)  
	unsigned char                                      UnknownData02_6[0x18];                                      // 0x0088   (0x0018)  MISSED


	/// Functions
	// Function /Script/Pal7.Dialogue.CollectQuestConditions
	// void CollectQuestConditions();                                                                                        // [0xbf6f60] Final|Native|Public  
	// Function /Script/Pal7.Dialogue.CallFunctionByName
	// void CallFunctionByName(class UObject* Object, FString FunctionName);                                                 // [0xe384f0] Final|Native|Static|Public 
};

/// Class /Script/Pal7.DialogueEvent
/// Size: 0x0010 (0x000028 - 0x000038)
class UDialogueEvent : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0000   (0x0038)  MISSED
};

/// Class /Script/Pal7.DialogueEvent_BP
/// Size: 0x0000 (0x000038 - 0x000038)
class UDialogueEvent_BP : public UDialogueEvent
{ 
public:


	/// Functions
	// Function /Script/Pal7.DialogueEvent_BP.K2_ActivateEvent
	// void K2_ActivateEvent();                                                                                              // [0x15dd8c0] Event|Public|BlueprintEvent 
};

/// Class /Script/Pal7.PushQuestEvent
/// Size: 0x0008 (0x000038 - 0x000040)
class UPushQuestEvent : public UDialogueEvent
{ 
public:
	FName                                              QuestID;                                                    // 0x0038   (0x0008)  
};

/// Class /Script/Pal7.TriggerGameTagEvent
/// Size: 0x0008 (0x000038 - 0x000040)
class UTriggerGameTagEvent : public UDialogueEvent
{ 
public:
	FGameplayTag                                       BindingTag;                                                 // 0x0038   (0x0008)  
};

/// Class /Script/Pal7.ModifyItemCountEvent
/// Size: 0x0058 (0x000038 - 0x000090)
class UModifyItemCountEvent : public UDialogueEvent
{ 
public:
	SDK_UNDEFINED(80,1477) /* TMap<int32_t, int32_t> */ __um(ItemCountMap);                                        // 0x0038   (0x0050)  
	int32_t                                            Money;                                                      // 0x0088   (0x0004)  
	int32_t                                            Exp;                                                        // 0x008C   (0x0004)  
};

/// Class /Script/Pal7.CustomEvent
/// Size: 0x0010 (0x000038 - 0x000048)
class UCustomEvent : public UDialogueEvent
{ 
public:
	FName                                              ReceiveActorID;                                             // 0x0038   (0x0008)  
	FName                                              FunctionName;                                               // 0x0040   (0x0008)  
};

/// Class /Script/Pal7.DialogueWidget
/// Size: 0x0000 (0x000230 - 0x000230)
class UDialogueWidget : public UUserWidget
{ 
public:


	/// Functions
	// Function /Script/Pal7.DialogueWidget.SetTitleInfo
	// void SetTitleInfo(FText& TitleInfo);                                                                                  // [0x15dd8c0] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.DialogueWidget.SetSpeakerAndInfo
	// void SetSpeakerAndInfo(FText& SpeakerName, FText& speakInfo);                                                         // [0x15dd8c0] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.DialogueWidget.Clear
	// void Clear();                                                                                                         // [0x15dd8c0] Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/Pal7.PaladinDLCManager
/// Size: 0x0080 (0x0000B0 - 0x000130)
class UPaladinDLCManager : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x80];                                      // 0x00B0   (0x0080)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinDLCManager.MarkDLCUnlockDisplayed
	// void MarkDLCUnlockDisplayed(FName DLCRow);                                                                            // [0xe38790] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinDLCManager.IsDLCDateUpdated
	// bool IsDLCDateUpdated();                                                                                              // [0xe38770] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinDLCManager.GetUnlockedDLC
	// TArray<FName> GetUnlockedDLC();                                                                                       // [0xe386b0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinDLCManager.GetPaladinDLCManager
	// class UPaladinDLCManager* GetPaladinDLCManager();                                                                     // [0xe38680] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinDLCManager.GetNeedDisplayUnlockedDLC
	// TArray<FName> GetNeedDisplayUnlockedDLC();                                                                            // [0xe38600] Final|Native|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/Pal7.DynamicSpawnActorComponent
/// Size: 0x0000 (0x000220 - 0x000220)
class UDynamicSpawnActorComponent : public UChildActorComponent
{ 
public:
};

/// Class /Script/Pal7.PaladinUIBase
/// Size: 0x0040 (0x000230 - 0x000270)
class UPaladinUIBase : public UUserWidget
{ 
public:
	EPaladinUIMouseCursor                              ForceMouseCursor;                                           // 0x0230   (0x0001)  
	bool                                               bHaveOpenUISound;                                           // 0x0231   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0232   (0x0006)  MISSED
	class USoundAtomCue*                               CustomOpenUISound;                                          // 0x0238   (0x0008)  
	bool                                               bHaveCloseUISound;                                          // 0x0240   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0241   (0x0007)  MISSED
	class USoundAtomCue*                               CustomCloseUISound;                                         // 0x0248   (0x0008)  
	SDK_UNDEFINED(16,1478) /* FString */               __um(UIOptions);                                            // 0x0250   (0x0010)  
	unsigned char                                      UnknownData02_6[0x10];                                      // 0x0260   (0x0010)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinUIBase.SetUIOptions
	// void SetUIOptions(FString InOptions);                                                                                 // [0xee4e20] Final|Native|Protected 
	// Function /Script/Pal7.PaladinUIBase.PaladinConstruct
	// void PaladinConstruct();                                                                                              // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinUIBase.OpenUIAnim
	// class UWidgetAnimation* OpenUIAnim(class UUserWidget*& AnimWidget);                                                   // [0x15dd8c0] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/Pal7.PaladinUIBase.OnPaladinUIEvent
	// bool OnPaladinUIEvent(EPaladinUIKeyControlType UIKeyControlType, EUINavigation UINavigation);                         // [0x15dd8c0] BlueprintCosmetic|Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinUIBase.OnOpenUIAnimEndCall
	// void OnOpenUIAnimEndCall();                                                                                           // [0xee4880] Final|Native|Protected 
	// Function /Script/Pal7.PaladinUIBase.OnCloseUIAnimEndCall
	// void OnCloseUIAnimEndCall();                                                                                          // [0xee4860] Final|Native|Protected 
	// Function /Script/Pal7.PaladinUIBase.K2_PaladinUIKeyDown
	// bool K2_PaladinUIKeyDown(FKey Key);                                                                                   // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinUIBase.K2_OnClosed
	// void K2_OnClosed();                                                                                                   // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinUIBase.GetUIOptions
	// FString GetUIOptions();                                                                                               // [0xee45d0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinUIBase.GetForceMouseCursor
	// EPaladinUIMouseCursor GetForceMouseCursor();                                                                          // [0xeb8700] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinUIBase.CloseUIAnim
	// class UWidgetAnimation* CloseUIAnim(class UUserWidget*& AnimWidget);                                                  // [0x15dd8c0] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/Pal7.PaladinUIBase.CloseUI
	// void CloseUI();                                                                                                       // [0xee44a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinUIBase.ClearUIOptions
	// void ClearUIOptions();                                                                                                // [0xee4480] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/Pal7.FocusLostUI
/// Size: 0x0000 (0x000270 - 0x000270)
class UFocusLostUI : public UPaladinUIBase
{ 
public:
};

/// Class /Script/Pal7.GhostMeshActor
/// Size: 0x0010 (0x000220 - 0x000230)
class AGhostMeshActor : public AActor
{ 
public:
	class USkeletalMeshComponent*                      SpawnFromSkeletalMeshComp;                                  // 0x0220   (0x0008)  
	class UPoseableMeshComponent*                      GhostMeshComponent;                                         // 0x0228   (0x0008)  


	/// Functions
	// Function /Script/Pal7.GhostMeshActor.PostInitGhostMeshComp
	// void PostInitGhostMeshComp();                                                                                         // [0x15dd8c0] Event|Public|BlueprintEvent 
};

/// Struct /Script/Pal7.WeightItemUnit
/// Size: 0x0014 (0x000000 - 0x000014)
struct FWeightItemUnit
{ 
	int32_t                                            ItemId;                                                     // 0x0000   (0x0004)  
	int32_t                                            MinCount;                                                   // 0x0004   (0x0004)  
	int32_t                                            MaxCount;                                                   // 0x0008   (0x0004)  
	float                                              Weight;                                                     // 0x000C   (0x0004)  
	bool                                               AffectedByDropRate;                                         // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0011   (0x0003)  MISSED
};

/// Struct /Script/Pal7.WeightItemTable
/// Size: 0x0010 (0x000000 - 0x000010)
struct FWeightItemTable
{ 
	TArray<FWeightItemUnit>                            WeightItemTable;                                            // 0x0000   (0x0010)  
};

/// Struct /Script/Pal7.QuestItemUnit
/// Size: 0x0028 (0x000000 - 0x000028)
struct FQuestItemUnit
{ 
	int32_t                                            ItemId;                                                     // 0x0000   (0x0004)  
	int32_t                                            MinCount;                                                   // 0x0004   (0x0004)  
	int32_t                                            MaxCount;                                                   // 0x0008   (0x0004)  
	float                                              DropChance;                                                 // 0x000C   (0x0004)  
	FName                                              QuestInstanceID;                                            // 0x0010   (0x0008)  
	FName                                              MinPID;                                                     // 0x0018   (0x0008)  
	FName                                              MaxPID;                                                     // 0x0020   (0x0008)  
};

/// Class /Script/Pal7.GiveItemComponent
/// Size: 0x00A0 (0x0000B0 - 0x000150)
class UGiveItemComponent : public UActorComponent
{ 
public:
	TArray<FWeightItemTable>                           ItemDropTable;                                              // 0x00B0   (0x0010)  
	TArray<FQuestItemUnit>                             QuestDropTable;                                             // 0x00C0   (0x0010)  
	SDK_UNDEFINED(80,1479) /* TMap<int32_t, int32_t> */ __um(ResultItemTable);                                     // 0x00D0   (0x0050)  
	int32_t                                            MoneyMin;                                                   // 0x0120   (0x0004)  
	int32_t                                            MoneyMax;                                                   // 0x0124   (0x0004)  
	int32_t                                            ResultMoney;                                                // 0x0128   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x012C   (0x0004)  MISSED
	FGameplayTagContainer                              TriggerTags;                                                // 0x0130   (0x0020)  


	/// Functions
	// Function /Script/Pal7.GiveItemComponent.SetItemEffectByDropRate
	// void SetItemEffectByDropRate(bool bInEffectByDropRate);                                                               // [0xe3d350] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.GiveItemComponent.SendDataToAwardManager
	// void SendDataToAwardManager();                                                                                        // [0xe3d2a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.GiveItemComponent.GiveItemDirectly
	// void GiveItemDirectly();                                                                                              // [0xe3cee0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.GiveItemComponent.GeneraterandomResult
	// void GeneraterandomResult();                                                                                          // [0xe3ce10] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.GiveItemComponent.CheckQuestDropAvailability
	// bool CheckQuestDropAvailability(FQuestItemUnit& QuestDrop, class UPaladinQuestManagerComponent* QuestManager);        // [0xe3cbc0] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Pal7.GuideNodeBese
/// Size: 0x0028 (0x000220 - 0x000248)
class AGuideNodeBese : public AActor
{ 
public:
	EPaladinGuideType                                  GuideType;                                                  // 0x0220   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0221   (0x0007)  MISSED
	SDK_UNDEFINED(16,1480) /* FMulticastInlineDelegate */ __um(GuidNodeStartDelegate);                             // 0x0228   (0x0010)  
	SDK_UNDEFINED(16,1481) /* FMulticastInlineDelegate */ __um(GuidNodeEndDelegate);                               // 0x0238   (0x0010)  


	/// Functions
	// Function /Script/Pal7.GuideNodeBese.StartGuideNode
	// void StartGuideNode();                                                                                                // [0xe3d400] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.GuideNodeBese.K2_OnStartGuideNode
	// void K2_OnStartGuideNode();                                                                                           // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.GuideNodeBese.K2_OnMonsterDie
	// void K2_OnMonsterDie(class APaladinEnemy* Monster);                                                                   // [0x15dd8c0] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.GuideNodeBese.K2_OnEndGuideNode
	// void K2_OnEndGuideNode();                                                                                             // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.GuideNodeBese.K2_OnCancelNode
	// void K2_OnCancelNode();                                                                                               // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.GuideNodeBese.K2_AbilityEnded
	// void K2_AbilityEnded(class UPaladinComboAbility* Ability);                                                            // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.GuideNodeBese.K2_AbilityActive
	// void K2_AbilityActive(class UPaladinComboAbility* Ability);                                                           // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.GuideNodeBese.EndGuideNode
	// void EndGuideNode();                                                                                                  // [0xe3cd60] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.GuideNodeBese.CancelNode
	// void CancelNode();                                                                                                    // [0xe3cb70] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.HorizontalBoxWithNavigation
/// Size: 0x0020 (0x000150 - 0x000170)
class UHorizontalBoxWithNavigation : public UHorizontalBox
{ 
public:
	unsigned char                                      UnknownData00_3[0x18];                                      // 0x0150   (0x0018)  MISSED
	EPaladinUIKeyControlType                           ControlType;                                                // 0x0168   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0169   (0x0007)  MISSED


	/// Functions
	// Function /Script/Pal7.HorizontalBoxWithNavigation.SetControlType
	// void SetControlType(EPaladinUIKeyControlType NewControlType);                                                         // [0xe38810] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.HuanTongDamageCalculation
/// Size: 0x0000 (0x000040 - 0x000040)
class UHuanTongDamageCalculation : public UGameplayModMagnitudeCalculation
{ 
public:
};

/// Class /Script/Pal7.Attackable
/// Size: 0x0000 (0x000028 - 0x000028)
class UAttackable : public UInterface
{ 
public:
};

/// Struct /Script/Pal7.InteractionInfo
/// Size: 0x0060 (0x000000 - 0x000060)
struct FInteractionInfo
{ 
	float                                              FirstTraceRange;                                            // 0x0000   (0x0004)  
	float                                              SecondTraceRange;                                           // 0x0004   (0x0004)  
	float                                              TraceAngle;                                                 // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	SDK_UNDEFINED(24,1482) /* FText */                 __um(InteractText);                                         // 0x0010   (0x0018)  
	TArray<class AActor*>                              EventReceiveObject;                                         // 0x0028   (0x0010)  
	TArray<class UPaladinAction*>                      PostActionTasks;                                            // 0x0038   (0x0010)  
	class UPaperSprite*                                TipsIcon;                                                   // 0x0048   (0x0008)  
	class UPaperSprite*                                InteractIcon;                                               // 0x0050   (0x0008)  
	FName                                              InteractionPlayMode;                                        // 0x0058   (0x0008)  
};

/// Class /Script/Pal7.InteractionComponent
/// Size: 0x00D8 (0x0000B0 - 0x000188)
class UInteractionComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,1483) /* FMulticastInlineDelegate */ __um(OnBeginInteractionDelegate);                        // 0x00B0   (0x0010)  
	SDK_UNDEFINED(16,1484) /* FMulticastInlineDelegate */ __um(OnEndInteractionDelegate);                          // 0x00C0   (0x0010)  
	SDK_UNDEFINED(16,1485) /* FMulticastInlineDelegate */ __um(OnFocusByFirstTraceDelegate);                       // 0x00D0   (0x0010)  
	SDK_UNDEFINED(16,1486) /* FMulticastInlineDelegate */ __um(OnFoucsBySecondTraceDelegate);                      // 0x00E0   (0x0010)  
	SDK_UNDEFINED(16,1487) /* FMulticastInlineDelegate */ __um(OnLoseFocusDelegate);                               // 0x00F0   (0x0010)  
	bool                                               bEnableInteract;                                            // 0x0100   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0101   (0x0007)  MISSED
	FInteractionInfo                                   InteractionInfo;                                            // 0x0108   (0x0060)  
	class USceneComponent*                             InteractionPoint;                                           // 0x0168   (0x0008)  
	class USceneComponent*                             InteractTracePoint;                                         // 0x0170   (0x0008)  
	class UPaladinInteraction*                         InteractionImpl;                                            // 0x0178   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0180   (0x0008)  MISSED


	/// Functions
	// Function /Script/Pal7.InteractionComponent.SetEnableInteract
	// void SetEnableInteract(bool bInEnable);                                                                               // [0xe3d2c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.InteractionComponent.RefreshRegister
	// void RefreshRegister();                                                                                               // [0xe3d280] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.InteractionComponent.PaladinUnregister
	// void PaladinUnregister();                                                                                             // [0xe3d1b0] Final|Native|Public  
	// Function /Script/Pal7.InteractionComponent.PaladinRegister
	// void PaladinRegister();                                                                                               // [0xe3d190] Final|Native|Public  
	// Function /Script/Pal7.InteractionComponent.OverrideSecondTraceRange
	// void OverrideSecondTraceRange(float NewTraceDistance);                                                                // [0xe3d110] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.InteractionComponent.OverrideFirstTraceRange
	// void OverrideFirstTraceRange(float NewFirstTraceDistance);                                                            // [0xe3d090] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.InteractionComponent.IsPaladinRegistered
	// bool IsPaladinRegistered();                                                                                           // [0xe3d020] Final|Native|Public|Const 
	// Function /Script/Pal7.InteractionComponent.IsInteractValid
	// bool IsInteractValid();                                                                                               // [0xe3cfc0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.InteractionComponent.IsInteracting
	// bool IsInteracting();                                                                                                 // [0xe3cff0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.InteractionComponent.IsEnableInteract
	// bool IsEnableInteract();                                                                                              // [0xe3cfa0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.InteractionComponent.IsCanInteract
	// bool IsCanInteract();                                                                                                 // [0xe3cf70] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.InteractionComponent.HasBubble
	// bool HasBubble();                                                                                                     // [0xe3cf00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.InteractionComponent.GetInteractTraceLocation
	// FVector GetInteractTraceLocation();                                                                                   // [0xe3ce70] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.InteractionComponent.GetInteractPointLocation
	// FVector GetInteractPointLocation();                                                                                   // [0xe3ce30] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.InteractionComponent.GetInteractionInfo
	// FInteractionInfo GetInteractionInfo();                                                                                // [0xe3ceb0] Final|Native|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/Pal7.ItemBearerComponent
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UItemBearerComponent : public UActorComponent
{ 
public:
};

/// Class /Script/Pal7.ItemWidget_Base
/// Size: 0x0048 (0x000230 - 0x000278)
class UItemWidget_Base : public UUserWidget
{ 
public:
	SDK_UNDEFINED(16,1488) /* FMulticastInlineDelegate */ __um(OnConfirmMenuItem);                                 // 0x0230   (0x0010)  
	unsigned char                                      UnknownData00_5[0x10];                                      // 0x0240   (0x0010)  MISSED
	class UClass*                                      SubMenuWidgetClass;                                         // 0x0250   (0x0008)  
	SDK_UNDEFINED(24,1489) /* FText */                 __um(ItemDescription);                                      // 0x0258   (0x0018)  
	bool                                               bIsActive;                                                  // 0x0270   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0271   (0x0007)  MISSED


	/// Functions
	// Function /Script/Pal7.ItemWidget_Base.PlayDeActiveEffect
	// void PlayDeActiveEffect();                                                                                            // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.ItemWidget_Base.PlayActiveEffect
	// void PlayActiveEffect();                                                                                              // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.ItemWidget_Base.OnSynchronizeProperties
	// void OnSynchronizeProperties();                                                                                       // [0x15dd8c0] Event|Protected|BlueprintEvent 
};

/// Struct /Script/Pal7.LevelPickableSleepParams
/// Size: 0x000C (0x000000 - 0x00000C)
struct FLevelPickableSleepParams
{ 
	bool                                               bEnableSleepCheck;                                          // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              StartSleepDistance;                                         // 0x0004   (0x0004)  
	float                                              CheckInterval;                                              // 0x0008   (0x0004)  
};

/// Class /Script/Pal7.LevelPickupable
/// Size: 0x0050 (0x000220 - 0x000270)
class ALevelPickupable : public AActor
{ 
public:
	SDK_UNDEFINED(16,1490) /* FMulticastInlineDelegate */ __um(OnGotItem);                                         // 0x0220   (0x0010)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0230   (0x0004)  MISSED
	bool                                               bKeepUsedFlag;                                              // 0x0234   (0x0001)  
	bool                                               bDestroyAfterPickedUp;                                      // 0x0235   (0x0001)  
	bool                                               bCanDirectlyInteract;                                       // 0x0236   (0x0001)  
	EGainItemType                                      GainItemType;                                               // 0x0237   (0x0001)  
	class UInteractionComponent*                       InteractComp;                                               // 0x0238   (0x0008)  
	class UGiveItemComponent*                          GiveItemComponent;                                          // 0x0240   (0x0008)  
	float                                              DestoryDelay;                                               // 0x0248   (0x0004)  
	bool                                               bNeverSleep;                                                // 0x024C   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x024D   (0x0003)  MISSED
	FGuid                                              Guid;                                                       // 0x0250   (0x0010)  
	FLevelPickableSleepParams                          SleepParams;                                                // 0x0260   (0x000C)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x026C   (0x0004)  MISSED


	/// Functions
	// Function /Script/Pal7.LevelPickupable.ToggleInteraction
	// void ToggleInteraction(bool bCanInteract);                                                                            // [0xe3d420] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.LevelPickupable.ShowCanInteractEffect_BP
	// void ShowCanInteractEffect_BP(bool bShow);                                                                            // [0x15dd8c0] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.LevelPickupable.PostInteraction
	// void PostInteraction(bool bInSuccess);                                                                                // [0xe3d1d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.LevelPickupable.OnInteraction
	// void OnInteraction();                                                                                                 // [0xe3d070] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.LevelPickupable.NotifyPlayerGotItems
	// void NotifyPlayerGotItems();                                                                                          // [0xe3d050] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.LevelPickupable.K2_StartSleep
	// void K2_StartSleep();                                                                                                 // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.LevelPickupable.K2_OnReceiveInteractionEvent
	// void K2_OnReceiveInteractionEvent();                                                                                  // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.LevelPickupable.K2_OnPreInit
	// void K2_OnPreInit(bool bUsed);                                                                                        // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.LevelPickupable.K2_EndSleep
	// void K2_EndSleep();                                                                                                   // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.LevelPickupable.ForceSleep
	// void ForceSleep(bool bInSleep);                                                                                       // [0xe3cd80] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/Pal7.ManaCostModifierCalculation
/// Size: 0x0000 (0x000040 - 0x000040)
class UManaCostModifierCalculation : public UGameplayModMagnitudeCalculation
{ 
public:
};

/// Class /Script/Pal7.MeiDamageCalculation
/// Size: 0x0000 (0x000040 - 0x000040)
class UMeiDamageCalculation : public UGameplayModMagnitudeCalculation
{ 
public:
};

/// Class /Script/Pal7.MerchantComponent
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMerchantComponent : public UActorComponent
{ 
public:
};

/// Class /Script/Pal7.MinimapWidgetBase
/// Size: 0x0000 (0x000270 - 0x000270)
class UMinimapWidgetBase : public UPaladinUIBase
{ 
public:


	/// Functions
	// Function /Script/Pal7.MinimapWidgetBase.RemoveCustomMarker
	// void RemoveCustomMarker(class AActor* Actor);                                                                         // [0x15dd8c0] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.MinimapWidgetBase.PushMinimapInfo
	// void PushMinimapInfo(FMinimapInfo& Info);                                                                             // [0x15dd8c0] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.MinimapWidgetBase.PopMinimapInfo
	// void PopMinimapInfo();                                                                                                // [0x15dd8c0] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.MinimapWidgetBase.InitDone
	// void InitDone();                                                                                                      // [0x15dd8c0] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.MinimapWidgetBase.AddCustomMarker
	// void AddCustomMarker(class AActor* Actor);                                                                            // [0x15dd8c0] Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/Pal7.ModifyAwakenPointExecution
/// Size: 0x0000 (0x000040 - 0x000040)
class UModifyAwakenPointExecution : public UGameplayEffectExecutionCalculation
{ 
public:
};

/// Class /Script/Pal7.MonsterInteractionComponent
/// Size: 0x0000 (0x000188 - 0x000188)
class UMonsterInteractionComponent : public UInteractionComponent
{ 
public:
};

/// Struct /Script/Pal7.AISleepParam
/// Size: 0x000C (0x000000 - 0x00000C)
struct FAISleepParam
{ 
	EAISleepType                                       SleepRuls;                                                  // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              SleepDistance;                                              // 0x0004   (0x0004)  
	float                                              AwakeDistance;                                              // 0x0008   (0x0004)  
};

/// Struct /Script/Pal7.RandomPatrolNode
/// Size: 0x0018 (0x000000 - 0x000018)
struct FRandomPatrolNode
{ 
	float                                              PatrolInterval;                                             // 0x0000   (0x0004)  
	float                                              RndIntervalOffset;                                          // 0x0004   (0x0004)  
	class ATriggerBox*                                 SpawnVolum;                                                 // 0x0008   (0x0008)  
	class UPatrolActionBase*                           PatrolAction;                                               // 0x0010   (0x0008)  
};

/// Class /Script/Pal7.MonsterSpawnPoint
/// Size: 0x0098 (0x000220 - 0x0002B8)
class AMonsterSpawnPoint : public AActor
{ 
public:
	float                                              RefreshDelay;                                               // 0x0220   (0x0004)  
	FGameplayTag                                       InvalidTag;                                                 // 0x0224   (0x0008)  
	FAISleepParam                                      SleepRules;                                                 // 0x022C   (0x000C)  
	EMonsterKind                                       MonsterKind;                                                // 0x0238   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0239   (0x0003)  MISSED
	int32_t                                            DefaultLevel;                                               // 0x023C   (0x0004)  
	FName                                              GroupName;                                                  // 0x0240   (0x0008)  
	float                                              UpdateInterval;                                             // 0x0248   (0x0004)  
	bool                                               bNeverEndFightingByDistance;                                // 0x024C   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x024D   (0x0003)  MISSED
	class APatrolNode*                                 PatrolNode;                                                 // 0x0250   (0x0008)  
	float                                              MaxDistanceAwayFromSpawnPointOverride;                      // 0x0258   (0x0004)  
	float                                              CatchupDistanceOverride;                                    // 0x025C   (0x0004)  
	FRandomPatrolNode                                  RandomPatrolNode;                                           // 0x0260   (0x0018)  
	float                                              SpawnLocZOffset;                                            // 0x0278   (0x0004)  
	float                                              OverrideDropMoneyMin;                                       // 0x027C   (0x0004)  
	float                                              OverrideDropMoneyMax;                                       // 0x0280   (0x0004)  
	float                                              OverrideMonsterExpRatio;                                    // 0x0284   (0x0004)  
	TArray<FWeightItemTable>                           OverrideItemDropTable;                                      // 0x0288   (0x0010)  
	unsigned char                                      UnknownData02_5[0x10];                                      // 0x0298   (0x0010)  MISSED
	class UClass*                                      InstanceClass;                                              // 0x02A8   (0x0008)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x02B0   (0x0008)  MISSED


	/// Functions
	// Function /Script/Pal7.MonsterSpawnPoint.RefreshIfInvalid
	// void RefreshIfInvalid();                                                                                              // [0xe3d260] Final|Native|Public  
	// Function /Script/Pal7.MonsterSpawnPoint.CheckIfPlayerCanSeeSpawnPoint
	// bool CheckIfPlayerCanSeeSpawnPoint();                                                                                 // [0xe3cb90] Final|Native|Private|BlueprintCallable 
};

/// Class /Script/Pal7.PatrolActionBase
/// Size: 0x0000 (0x000028 - 0x000028)
class UPatrolActionBase : public UObject
{ 
public:
};

/// Class /Script/Pal7.PatrolModeBase
/// Size: 0x0000 (0x000028 - 0x000028)
class UPatrolModeBase : public UObject
{ 
public:
};

/// Class /Script/Pal7.RandomPatrolMode
/// Size: 0x0010 (0x000028 - 0x000038)
class URandomPatrolMode : public UPatrolModeBase
{ 
public:
	float                                              PatrolInterval;                                             // 0x0028   (0x0004)  
	float                                              RndIntervalOffset;                                          // 0x002C   (0x0004)  
	class UPatrolActionBase*                           PatrolEvent;                                                // 0x0030   (0x0008)  
};

/// Class /Script/Pal7.PatrolNodeMode
/// Size: 0x0008 (0x000028 - 0x000030)
class UPatrolNodeMode : public UPatrolModeBase
{ 
public:
	class APatrolNode*                                 PatrolNode;                                                 // 0x0028   (0x0008)  
};

/// Class /Script/Pal7.MonsterSpawnVolum
/// Size: 0x00A0 (0x000228 - 0x0002C8)
class AMonsterSpawnVolum : public ATriggerBox
{ 
public:
	class UPatrolModeBase*                             PatrolMode;                                                 // 0x0228   (0x0008)  
	float                                              RefreshDelay;                                               // 0x0230   (0x0004)  
	FGameplayTag                                       InvalidTag;                                                 // 0x0234   (0x0008)  
	EMonsterKind                                       MonsterKind;                                                // 0x023C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x023D   (0x0003)  MISSED
	int32_t                                            DefaultLevel;                                               // 0x0240   (0x0004)  
	FName                                              GroupName;                                                  // 0x0244   (0x0008)  
	int32_t                                            MonsterNumber;                                              // 0x024C   (0x0004)  
	FAISleepParam                                      SleepRules;                                                 // 0x0250   (0x000C)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x025C   (0x0004)  MISSED
	class UClass*                                      SpawnPointClass;                                            // 0x0260   (0x0008)  
	bool                                               DrawDebugMsg;                                               // 0x0268   (0x0001)  
	bool                                               bNeverEndFightingByDistance;                                // 0x0269   (0x0001)  
	unsigned char                                      UnknownData02_5[0x2];                                       // 0x026A   (0x0002)  MISSED
	float                                              MaxDistanceAwayFromSpawnPointOverride;                      // 0x026C   (0x0004)  
	float                                              CatchupDistanceOverride;                                    // 0x0270   (0x0004)  
	float                                              SpawnLocZOffset;                                            // 0x0274   (0x0004)  
	TArray<FVector>                                    PreCalLandPoints;                                           // 0x0278   (0x0010)  
	float                                              OverrideDropMoneyMin;                                       // 0x0288   (0x0004)  
	float                                              OverrideDropMoneyMax;                                       // 0x028C   (0x0004)  
	float                                              OverrideMonsterExpRatio;                                    // 0x0290   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x0294   (0x0004)  MISSED
	TArray<FWeightItemTable>                           OverrideItemDropTable;                                      // 0x0298   (0x0010)  
	float                                              CheckLandPointInterval;                                     // 0x02A8   (0x0004)  
	unsigned char                                      UnknownData04_6[0x1C];                                      // 0x02AC   (0x001C)  MISSED


	/// Functions
	// Function /Script/Pal7.MonsterSpawnVolum.InitMonsters
	// void InitMonsters();                                                                                                  // [0xe3cf30] Final|Native|Private 
};

/// Class /Script/Pal7.MonsterSpawnVolumWithRandomKinds
/// Size: 0x00B0 (0x000228 - 0x0002D8)
class AMonsterSpawnVolumWithRandomKinds : public ATriggerBox
{ 
public:
	class UPatrolModeBase*                             PatrolMode;                                                 // 0x0228   (0x0008)  
	float                                              RefreshDelay;                                               // 0x0230   (0x0004)  
	FGameplayTag                                       InvalidTag;                                                 // 0x0234   (0x0008)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x023C   (0x0004)  MISSED
	TArray<EMonsterKind>                               RandomMonsterKinds;                                         // 0x0240   (0x0010)  
	int32_t                                            DefaultLevel;                                               // 0x0250   (0x0004)  
	FName                                              GroupName;                                                  // 0x0254   (0x0008)  
	int32_t                                            MonsterNumber;                                              // 0x025C   (0x0004)  
	FAISleepParam                                      SleepRules;                                                 // 0x0260   (0x000C)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x026C   (0x0004)  MISSED
	class UClass*                                      SpawnPointClass;                                            // 0x0270   (0x0008)  
	float                                              MaxDistanceAwayFromSpawnPointOverride;                      // 0x0278   (0x0004)  
	float                                              CatchupDistanceOverride;                                    // 0x027C   (0x0004)  
	bool                                               DrawDebugMsg;                                               // 0x0280   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0281   (0x0003)  MISSED
	float                                              SpawnLocZOffset;                                            // 0x0284   (0x0004)  
	TArray<FVector>                                    PreCalLandPoints;                                           // 0x0288   (0x0010)  
	float                                              OverrideDropMoneyMin;                                       // 0x0298   (0x0004)  
	float                                              OverrideDropMoneyMax;                                       // 0x029C   (0x0004)  
	float                                              OverrideMonsterExpRatio;                                    // 0x02A0   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x02A4   (0x0004)  MISSED
	TArray<FWeightItemTable>                           OverrideItemDropTable;                                      // 0x02A8   (0x0010)  
	float                                              CheckLandPointInterval;                                     // 0x02B8   (0x0004)  
	unsigned char                                      UnknownData04_6[0x1C];                                      // 0x02BC   (0x001C)  MISSED


	/// Functions
	// Function /Script/Pal7.MonsterSpawnVolumWithRandomKinds.InitMonsters
	// void InitMonsters();                                                                                                  // [0xe3cf50] Final|Native|Private 
};

/// Struct /Script/Pal7.MonsterRefreshWave
/// Size: 0x0018 (0x000000 - 0x000018)
struct FMonsterRefreshWave
{ 
	class UClass*                                      MonsterClass;                                               // 0x0000   (0x0008)  
	int32_t                                            MonsterNumber;                                              // 0x0008   (0x0004)  
	int32_t                                            MonsterLevel;                                               // 0x000C   (0x0004)  
	bool                                               bNeverEndFightingByDistance;                                // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
};

/// Class /Script/Pal7.MonsterWaveSpawnVolum
/// Size: 0x00C8 (0x000228 - 0x0002F0)
class AMonsterWaveSpawnVolum : public ATriggerBox
{ 
public:
	unsigned char                                      UnknownData00_3[0x10];                                      // 0x0228   (0x0010)  MISSED
	TArray<FMonsterRefreshWave>                        MonsterWaves;                                               // 0x0238   (0x0010)  
	float                                              SpawnLocZOffset;                                            // 0x0248   (0x0004)  
	bool                                               bDrawDebugMsg;                                              // 0x024C   (0x0001)  
	unsigned char                                      UnknownData01_6[0xA3];                                      // 0x024D   (0x00A3)  MISSED
};

/// Class /Script/Pal7.MonsterWaveFightingManager
/// Size: 0x0050 (0x000220 - 0x000270)
class AMonsterWaveFightingManager : public AActor
{ 
public:
	class APaladinSequenceActor*                       DialogAssets;                                               // 0x0220   (0x0008)  
	class APaladinSequenceActor*                       AfterFightingSequence;                                      // 0x0228   (0x0008)  
	TArray<class AMonsterWaveSpawnVolum*>              RefreshVolums;                                              // 0x0230   (0x0010)  
	bool                                               bHasTimmeLimite;                                            // 0x0240   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0241   (0x0003)  MISSED
	float                                              BattleLastTime;                                             // 0x0244   (0x0004)  
	int32_t                                            nForceRefresh_RemainEnemyCount;                             // 0x0248   (0x0004)  
	float                                              ForceUpdateTime;                                            // 0x024C   (0x0004)  
	bool                                               bHasDelaySpawnMonsters;                                     // 0x0250   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0251   (0x0003)  MISSED
	float                                              MaxDelaySpawnTime;                                          // 0x0254   (0x0004)  
	unsigned char                                      UnknownData02_6[0x18];                                      // 0x0258   (0x0018)  MISSED


	/// Functions
	// Function /Script/Pal7.MonsterWaveFightingManager.StartBattle
	// void StartBattle();                                                                                                   // [0xe3d3e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.MonsterWaveFightingManager.K2_OnStartBattle
	// void K2_OnStartBattle();                                                                                              // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.MonsterWaveFightingManager.K2_OnEndBattle
	// void K2_OnEndBattle();                                                                                                // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.MonsterWaveFightingManager.EndBattle
	// void EndBattle(bool bGameEnd);                                                                                        // [0xe3ccd0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.Montage_AnimNotify_GameplayEvent
/// Size: 0x0028 (0x000038 - 0x000060)
class UMontage_AnimNotify_GameplayEvent : public UAnimNotify
{ 
public:
	SDK_UNDEFINED(16,1491) /* FString */               __um(DisplayString);                                        // 0x0038   (0x0010)  
	FGameplayTag                                       PayloadEventTag;                                            // 0x0048   (0x0008)  
	float                                              PayloadEventMagnitude;                                      // 0x0050   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0054   (0x0004)  MISSED
	class UPaladinEventDataObject*                     PaladinEventDataObject;                                     // 0x0058   (0x0008)  
};

/// Class /Script/Pal7.MovieSceneDialogueSection
/// Size: 0x0068 (0x0000E0 - 0x000148)
class UMovieSceneDialogueSection : public UMovieSceneSection
{ 
public:
	SDK_UNDEFINED(24,1492) /* FText */                 __um(TitleInfo);                                            // 0x00E0   (0x0018)  
	SDK_UNDEFINED(24,1493) /* FText */                 __um(DialogueInfo);                                         // 0x00F8   (0x0018)  
	SDK_UNDEFINED(24,1494) /* FText */                 __um(SpeakerName);                                          // 0x0110   (0x0018)  
	int32_t                                            unique_id;                                                  // 0x0128   (0x0004)  
	FName                                              ActorID;                                                    // 0x012C   (0x0008)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0134   (0x0004)  MISSED
	class UAnimSequenceBase*                           FaceAnim;                                                   // 0x0138   (0x0008)  
	bool                                               bPlayFaceLoop;                                              // 0x0140   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0141   (0x0007)  MISSED
};

/// Class /Script/Pal7.MovieSceneDialogueTrack
/// Size: 0x0040 (0x000058 - 0x000098)
class UMovieSceneDialogueTrack : public UMovieSceneNameableTrack
{ 
public:
	TArray<class UMovieSceneSection*>                  Sections;                                                   // 0x0058   (0x0010)  
	SDK_UNDEFINED(40,1495) /* TWeakObjectPtr<UDataTable*> */ __um(dialogueDataTable);                              // 0x0068   (0x0028)  
	bool                                               bIsFaceFxData;                                              // 0x0090   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0091   (0x0007)  MISSED
};

/// Class /Script/Pal7.MovieSceneHandleShakeSection
/// Size: 0x0010 (0x0000E0 - 0x0000F0)
class UMovieSceneHandleShakeSection : public UMovieSceneSection
{ 
public:
	class UForceFeedbackEffect*                        HandleForceFeedbackEffect;                                  // 0x00E0   (0x0008)  
	float                                              DurationScale;                                              // 0x00E8   (0x0004)  
	float                                              VerticalScale;                                              // 0x00EC   (0x0004)  
};

/// Class /Script/Pal7.MovieSceneHandleShakeTrack
/// Size: 0x0010 (0x000058 - 0x000068)
class UMovieSceneHandleShakeTrack : public UMovieSceneNameableTrack
{ 
public:
	TArray<class UMovieSceneSection*>                  Sections;                                                   // 0x0058   (0x0010)  
};

/// Class /Script/Pal7.MyPanelWidget_Base
/// Size: 0x0030 (0x000230 - 0x000260)
class UMyPanelWidget_Base : public UUserWidget
{ 
public:
	int32_t                                            SelectedIndex;                                              // 0x0230   (0x0004)  
	ENavigationDirection                               NavigationDirection;                                        // 0x0234   (0x0001)  
	bool                                               bAutoEnterSubMenu;                                          // 0x0235   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0236   (0x0002)  MISSED
	TArray<class UItemWidget_Base*>                    CurrentMenus;                                               // 0x0238   (0x0010)  
	SDK_UNDEFINED(8,1496) /* TWeakObjectPtr<UMyPanelWidget_Base*> */ __um(ParentPanelWidget);                      // 0x0248   (0x0008)  
	class UMyPanelWidget_Base*                         CurrentOpeningSubMenu;                                      // 0x0250   (0x0008)  
	bool                                               bFocusToOpeningSubMenu;                                     // 0x0258   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0259   (0x0007)  MISSED


	/// Functions
	// Function /Script/Pal7.MyPanelWidget_Base.UpdateAfterSelectedIndexChanged
	// void UpdateAfterSelectedIndexChanged(int32_t PreviousIndex);                                                          // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.MyPanelWidget_Base.SetupForCurrentMenuBinding
	// void SetupForCurrentMenuBinding();                                                                                    // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.MyPanelWidget_Base.SetDefaultSelection
	// void SetDefaultSelection();                                                                                           // [0xe416c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.MyPanelWidget_Base.ProcessSubMenuChanging
	// void ProcessSubMenuChanging();                                                                                        // [0x15dd8c0] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.MyPanelWidget_Base.OnSynchronizeProperties
	// void OnSynchronizeProperties();                                                                                       // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.MyPanelWidget_Base.GetItemContainer
	// class UPanelWidget* GetItemContainer();                                                                               // [0x15dd8c0] Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/Pal7.MyPanelWidget_Base.GetFocusingItemWidget
	// class UItemWidget_Base* GetFocusingItemWidget();                                                                      // [0xe41590] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.MyPanelWidget_Base.ExitFromSubMenu
	// void ExitFromSubMenu();                                                                                               // [0xe41570] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.MyPanelWidget_Base.EnterSubMenu
	// void EnterSubMenu();                                                                                                  // [0xe41550] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.MyPanelWidget_Base.ClearSelection
	// void ClearSelection();                                                                                                // [0xe41530] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.MyRichTextBlock
/// Size: 0x0310 (0x000128 - 0x000438)
class UMyRichTextBlock : public UTextLayoutWidget
{ 
public:
	SDK_UNDEFINED(24,1497) /* FText */                 __um(Text);                                                 // 0x0128   (0x0018)  
	SDK_UNDEFINED(16,1498) /* FDelegateProperty */     __um(TextDelegate);                                         // 0x0140   (0x0010)  
	FSlateFontInfo                                     Font;                                                       // 0x0150   (0x0050)  
	FLinearColor                                       Color;                                                      // 0x01A0   (0x0010)  
	TArray<class URichTextBlockDecorator*>             Decorators;                                                 // 0x01B0   (0x0010)  
	unsigned char                                      UnknownData00_6[0x278];                                     // 0x01C0   (0x0278)  MISSED


	/// Functions
	// Function /Script/Pal7.MyRichTextBlock.SetText
	// void SetText(FText& InText);                                                                                          // [0xe416e0] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Pal7.Paladin7DPIScalingRule
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladin7DPIScalingRule : public UDPICustomScalingRule
{ 
public:
};

/// Class /Script/Pal7.PaladinAbilityBase
/// Size: 0x0010 (0x000400 - 0x000410)
class UPaladinAbilityBase : public UGameplayAbility
{ 
public:
	TArray<FGameplayTag>                               TriggersWhenCooldown;                                       // 0x0400   (0x0010)  


	/// Functions
	// Function /Script/Pal7.PaladinAbilityBase.K2_TriggerCooldownEvent
	// void K2_TriggerCooldownEvent(FGameplayEventData& EventData);                                                          // [0x15dd8c0] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/Pal7.PaladinAbilityBase.GetSetByCallerMagnitude
	// float GetSetByCallerMagnitude(FGameplayTag Tag);                                                                      // [0xe41620] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAbilityBase.GetPaladinAbilitySystemComponent
	// class UPaladinAbilitySystemComponent* GetPaladinAbilitySystemComponent();                                             // [0xe415f0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinAbilityBase.GetOwnerAsHero
	// class APaladinHero* GetOwnerAsHero();                                                                                 // [0xe415c0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinAbilityBase.AddTriggerbyTag
	// void AddTriggerbyTag(FGameplayTag Tag);                                                                               // [0xe414b0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinAbilitySpecialEffect
/// Size: 0x0010 (0x000028 - 0x000038)
class UPaladinAbilitySpecialEffect : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x28];                                      // 0x0000   (0x0028)  MISSED
	bool                                               OnlyPlayerControlEffect;                                    // 0x0028   (0x0001)  
	bool                                               NeedTarget;                                                 // 0x0029   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x002A   (0x0002)  MISSED
	int32_t                                            Priority;                                                   // 0x002C   (0x0004)  
	EPaladinSpecialEffectTargetType                    TargetType;                                                 // 0x0030   (0x0001)  
	bool                                               CanEditTargetType;                                          // 0x0031   (0x0001)  
	unsigned char                                      UnknownData02_6[0x6];                                       // 0x0032   (0x0006)  MISSED
};

/// Class /Script/Pal7.PaladinGEBase
/// Size: 0x0000 (0x0007B8 - 0x0007B8)
class UPaladinGEBase : public UGameplayEffect
{ 
public:
};

/// Class /Script/Pal7.PaladinAutoActivateAbilityGE
/// Size: 0x0008 (0x0007B8 - 0x0007C0)
class UPaladinAutoActivateAbilityGE : public UGameplayEffect
{ 
public:
	bool                                               bAutoActive;                                                // 0x07B8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x07B9   (0x0007)  MISSED
};

/// Class /Script/Pal7.PaladinAbilitySpecialEffect_TimeDilatin
/// Size: 0x0008 (0x000038 - 0x000040)
class UPaladinAbilitySpecialEffect_TimeDilatin : public UPaladinAbilitySpecialEffect
{ 
public:
	float                                              DilatinRate;                                                // 0x0038   (0x0004)  
	float                                              DilatinSpan;                                                // 0x003C   (0x0004)  
};

/// Class /Script/Pal7.PaladinAbilitySpecialEffect_CameraShake
/// Size: 0x0010 (0x000038 - 0x000048)
class UPaladinAbilitySpecialEffect_CameraShake : public UPaladinAbilitySpecialEffect
{ 
public:
	class UClass*                                      ShakeClass;                                                 // 0x0038   (0x0008)  
	float                                              Scale;                                                      // 0x0040   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0044   (0x0004)  MISSED
};

/// Class /Script/Pal7.PaladinAbilitySpecialEffect_Postprocess
/// Size: 0x0010 (0x000038 - 0x000048)
class UPaladinAbilitySpecialEffect_Postprocess : public UPaladinAbilitySpecialEffect
{ 
public:
	class UClass*                                      PostProcess;                                                // 0x0038   (0x0008)  
	float                                              Scale;                                                      // 0x0040   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0044   (0x0004)  MISSED
};

/// Class /Script/Pal7.PaladinAbilitySpecialEffect_HandleShake
/// Size: 0x0018 (0x000038 - 0x000050)
class UPaladinAbilitySpecialEffect_HandleShake : public UPaladinAbilitySpecialEffect
{ 
public:
	class UForceFeedbackEffect*                        HandleForceFeedbackEffect;                                  // 0x0038   (0x0008)  
	bool                                               bIgnoreTimeDilation;                                        // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0041   (0x0003)  MISSED
	float                                              DurationScale;                                              // 0x0044   (0x0004)  
	float                                              ValueScale;                                                 // 0x0048   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x004C   (0x0004)  MISSED
};

/// Class /Script/Pal7.PaladinOneHitEventData
/// Size: 0x0020 (0x000028 - 0x000048)
class UPaladinOneHitEventData : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x28];                                      // 0x0000   (0x0028)  MISSED
	class APaladinCharacterBase*                       TargetChar;                                                 // 0x0028   (0x0008)  
	class UPaladinComboAbility*                        ComboAbility;                                               // 0x0030   (0x0008)  
	class APaladinGATargetActor*                       TargetActor;                                                // 0x0038   (0x0008)  
	int32_t                                            HitIdx;                                                     // 0x0040   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0044   (0x0004)  MISSED
};

/// Class /Script/Pal7.PaladinGlobalSpecialEffectManagerComponent
/// Size: 0x0020 (0x0000B0 - 0x0000D0)
class UPaladinGlobalSpecialEffectManagerComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x00B0   (0x0008)  MISSED
	class UPaladinGlobalSpecialEffect_TimeDilation*    TimeDilationManager;                                        // 0x00B8   (0x0008)  
	class UPaladinGlobalSpecialEffect_PlayCameraShake* CameraShakeManager;                                         // 0x00C0   (0x0008)  
	class UPaladinGlobalSpecialEffect_PlayHandleShake* HandleShakeManager;                                         // 0x00C8   (0x0008)  
};

/// Class /Script/Pal7.PaladinGlobalSpecialEffect_TimeDilation
/// Size: 0x0010 (0x0000B0 - 0x0000C0)
class UPaladinGlobalSpecialEffect_TimeDilation : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x00B0   (0x0010)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinGlobalSpecialEffect_TimeDilation.AddTimeDilation
	// void AddTimeDilation(float DilatinRate, float DilatinSpan, int32_t Priority);                                         // [0xe44800] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinGlobalSpecialEffect_PlayCameraShake
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UPaladinGlobalSpecialEffect_PlayCameraShake : public UActorComponent
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinGlobalSpecialEffect_PlayCameraShake.PlayCameraShake
	// void PlayCameraShake(class UClass* ShakeClass, float Scale, class APlayerCameraManager* CameraManager);               // [0xe45750] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinGlobalSpecialEffect_PlayHandleShake
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UPaladinGlobalSpecialEffect_PlayHandleShake : public UActorComponent
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinGlobalSpecialEffect_PlayHandleShake.PlayHandleShake
	// void PlayHandleShake(class UForceFeedbackEffect* HandleForceFeedbackEffect, class APlayerController* PlayerController, bool bIgnoreTimeDilation, float DurationScale, float ValueScale); // [0xe45860] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinCustomSpecialEffectBase
/// Size: 0x0010 (0x0000B0 - 0x0000C0)
class UPaladinCustomSpecialEffectBase : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x00B0   (0x0010)  MISSED
};

/// Class /Script/Pal7.PaladinCustomSpecialEffect_TimeDilation
/// Size: 0x0000 (0x0000C0 - 0x0000C0)
class UPaladinCustomSpecialEffect_TimeDilation : public UPaladinCustomSpecialEffectBase
{ 
public:
};

/// Class /Script/Pal7.PaladinAbilitySystemComponent
/// Size: 0x00B8 (0x0012F8 - 0x0013B0)
class UPaladinAbilitySystemComponent : public UAbilitySystemComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0xB8];                                      // 0x12F8   (0x00B8)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinAbilitySystemComponent.SetGameplayEffectPeriod
	// FGameplayEffectSpecHandle SetGameplayEffectPeriod(FGameplayEffectSpecHandle SpecHandle, float Period);                // [0xe46900] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAbilitySystemComponent.SetGameplayEffectChance
	// FGameplayEffectSpecHandle SetGameplayEffectChance(FGameplayEffectSpecHandle SpecHandle, float PerChanceToApplyToTargetiod); // [0xe467a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAbilitySystemComponent.ResetAllComboAbilityCD
	// void ResetAllComboAbilityCD();                                                                                        // [0xe46320] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAbilitySystemComponent.RemoveLooseGameplayTagNoBacked
	// void RemoveLooseGameplayTagNoBacked(FGameplayTag& GameplayTag, int32_t Count);                                        // [0xe46250] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinAbilitySystemComponent.ModifyEffectTime
	// void ModifyEffectTime(FGameplayEffectQuery& Query, float StartTimeDiff);                                              // [0xe45460] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinAbilitySystemComponent.K2_GetAllAttributes
	// void K2_GetAllAttributes(TMap<FName, FPaladinAttributesInSet>& Attributes);                                           // [0xe45230] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinAbilitySystemComponent.IsActiveGameplayEffectHandleValid
	// bool IsActiveGameplayEffectHandleValid(FActiveGameplayEffectHandle ActiveHandle);                                     // [0xe45150] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAbilitySystemComponent.GetPermanentGameplayEffectWithGrantedTag
	// TArray<FActiveGameplayEffectHandle> GetPermanentGameplayEffectWithGrantedTag(FGameplayTagContainer Tags);             // [0xe44fa0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinAbilitySystemComponent.GetFloatAttrBaseByString
	// float GetFloatAttrBaseByString(FString AttrName);                                                                     // [0xe44e80] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAbilitySystemComponent.GetChangeAttributeEffectFromTable
	// class UClass* GetChangeAttributeEffectFromTable(FGameplayAttribute& Attribute, TEnumAsByte<EGameplayModOp> ModOp);    // [0xe44ca0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinAbilitySystemComponent.ClearBuffsWithExceptList
	// void ClearBuffsWithExceptList(TArray<UClass*> ExceptList);                                                            // [0xe44910] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAbilitySystemComponent.AddLooseGameplayTagNoBacked
	// void AddLooseGameplayTagNoBacked(FGameplayTag& GameplayTag, int32_t Count);                                           // [0xe44730] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinAbilitySystemComponent.AddEventTriggeredAbilityHandle
	// void AddEventTriggeredAbilityHandle(FGameplayTag EventTag, FGameplayAbilitySpecHandle Handle);                        // [0xe44660] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAbilitySystemComponent.AddDynamicAssetTagsToGEHandle
	// void AddDynamicAssetTagsToGEHandle(FGameplayEffectSpecHandle Handle, FGameplayTagContainer DynamicAssetTags);         // [0xe44500] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAbilitySystemComponent.AbilityWithCDTryAgainstDeath
	// bool AbilityWithCDTryAgainstDeath();                                                                                  // [0xe444d0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinAbilitySystemGlobals
/// Size: 0x0000 (0x000260 - 0x000260)
class UPaladinAbilitySystemGlobals : public UAbilitySystemGlobals
{ 
public:
};

/// Class /Script/Pal7.PaladinAchievementComponennt
/// Size: 0x00B8 (0x0000B0 - 0x000168)
class UPaladinAchievementComponennt : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0xB8];                                      // 0x00B0   (0x00B8)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinAchievementComponennt.WriteALLAchievementsIDToConfig
	// bool WriteALLAchievementsIDToConfig();                                                                                // [0xe46d20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAchievementComponennt.TestPostProgressAchievement
	// void TestPostProgressAchievement(FGameplayTag AchievementTag);                                                        // [0xe46be0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/Pal7.PaladinAchievementComponennt.RecieveQuestTag
	// void RecieveQuestTag(FGameplayTag Tag, bool bAddTag);                                                                 // [0xe460f0] Final|Native|Protected 
	// Function /Script/Pal7.PaladinAchievementComponennt.ReceiveWeaponEnhanceEvent
	// void ReceiveWeaponEnhanceEvent(bool Enhance, int32_t WeaponID, int32_t EnhanceIndex, int32_t CurLevel);               // [0xe45fb0] Final|Native|Protected 
	// Function /Script/Pal7.PaladinAchievementComponennt.ReceiveTiaoTiaoLeFinish
	// void ReceiveTiaoTiaoLeFinish();                                                                                       // [0xe45f90] Final|Native|Protected|BlueprintCallable 
	// Function /Script/Pal7.PaladinAchievementComponennt.ReceivePingShuFinish
	// void ReceivePingShuFinish();                                                                                          // [0xe45f70] Final|Native|Protected|BlueprintCallable 
	// Function /Script/Pal7.PaladinAchievementComponennt.ReceiveMuseumUpdated
	// void ReceiveMuseumUpdated();                                                                                          // [0xe45f50] Final|Native|Protected 
	// Function /Script/Pal7.PaladinAchievementComponennt.ReceiveJoinStrickEvent
	// void ReceiveJoinStrickEvent(FName JoinStrickName);                                                                    // [0xe45ed0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/Pal7.PaladinAchievementComponennt.ReceiveHeroSkillUnlockedEvent
	// void ReceiveHeroSkillUnlockedEvent(class APaladinCharacterBase* Hero, TArray<FText>& AbilityName);                    // [0xe45d90] Final|Native|Protected|HasOutParms 
	// Function /Script/Pal7.PaladinAchievementComponennt.ReceiveGainPet
	// void ReceiveGainPet(FName PetName);                                                                                   // [0xe45d10] Final|Native|Protected 
	// Function /Script/Pal7.PaladinAchievementComponennt.ReceiveEnemyDie
	// void ReceiveEnemyDie(class APaladinHero* Killer, class APaladinEnemy* KilledEnemy);                                   // [0xe45c50] Final|Native|Protected 
	// Function /Script/Pal7.PaladinAchievementComponennt.ReceiveCookFinishEvent
	// void ReceiveCookFinishEvent(int32_t ChooseRecipeID, int32_t ChooseWineID, EPaladinCookSurroundType SurroundType);     // [0xe45b50] Final|Native|Public  
	// Function /Script/Pal7.PaladinAchievementComponennt.ReceiveBossBattleEnd
	// void ReceiveBossBattleEnd(bool bin, EBossBattleName BattleName);                                                      // [0xe45a90] Final|Native|Protected 
	// Function /Script/Pal7.PaladinAchievementComponennt.PostArriveAchievement
	// bool PostArriveAchievement(FGameplayTag AchievementID);                                                               // [0xe45a00] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAchievementComponennt.MarkJingJianRenOuJudgemented
	// void MarkJingJianRenOuJudgemented();                                                                                  // [0xe45440] Final|Native|Protected|BlueprintCallable 
	// Function /Script/Pal7.PaladinAchievementComponennt.ListenTaskEnd
	// void ListenTaskEnd(FName QuestInstanceID, FName QuestID, EQuestCategory QuestCategory);                               // [0xe45340] Final|Native|Protected 
	// Function /Script/Pal7.PaladinAchievementComponennt.GetAchievementComponent
	// class UPaladinAchievementComponennt* GetAchievementComponent();                                                       // [0xe44b80] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/Pal7.PaladinAction
/// Size: 0x0040 (0x000028 - 0x000068)
class UPaladinAction : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x30];                                      // 0x0000   (0x0030)  MISSED
	bool                                               bUseOwnerID;                                                // 0x0030   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	class AActor*                                      EventOwner;                                                 // 0x0038   (0x0008)  
	FName                                              OwnerActorID;                                               // 0x0040   (0x0008)  
	bool                                               bIsAsync : 1;                                               // 0x0048:0 (0x0001)  
	bool                                               bDoTickAction : 1;                                          // 0x0048:1 (0x0001)  
	EPaladinActionScope                                ActionScope;                                                // 0x0049   (0x0001)  
	unsigned char                                      UnknownData02_6[0x1E];                                      // 0x004A   (0x001E)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinAction.TickAction
	// void TickAction(float DeltaTime);                                                                                     // [0xe46c80] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinAction.StartAction
	// void StartAction();                                                                                                   // [0xe32f70] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinAction.PasueAction
	// void PasueAction();                                                                                                   // [0xe45730] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinAction.IsRunning
	// bool IsRunning();                                                                                                     // [0xe45210] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinAction.InitAction
	// void InitAction(class UObject* WorldContextObject);                                                                   // [0xe450c0] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinAction.GetActionOwner
	// class AActor* GetActionOwner();                                                                                       // [0xe44c30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinAction.EndAction
	// void EndAction(bool bIsInterrupted);                                                                                  // [0xe44a70] Native|Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/Pal7.PaladinASBase
/// Size: 0x0000 (0x000030 - 0x000030)
class UPaladinASBase : public UAttributeSet
{ 
public:
};

/// Class /Script/Pal7.PaladinActionAttrSet
/// Size: 0x0060 (0x000030 - 0x000090)
class UPaladinActionAttrSet : public UPaladinASBase
{ 
public:
	FGameplayAttributeData                             WalkSpeedRatio;                                             // 0x0030   (0x0010)  
	FGameplayAttributeData                             Toughness;                                                  // 0x0040   (0x0010)  
	FGameplayAttributeData                             BreakGauge;                                                 // 0x0050   (0x0010)  
	FGameplayAttributeData                             BreakGaugeMAX;                                              // 0x0060   (0x0010)  
	FGameplayAttributeData                             BreakGaugeSlowRecovery;                                     // 0x0070   (0x0010)  
	FGameplayAttributeData                             BreakTime;                                                  // 0x0080   (0x0010)  
};

/// Class /Script/Pal7.PaladinActionBlueprintLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladinActionBlueprintLibrary : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinActionBlueprintLibrary.TestMultiMap
	// void TestMultiMap(class UObject* WorldContextObject);                                                                 // [0xe46b70] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinActionBlueprintLibrary.RunPaladinActions
	// void RunPaladinActions(class UObject* WorldContextObject, TArray<UPaladinAction*> Actions, class AActor* ActionOwner); // [0xe465d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinActionBlueprintLibrary.RunPaladinAction
	// void RunPaladinAction(class UObject* WorldContextObject, class UPaladinAction* InAction);                             // [0xe46520] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinActionBlueprintLibrary.GetActionManager
	// class UPaladinActionManager* GetActionManager(class UObject* WorldContextObject);                                     // [0xe44bb0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/Pal7.PaladinActionEvent
/// Size: 0x0000 (0x000068 - 0x000068)
class UPaladinActionEvent : public UPaladinAction
{ 
public:
};

/// Class /Script/Pal7.PaladinActionEventContainer_StartCameraFade
/// Size: 0x0020 (0x000068 - 0x000088)
class UPaladinActionEventContainer_StartCameraFade : public UPaladinActionEvent
{ 
public:
	float                                              FromAlpha;                                                  // 0x0068   (0x0004)  
	float                                              ToAlpha;                                                    // 0x006C   (0x0004)  
	float                                              Duration;                                                   // 0x0070   (0x0004)  
	FLinearColor                                       Color;                                                      // 0x0074   (0x0010)  
	bool                                               bShouldFadeAudio : 1;                                       // 0x0084:0 (0x0001)  
	bool                                               bHoldWhenFinished : 1;                                      // 0x0084:1 (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0085   (0x0003)  MISSED
};

/// Class /Script/Pal7.PaladinActionEventContainer_StopCameraFade
/// Size: 0x0000 (0x000068 - 0x000068)
class UPaladinActionEventContainer_StopCameraFade : public UPaladinActionEvent
{ 
public:
};

/// Struct /Script/Pal7.PaladinActionQueueInstance
/// Size: 0x0030 (0x000000 - 0x000030)
struct FPaladinActionQueueInstance
{ 
	class UPaladinAction*                              CurrentAction;                                              // 0x0000   (0x0008)  
	EPaladinActionScope                                ScopeType;                                                  // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	TArray<class UPaladinAction*>                      ActionQueue;                                                // 0x0010   (0x0010)  
	bool                                               bIsTicking;                                                 // 0x0020   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0021   (0x0007)  MISSED
	class AActor*                                      ActionOwner;                                                // 0x0028   (0x0008)  
};

/// Class /Script/Pal7.PaladinActionManager
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UPaladinActionManager : public UActorComponent
{ 
public:
	class UPaladinAction*                              CurrentAction;                                              // 0x00B0   (0x0008)  
	TArray<class UPaladinAction*>                      AsyncTickActionsQueue;                                      // 0x00B8   (0x0010)  
	TArray<FPaladinActionQueueInstance>                QueueInstances;                                             // 0x00C8   (0x0010)  


	/// Functions
	// Function /Script/Pal7.PaladinActionManager.RunActions
	// void RunActions(TArray<UPaladinAction*> InActions, class AActor* ActionOwner);                                        // [0xe46400] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinActionManager.RunAction
	// void RunAction(class UPaladinAction* InAction, class AActor* ActionOwner);                                            // [0xe46340] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinActionManager.GetCurrentAction
	// class UPaladinAction* GetCurrentAction();                                                                             // [0xe44c60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinActionManager.FinishAction
	// void FinishAction(class UPaladinAction* InAction);                                                                    // [0xe44b00] Final|Native|Public  
};

/// Class /Script/Pal7.PaladinActionTask
/// Size: 0x0000 (0x000068 - 0x000068)
class UPaladinActionTask : public UPaladinAction
{ 
public:
};

/// Class /Script/Pal7.PaladinActorInfoComponent
/// Size: 0x0058 (0x0000B0 - 0x000108)
class UPaladinActorInfoComponent : public UActorComponent
{ 
public:
	FName                                              ActorID;                                                    // 0x00B0   (0x0008)  
	SDK_UNDEFINED(24,1499) /* FText */                 __um(DisplayName);                                          // 0x00B8   (0x0018)  
	int32_t                                            AvoidPriority;                                              // 0x00D0   (0x0004)  
	unsigned char                                      UnknownData00_5[0x15];                                      // 0x00D4   (0x0015)  MISSED
	EPaladinMarkCategory                               MarkCategory;                                               // 0x00E9   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x00EA   (0x0002)  MISSED
	FName                                              MarkType;                                                   // 0x00EC   (0x0008)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x00F4   (0x0004)  MISSED
	SDK_UNDEFINED(16,1500) /* FMulticastInlineDelegate */ __um(OnMarkInfoChanged);                                 // 0x00F8   (0x0010)  


	/// Functions
	// Function /Script/Pal7.PaladinActorInfoComponent.Unregister
	// void Unregister();                                                                                                    // [0xe46d00] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinActorInfoComponent.SetRegistEnable
	// void SetRegistEnable(bool bInEnable);                                                                                 // [0xe46ae0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinActorInfoComponent.SetPlayerCustomTrack
	// void SetPlayerCustomTrack(bool InTrack);                                                                              // [0xe46a50] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinActorInfoComponent.SetActorID
	// void SetActorID(FName InActorID);                                                                                     // [0xe46720] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinActorInfoComponent.Register
	// void Register(bool bReset);                                                                                           // [0xe461c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinActorInfoComponent.OnQuestTrackActorChanged
	// void OnQuestTrackActorChanged(FName InActorID);                                                                       // [0xe456b0] Final|Native|Public  
	// Function /Script/Pal7.PaladinActorInfoComponent.OnQuestPubliserChanged
	// void OnQuestPubliserChanged(FName InActorID);                                                                         // [0xe45630] Final|Native|Public  
	// Function /Script/Pal7.PaladinActorInfoComponent.OnQuestActiveStateChanged
	// void OnQuestActiveStateChanged(bool bInIsActived, FName InQuestID);                                                   // [0xe45570] Final|Native|Public  
	// Function /Script/Pal7.PaladinActorInfoComponent.IsPlayerCustomTrack
	// bool IsPlayerCustomTrack();                                                                                           // [0xe451f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinActorInfoComponent.IsActorRegistered
	// bool IsActorRegistered();                                                                                             // [0xe451d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinActorInfoComponent.GetMarkUnitInfo
	// FPaladinMarkingUnitInfo GetMarkUnitInfo();                                                                            // [0xe44f50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinActorInfoComponent.GetMarkTypeCount
	// int32_t GetMarkTypeCount();                                                                                           // [0xe44f30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinActorInfoComponent.GetDisplayName
	// FText GetDisplayName();                                                                                               // [0xe44df0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinActorInfoComponent.GetAvoidPriority
	// int32_t GetAvoidPriority();                                                                                           // [0xe44c80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinActorInfoComponent.GetActorID
	// FName GetActorID();                                                                                                   // [0xe44c60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinActorInfoComponent.DynamicRegister
	// void DynamicRegister(FName InActorID);                                                                                // [0xe449f0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinAICharacter
/// Size: 0x0020 (0x001110 - 0x001130)
class APaladinAICharacter : public APaladinEnemy
{ 
public:
	class UPaladinPawnSensingComponent*                PawnSensing;                                                // 0x1108   (0x0008)  
	class UAnimMontage*                                Montage_Alert;                                              // 0x1110   (0x0008)  
	bool                                               IsInitiative;                                               // 0x1118   (0x0001)  
	bool                                               SeePlayer;                                                  // 0x1119   (0x0001)  
	bool                                               HearPlayer;                                                 // 0x111A   (0x0001)  
	bool                                               IsBackingToSpawnPoint;                                      // 0x111B   (0x0001)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x111C   (0x0004)  MISSED
	SDK_UNDEFINED(16,1501) /* FMulticastInlineDelegate */ __um(OnToggleBackToSpawnPoint);                          // 0x1120   (0x0010)  


	/// Functions
	// Function /Script/Pal7.PaladinAICharacter.ToggleInitiative
	// void ToggleInitiative(bool bInitiative);                                                                              // [0xe4c150] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAICharacter.StartBackToSpawnPoint
	// void StartBackToSpawnPoint();                                                                                         // [0xe4c0f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAICharacter.SetAttackTarget
	// void SetAttackTarget(class APaladinHero* Target);                                                                     // [0xe4bc50] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAICharacter.ReceiveStartBackToSpawnPoint
	// void ReceiveStartBackToSpawnPoint();                                                                                  // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinAICharacter.ReceiveEndBackToSpawnPoint
	// void ReceiveEndBackToSpawnPoint();                                                                                    // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinAICharacter.K2_StruckDownBeaternPerform
	// void K2_StruckDownBeaternPerform();                                                                                   // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinAICharacter.EndBackToSpawnPoint
	// void EndBackToSpawnPoint();                                                                                           // [0xe4ac00] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAICharacter.EndAlert
	// void EndAlert();                                                                                                      // [0xe4abe0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAICharacter.BegineAlert
	// void BegineAlert();                                                                                                   // [0xe4a7c0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinAICharacterController
/// Size: 0x0018 (0x000328 - 0x000340)
class APaladinAICharacterController : public AAIController
{ 
public:
	float                                              AlertTimeOutTime;                                           // 0x0328   (0x0004)  
	float                                              AlertToAttackTime;                                          // 0x032C   (0x0004)  
	SDK_UNDEFINED(16,1502) /* FMulticastInlineDelegate */ __um(FinishSkillPerfom);                                 // 0x0330   (0x0010)  


	/// Functions
	// Function /Script/Pal7.PaladinAICharacterController.TryPerformSkills
	// bool TryPerformSkills();                                                                                              // [0xe4c370] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAICharacterController.StopBehaviorTree
	// void StopBehaviorTree();                                                                                              // [0xe4c110] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAICharacterController.SetEnemyPawn
	// void SetEnemyPawn(class APawn* InPawn);                                                                               // [0xe4bed0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAICharacterController.GetEnemyPawn
	// class APawn* GetEnemyPawn();                                                                                          // [0xe4b100] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinAICharacterController.FixAttackDirection
	// void FixAttackDirection();                                                                                            // [0xe4ad80] Final|Native|Public|BlueprintCallable 
};

/// Struct /Script/Pal7.SleepLODInfo
/// Size: 0x0030 (0x000000 - 0x000030)
struct FSleepLODInfo
{ 
	FName                                              LODKey;                                                     // 0x0000   (0x0008)  
	FName                                              LODDesc;                                                    // 0x0008   (0x0008)  
	float                                              Distance;                                                   // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	FPaladinNPCEnableComposite                         SleepEnableComposite;                                       // 0x0018   (0x0018)  
};

/// Class /Script/Pal7.PaladinAISleepComponent
/// Size: 0x0080 (0x0000B0 - 0x000130)
class UPaladinAISleepComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,1503) /* FMulticastInlineDelegate */ __um(OnSleepLODChanged);                                 // 0x00B0   (0x0010)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x00C0   (0x0008)  MISSED
	TArray<FSleepLODInfo>                              SleepLODs;                                                  // 0x00C8   (0x0010)  
	FName                                              SleepConfigKey;                                             // 0x00D8   (0x0008)  
	float                                              SleepTimerInterval;                                         // 0x00E0   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4C];                                      // 0x00E4   (0x004C)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinAISleepComponent.IsActiveSleep
	// bool IsActiveSleep();                                                                                                 // [0xe4b310] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinAISleepComponent.GetDistanceToHero
	// float GetDistanceToHero();                                                                                            // [0xe4b0d0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinAISleepComponent.GetCurrentLODInfo
	// FSleepLODInfo GetCurrentLODInfo();                                                                                    // [0xe4af60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinAISleepComponent.GetCurrentLODIndex
	// int32_t GetCurrentLODIndex();                                                                                         // [0xe4af40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinAISleepComponent.CheckSleepInternal
	// void CheckSleepInternal();                                                                                            // [0xe4ab10] Final|Native|Public  
	// Function /Script/Pal7.PaladinAISleepComponent.ActiveSleep
	// void ActiveSleep(bool bActive);                                                                                       // [0xe4a2c0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinAmbientSound
/// Size: 0x0010 (0x000228 - 0x000238)
class APaladinAmbientSound : public AAmbientSound
{ 
public:
	bool                                               IsActive;                                                   // 0x0228   (0x0001)  
	bool                                               BattleBGM;                                                  // 0x0229   (0x0001)  
	bool                                               DefaultBGM;                                                 // 0x022A   (0x0001)  
	unsigned char                                      UnknownData00_6[0xD];                                       // 0x022B   (0x000D)  MISSED
};

/// Struct /Script/Pal7.PaladinAnimalAnimSequenceInfo
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPaladinAnimalAnimSequenceInfo
{ 
	class UAnimSequence*                               AnimSequence;                                               // 0x0000   (0x0008)  
	float                                              BlendInTime;                                                // 0x0008   (0x0004)  
	float                                              BlendOutTime;                                               // 0x000C   (0x0004)  
};

/// Class /Script/Pal7.PaladinAnimalBase
/// Size: 0x0070 (0x000550 - 0x0005C0)
class APaladinAnimalBase : public APaladinNPC
{ 
public:
	class USkeletalMeshComponent*                      Head;                                                       // 0x0548   (0x0008)  
	class USkeletalMeshComponent*                      Clothes;                                                    // 0x0550   (0x0008)  
	class USkeletalMeshComponent*                      Pants;                                                      // 0x0558   (0x0008)  
	EAnimalNPCState                                    AnimalState;                                                // 0x0560   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0561   (0x0003)  MISSED
	FVector                                            SpawnPos;                                                   // 0x0564   (0x000C)  
	float                                              ActiveRadius;                                               // 0x0570   (0x0004)  
	bool                                               CanScared;                                                  // 0x0574   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0575   (0x0003)  MISSED
	float                                              MaxScaredDistance;                                          // 0x0578   (0x0004)  
	bool                                               CanAround;                                                  // 0x057C   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x057D   (0x0003)  MISSED
	float                                              AroundDistance;                                             // 0x0580   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x0584   (0x0004)  MISSED
	TArray<FPaladinAnimalAnimSequenceInfo>             IdleActions;                                                // 0x0588   (0x0010)  
	TArray<FPaladinAnimalAnimSequenceInfo>             AroundActions;                                              // 0x0598   (0x0010)  
	float                                              WalkSpeed;                                                  // 0x05A8   (0x0004)  
	float                                              ScaredSpeed;                                                // 0x05AC   (0x0004)  
	float                                              AroundSpeed;                                                // 0x05B0   (0x0004)  
	unsigned char                                      UnknownData04_6[0xC];                                       // 0x05B4   (0x000C)  MISSED
};

/// Class /Script/Pal7.PaladinAnimalController
/// Size: 0x0000 (0x000328 - 0x000328)
class APaladinAnimalController : public AAIController
{ 
public:
};

/// Class /Script/Pal7.PaladinAnimalRadiusComponent
/// Size: 0x0000 (0x000410 - 0x000410)
class UPaladinAnimalRadiusComponent : public UPrimitiveComponent
{ 
public:
};

/// Class /Script/Pal7.PaladinAnimationHelperBase
/// Size: 0x0010 (0x0000B0 - 0x0000C0)
class UPaladinAnimationHelperBase : public UActorComponent
{ 
public:
	bool                                               bNeedBlend;                                                 // 0x00B0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x00B1   (0x0003)  MISSED
	float                                              DirectionInterpSpeed;                                       // 0x00B4   (0x0004)  
	float                                              VelocityInterpSpeed;                                        // 0x00B8   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x00BC   (0x0004)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinAnimationHelperBase.UpdateVelocity
	// void UpdateVelocity(bool& bIsFalling, FVector& NewVelocity, float& NewSpeed);                                         // [0xe4c4a0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinAnimationHelperBase.GetNewDirection
	// void GetNewDirection(float& InOutDirection);                                                                          // [0xe4b240] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinAnimBlueprintLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladinAnimBlueprintLibrary : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinAnimBlueprintLibrary.GetBlendSpaceMaxXValue
	// void GetBlendSpaceMaxXValue(class UBlendSpaceBase* BlendSpace, float& MaxXValue);                                     // [0xe4adf0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinAnimInstance
/// Size: 0x0000 (0x000270 - 0x000270)
class UPaladinAnimInstance : public UAnimInstance
{ 
public:
};

/// Class /Script/Pal7.PaladinEnemyAnimInstance
/// Size: 0x0020 (0x000270 - 0x000290)
class UPaladinEnemyAnimInstance : public UPaladinAnimInstance
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x0268   (0x0004)  MISSED
	float                                              Speed;                                                      // 0x026C   (0x0004)  
	float                                              Direction;                                                  // 0x0270   (0x0004)  
	EMonsteraAnimStateNormal                           AnimState;                                                  // 0x0274   (0x0001)  
	EMonsterSpeedMode                                  SpeedMode;                                                  // 0x0275   (0x0001)  
	bool                                               bNeedHover;                                                 // 0x0276   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x0277   (0x0001)  MISSED
	float                                              IdleDeltaMaxTime;                                           // 0x0278   (0x0004)  
	float                                              MinTurnSpeed;                                               // 0x027C   (0x0004)  
	float                                              MaxTurnSpeed;                                               // 0x0280   (0x0004)  
	float                                              MinRotationRate;                                            // 0x0284   (0x0004)  
	float                                              MaxRotationRate;                                            // 0x0288   (0x0004)  
	float                                              DirectionInterpSpeed;                                       // 0x028C   (0x0004)  


	/// Functions
	// Function /Script/Pal7.PaladinEnemyAnimInstance.UpdateRotationRate
	// void UpdateRotationRate(float DeltaTime);                                                                             // [0xe4c420] Final|Native|Private 
	// Function /Script/Pal7.PaladinEnemyAnimInstance.SpeedUpdate
	// void SpeedUpdate();                                                                                                   // [0xe4c0d0] Final|Native|Private 
	// Function /Script/Pal7.PaladinEnemyAnimInstance.SetSpeedMode
	// void SetSpeedMode(EMonsterSpeedMode Mode);                                                                            // [0xe4c050] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemyAnimInstance.SetAnimState
	// void SetAnimState(EMonsteraAnimStateNormal State);                                                                    // [0xe4bb40] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemyAnimInstance.GetSpeedMode
	// EMonsterSpeedMode GetSpeedMode();                                                                                     // [0xe4b2e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemyAnimInstance.GetAnimState
	// EMonsteraAnimStateNormal GetAnimState();                                                                              // [0xe4ada0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEnemyAnimInstance.DirectionUpdate
	// void DirectionUpdate(float DeltaSeconds);                                                                             // [0xe4ab60] Final|Native|Private 
	// Function /Script/Pal7.PaladinEnemyAnimInstance.AnimStateUpdate
	// void AnimStateUpdate(float DeltaSeconds);                                                                             // [0xe4a480] Final|Native|Private 
};

/// Class /Script/Pal7.PaladinHeroAnimInstance
/// Size: 0x00A0 (0x000270 - 0x000310)
class UPaladinHeroAnimInstance : public UPaladinAnimInstance
{ 
public:
	float                                              Speed;                                                      // 0x0268   (0x0004)  
	float                                              FallSpeed;                                                  // 0x026C   (0x0004)  
	float                                              VelocityZ;                                                  // 0x0270   (0x0004)  
	float                                              FallingTime;                                                // 0x0274   (0x0004)  
	float                                              Direction;                                                  // 0x0278   (0x0004)  
	bool                                               IsDead;                                                     // 0x027C   (0x0001)  
	bool                                               IsInAir;                                                    // 0x027D   (0x0001)  
	bool                                               MovementInput;                                              // 0x027E   (0x0001)  
	bool                                               Sprinting;                                                  // 0x027F   (0x0001)  
	float                                              LargeScaleDirection;                                        // 0x0280   (0x0004)  
	bool                                               ActorIsMainController;                                      // 0x0284   (0x0001)  
	SDK_UNDEFINED(1,1504) /* TEnumAsByte<EMovementMode> */ __um(MovementMode);                                     // 0x0285   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0286   (0x0002)  MISSED
	float                                              LeanRotation;                                               // 0x0288   (0x0004)  
	float                                              PreviousSpeed;                                              // 0x028C   (0x0004)  
	bool                                               PlayLeiSureAnimation;                                       // 0x0290   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0291   (0x0003)  MISSED
	float                                              IdleTime;                                                   // 0x0294   (0x0004)  
	bool                                               WeapononBody;                                               // 0x0298   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0299   (0x0003)  MISSED
	float                                              PelvisZOffset;                                              // 0x029C   (0x0004)  
	FVector                                            RightFootEffectorLocation;                                  // 0x02A0   (0x000C)  
	FVector                                            LeftFootEffectorLocation;                                   // 0x02AC   (0x000C)  
	FRotator                                           LeftFootRota;                                               // 0x02B8   (0x000C)  
	FRotator                                           RightFootRota;                                              // 0x02C4   (0x000C)  
	bool                                               SequenceIsPlaying;                                          // 0x02D0   (0x0001)  
	bool                                               bLookingAtTarget;                                           // 0x02D1   (0x0001)  
	unsigned char                                      UnknownData03_5[0x2];                                       // 0x02D2   (0x0002)  MISSED
	FVector                                            LookAtTarget;                                               // 0x02D4   (0x000C)  
	float                                              CurrentAcclerationVal;                                      // 0x02E0   (0x0004)  
	bool                                               bIsPhotoModeAnim;                                           // 0x02E4   (0x0001)  
	bool                                               bIsPhotoModeFace;                                           // 0x02E5   (0x0001)  
	unsigned char                                      UnknownData04_6[0x2A];                                      // 0x02E6   (0x002A)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinHeroAnimInstance.EndLookAt
	// void EndLookAt();                                                                                                     // [0xe4ac20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroAnimInstance.BeginLookAt
	// void BeginLookAt(FVector InLookAtTarget);                                                                             // [0xe4a520] Final|Native|Public|HasDefaults|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinArtBlueprintLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladinArtBlueprintLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Pal7.PaladinAssetManager
/// Size: 0x0000 (0x000488 - 0x000488)
class UPaladinAssetManager : public UAssetManager
{ 
public:
};

/// Struct /Script/Pal7.AtomSelectorLabel
/// Size: 0x0020 (0x000000 - 0x000020)
struct FAtomSelectorLabel
{ 
	SDK_UNDEFINED(16,1505) /* FString */               __um(Selector);                                             // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,1506) /* FString */               __um(Label);                                                // 0x0010   (0x0010)  
};

/// Class /Script/Pal7.PaladinAtomSound
/// Size: 0x0068 (0x000228 - 0x000290)
class APaladinAtomSound : public AAtomSound
{ 
public:
	EAudioType                                         AudioType;                                                  // 0x0228   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0229   (0x0007)  MISSED
	FAtomSelectorLabel                                 DefaultSelectorLabel;                                       // 0x0230   (0x0020)  
	unsigned char                                      UnknownData01_5[0x20];                                      // 0x0250   (0x0020)  MISSED
	bool                                               IsBossBattleBGM : 1;                                        // 0x0270:0 (0x0001)  
	unsigned char                                      UnknownData02_4[0x3];                                       // 0x0271   (0x0003)  MISSED
	EBossBattleName                                    BossBattleName;                                             // 0x0274   (0x0001)  
	unsigned char                                      UnknownData03_5[0x13];                                      // 0x0275   (0x0013)  MISSED
	class UShapeComponent*                             VolumeRangeComponent;                                       // 0x0288   (0x0008)  


	/// Functions
	// Function /Script/Pal7.PaladinAtomSound.SetAtomEnable
	// void SetAtomEnable(bool bInEnable);                                                                                   // [0xe4bbc0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAtomSound.ReceiveSwitchHeroEvent
	// void ReceiveSwitchHeroEvent(class APaladinHero* From, class APaladinHero* to);                                        // [0xe4b890] Final|Native|Public  
	// Function /Script/Pal7.PaladinAtomSound.EndOverlap
	// void EndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // [0xe4ac40] Final|Native|Public  
	// Function /Script/Pal7.PaladinAtomSound.BeginOverlap
	// void BeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0xe4a5b0] Final|Native|Public|HasOutParms 
	// Function /Script/Pal7.PaladinAtomSound.BeginLevelBGM
	// void BeginLevelBGM();                                                                                                 // [0xe4a500] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinAudioManager
/// Size: 0x0328 (0x000028 - 0x000350)
class UPaladinAudioManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x28];                                      // 0x0000   (0x0028)  MISSED
	TArray<class APaladinAtomSound*>                   EnvironmentSounds;                                          // 0x0028   (0x0010)  
	TArray<class APaladinAtomSound*>                   BossBattleBGMSounds;                                        // 0x0038   (0x0010)  
	class APaladinAtomSound*                           CurrentAgentSound;                                          // 0x0048   (0x0008)  
	class APaladinAtomSound*                           CurrentBossSound;                                           // 0x0050   (0x0008)  
	unsigned char                                      UnknownData01_5[0x48];                                      // 0x0058   (0x0048)  MISSED
	SDK_UNDEFINED(80,1507) /* TMap<AudioType, FCategoryNames> */ __um(SoundCategoryNames);                         // 0x00A0   (0x0050)  
	SDK_UNDEFINED(80,1508) /* TMap<AudioType, FString> */ __um(SoundAisacControlName);                             // 0x00F0   (0x0050)  
	SDK_UNDEFINED(80,1509) /* TMap<FString, UAtomComponent*> */ __um(ActionAtomComps);                             // 0x0140   (0x0050)  
	class UAtomComponent*                              LevelBGM;                                                   // 0x0190   (0x0008)  
	class APaladinAtomSound*                           LevelDefaultBGMAgent;                                       // 0x0198   (0x0008)  
	class APaladinAtomSound*                           BGMAgent;                                                   // 0x01A0   (0x0008)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x01A8   (0x0008)  MISSED
	SDK_UNDEFINED(16,1510) /* FString */               __um(CurAudioVolumeCategory);                               // 0x01B0   (0x0010)  
	unsigned char                                      UnknownData03_5[0x8];                                       // 0x01C0   (0x0008)  MISSED
	SDK_UNDEFINED(80,1511) /* TMap<APaladinAtomSound*, float> */ __um(PauseTimeBoss);                              // 0x01C8   (0x0050)  
	SDK_UNDEFINED(80,1512) /* TMap<APaladinAtomSound*, float> */ __um(PauseTimeEnv);                               // 0x0218   (0x0050)  
	SDK_UNDEFINED(80,1513) /* TMap<UAtomComponent*, float> */ __um(PauseTimeAction);                               // 0x0268   (0x0050)  
	unsigned char                                      UnknownData04_6[0x98];                                      // 0x02B8   (0x0098)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinAudioManager.UnRegistNewCustomControlledEffectSound
	// void UnRegistNewCustomControlledEffectSound(FName SoundKey);                                                          // [0xe4c3a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAudioManager.TriggerDspBusSnapshot
	// void TriggerDspBusSnapshot(class AActor* Volume, FString SnapshotName, int32_t MilliSeconds, bool IsApply);           // [0xe4c1e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAudioManager.StopCurPlayingBGM
	// void StopCurPlayingBGM();                                                                                             // [0xe4c130] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/Pal7.PaladinAudioManager.SetLevelDefaultBGMAgent
	// void SetLevelDefaultBGMAgent(class APaladinAtomSound* Agent);                                                         // [0xe4bfd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAudioManager.SetGameControlledVolume
	// void SetGameControlledVolume(float Volume);                                                                           // [0xe4bf50] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAudioManager.SetCurAudioVolumeCategory
	// void SetCurAudioVolumeCategory(FString NewCategory);                                                                  // [0xe4bdf0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAudioManager.SetBlockChangeVolumeSound
	// void SetBlockChangeVolumeSound(bool bBlockChangeVolumeSound);                                                         // [0xe4bd60] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAudioManager.SetBGMAgent
	// void SetBGMAgent(class APaladinAtomSound* Agent);                                                                     // [0xe4bce0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAudioManager.RestartLevelBGM
	// void RestartLevelBGM();                                                                                               // [0xe4bb20] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/Pal7.PaladinAudioManager.RemoveActionCompFromList
	// void RemoveActionCompFromList(FString ID);                                                                            // [0xe4ba10] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAudioManager.RegistNewCustomControlledEffectSound
	// void RegistNewCustomControlledEffectSound(FName SoundKey, class UAtomComponent* NewAtom);                             // [0xe4b950] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAudioManager.PlayBossBattleBGMBySource
	// void PlayBossBattleBGMBySource(class USoundAtomCue* BGMSrc, EBossBattleName BattleName);                              // [0xe4b7d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAudioManager.PlayBossBattleBGM
	// void PlayBossBattleBGM(bool InOrOutBossBattle, EBossBattleName BattleName);                                           // [0xe4b710] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAudioManager.Pause
	// void Pause(bool bPause, float Duration);                                                                              // [0xe4b640] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAudioManager.OnSetGameVolume
	// void OnSetGameVolume(ESoundVolumeControlType SoundType);                                                              // [0xe4b5c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAudioManager.OnChangeVoiceVolume
	// void OnChangeVoiceVolume();                                                                                           // [0xe4b5a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAudioManager.OnChangeMusicVolume
	// void OnChangeMusicVolume();                                                                                           // [0xe4b580] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAudioManager.OnChangeLevel
	// void OnChangeLevel(FName CurrentLevel);                                                                               // [0xe4b500] Final|Native|Public  
	// Function /Script/Pal7.PaladinAudioManager.OnChangeGlobalVolume
	// void OnChangeGlobalVolume();                                                                                          // [0xe4b4e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAudioManager.OnChangeEffectVolume
	// void OnChangeEffectVolume();                                                                                          // [0xe4b4c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAudioManager.MuteSceneBGM
	// void MuteSceneBGM(bool bInMute);                                                                                      // [0xe4b430] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAudioManager.K2_ChangeBGM
	// void K2_ChangeBGM(bool Enforce, bool AutoPlay);                                                                       // [0xe4b360] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAudioManager.IsCurrentBossBGM
	// bool IsCurrentBossBGM();                                                                                              // [0xe4b330] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinAudioManager.GetLevelDefaultBGMAgent
	// class APaladinAtomSound* GetLevelDefaultBGMAgent();                                                                   // [0xe4b220] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinAudioManager.GetLevelBGMByAgent
	// class UAtomComponent* GetLevelBGMByAgent(class APaladinAtomSound* Agent, bool IsDefaultLevelBGM);                     // [0xe4b150] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAudioManager.GetLevelBGM
	// class UAtomComponent* GetLevelBGM();                                                                                  // [0xe4b130] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinAudioManager.GetCustomControlledEffectSound
	// class UAtomComponent* GetCustomControlledEffectSound(FName SoundKey);                                                 // [0xe4b040] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAudioManager.GetCurrentAudioChannel
	// EAudioChannelType GetCurrentAudioChannel();                                                                           // [0xe4af20] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinAudioManager.GetCurAudioVolumeCategory
	// FString GetCurAudioVolumeCategory();                                                                                  // [0xe4aef0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAudioManager.GetBlockChangeVolumeSound
	// bool GetBlockChangeVolumeSound();                                                                                     // [0xe4aec0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinAudioManager.GetBGMAgent
	// class APaladinAtomSound* GetBGMAgent();                                                                               // [0xe4add0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinAudioManager.ClearLevelName
	// void ClearLevelName();                                                                                                // [0xe4ab30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAudioManager.ChangeLevelBGMSoundBlock
	// void ChangeLevelBGMSoundBlock(int32_t NextBlock, bool bChangeNow);                                                    // [0xe4aa50] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/Pal7.PaladinAudioManager.ChangeBossSoundSelector
	// void ChangeBossSoundSelector(EBossBattleName BattleName, FAtomSelectorLabel NewSelectorLabel);                        // [0xe4a8f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAudioManager.ChangeBossSoundBlock
	// void ChangeBossSoundBlock(EBossBattleName BattleName, int32_t NextBlock, bool bChangeNow);                            // [0xe4a7e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinAudioManager.AddActionCompToList
	// void AddActionCompToList(FString ID, class UAtomComponent* Comp);                                                     // [0xe4a350] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinAudioVolumeInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladinAudioVolumeInterface : public UInterface
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinAudioVolumeInterface.ReceiveSwitchHeroEvent
	// void ReceiveSwitchHeroEvent(class APaladinHero* From, class APaladinHero* to);                                        // [0xe5b840] Native|Public        
	// Function /Script/Pal7.PaladinAudioVolumeInterface.OnAfterChangeLevel
	// void OnAfterChangeLevel();                                                                                            // [0xe5a540] Native|Public        
};

/// Class /Script/Pal7.PaladinAutoSaveComponent
/// Size: 0x0020 (0x0000B0 - 0x0000D0)
class UPaladinAutoSaveComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_3[0x10];                                      // 0x00B0   (0x0010)  MISSED
	FTimerHandle                                       AutoSaveTimer;                                              // 0x00C0   (0x0008)  
	FTimerHandle                                       CheckPlayModeTimer;                                         // 0x00C8   (0x0008)  


	/// Functions
	// Function /Script/Pal7.PaladinAutoSaveComponent.OnPlaymodeChanged
	// void OnPlaymodeChanged(FName PlayMode);                                                                               // [0xe5a600] Final|Native|Public  
	// Function /Script/Pal7.PaladinAutoSaveComponent.DoCheckPlayMode
	// void DoCheckPlayMode();                                                                                               // [0xe536d0] Final|Native|Private 
	// Function /Script/Pal7.PaladinAutoSaveComponent.DoAutoSaveTask
	// void DoAutoSaveTask();                                                                                                // [0xe536b0] Final|Native|Private 
};

/// Class /Script/Pal7.PaladinAvatarNPCInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladinAvatarNPCInterface : public UInterface
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinAvatarNPCInterface.GetWalkAnimation
	// class UAnimSequenceBase* GetWalkAnimation();                                                                          // [0xe58e80] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinAvatarNPCInterface.GetStandAnimation
	// class UAnimSequenceBase* GetStandAnimation();                                                                         // [0xe58a20] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinAvatarNPCInterface.GetFaceAnimation
	// class UAnimSequenceBase* GetFaceAnimation();                                                                          // [0xe56400] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinAvatarNPCInterface.GetCurrentSpeed
	// float GetCurrentSpeed();                                                                                              // [0xe55cc0] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinAvatarNPCInterface.GetBaseSpeed
	// float GetBaseSpeed();                                                                                                 // [0xe554d0] Native|Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/Pal7.PaladinBaseAttrSet
/// Size: 0x00B8 (0x000030 - 0x0000E8)
class UPaladinBaseAttrSet : public UPaladinASBase
{ 
public:
	float                                              CharacterLevel;                                             // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0034   (0x0004)  MISSED
	FGameplayAttributeData                             HP;                                                         // 0x0038   (0x0010)  
	FGameplayAttributeData                             HPMAX;                                                      // 0x0048   (0x0010)  
	FGameplayAttributeData                             MP;                                                         // 0x0058   (0x0010)  
	FGameplayAttributeData                             HPRegenPer5Sec;                                             // 0x0068   (0x0010)  
	FGameplayAttributeData                             MPRegenPer5Sec;                                             // 0x0078   (0x0010)  
	FGameplayAttributeData                             MPCostRatio;                                                // 0x0088   (0x0010)  
	FGameplayAttributeData                             MPMAX;                                                      // 0x0098   (0x0010)  
	FGameplayAttributeData                             PhysicalAtk;                                                // 0x00A8   (0x0010)  
	FGameplayAttributeData                             PhysicalDef;                                                // 0x00B8   (0x0010)  
	FGameplayAttributeData                             SpellAtk;                                                   // 0x00C8   (0x0010)  
	FGameplayAttributeData                             SpellDef;                                                   // 0x00D8   (0x0010)  
};

/// Struct /Script/Pal7.SequenceBindingOverrideData
/// Size: 0x0040 (0x000000 - 0x000040)
struct FSequenceBindingOverrideData
{ 
	SDK_UNDEFINED(16,1514) /* FString */               __um(ObjectBindingName);                                    // 0x0000   (0x0010)  
	FGuid                                              SequenceObjectGuid;                                         // 0x0010   (0x0010)  
	bool                                               UseActorID;                                                 // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0021   (0x0003)  MISSED
	FName                                              ActorID;                                                    // 0x0024   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x002C   (0x0004)  MISSED
	class AActor*                                      BindingActor;                                               // 0x0030   (0x0008)  
	bool                                               bOverridesDefault;                                          // 0x0038   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0039   (0x0007)  MISSED
};

/// Struct /Script/Pal7.PaladinMoveSceneSequencePlaybackSettings
/// Size: 0x00B8 (0x000018 - 0x0000D0)
struct FPaladinMoveSceneSequencePlaybackSettings : FMovieSceneSequencePlaybackSettings
{ 
	class UPaladinSequencePresetAsset*                 PresetAsset;                                                // 0x0018   (0x0008)  
	bool                                               bOverrideOriginTransform;                                   // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_5[0xF];                                       // 0x0021   (0x000F)  MISSED
	FTransform                                         OriginTransform;                                            // 0x0030   (0x0030)  
	FViewTargetTransitionParams                        FadeInTransitionParams;                                     // 0x0060   (0x0010)  
	FViewTargetTransitionParams                        FadeOutTransitionParams;                                    // 0x0070   (0x0010)  
	TArray<class UPaladinAction*>                      PrePaladinActions;                                          // 0x0080   (0x0010)  
	TArray<class UPaladinAction*>                      PostPaladinActions;                                         // 0x0090   (0x0010)  
	TArray<FSequenceBindingOverrideData>               BindingData;                                                // 0x00A0   (0x0010)  
	bool                                               bPushPlayMode : 1;                                          // 0x00B0:0 (0x0001)  
	bool                                               bPopPlayMode : 1;                                           // 0x00B0:1 (0x0001)  
	bool                                               bUseCustomPlayMode : 1;                                     // 0x00B0:2 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x00B1   (0x0003)  MISSED
	FName                                              CustomPlayMode;                                             // 0x00B4   (0x0008)  
	bool                                               HideGameAudio;                                              // 0x00BC   (0x0001)  
	bool                                               ResumeGameAudio;                                            // 0x00BD   (0x0001)  
	bool                                               RestartLevelBMG;                                            // 0x00BE   (0x0001)  
	bool                                               bMuteAudioWhileLoading;                                     // 0x00BF   (0x0001)  
	bool                                               bUnmuteAudioAfterEnd;                                       // 0x00C0   (0x0001)  
	bool                                               bReleaseLoadedSequence;                                     // 0x00C1   (0x0001)  
	unsigned char                                      UnknownData02_5[0x2];                                       // 0x00C2   (0x0002)  MISSED
	FName                                              MemoryName;                                                 // 0x00C4   (0x0008)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x00CC   (0x0004)  MISSED
};

/// Class /Script/Pal7.PaladinBattleVoiceManager
/// Size: 0x0240 (0x0000B0 - 0x0002F0)
class UPaladinBattleVoiceManager : public UActorComponent
{ 
public:
	SDK_UNDEFINED(40,1515) /* TWeakObjectPtr<UDataTable*> */ __um(ChangePlayerVoiceConfig);                        // 0x00B0   (0x0028)  
	SDK_UNDEFINED(40,1516) /* TWeakObjectPtr<UDataTable*> */ __um(RespawnPlayerVoiceConfig);                       // 0x00D8   (0x0028)  
	SDK_UNDEFINED(40,1517) /* TWeakObjectPtr<UDataTable*> */ __um(PartnerEncourageVoiceConfig);                    // 0x0100   (0x0028)  
	SDK_UNDEFINED(40,1518) /* TWeakObjectPtr<UDataTable*> */ __um(PartnerWorryVoiceConfig);                        // 0x0128   (0x0028)  
	float                                              WorryVoiceTriggerHPPercent;                                 // 0x0150   (0x0004)  
	float                                              WorryVoiceTriggerCDTime;                                    // 0x0154   (0x0004)  
	SDK_UNDEFINED(40,1519) /* TWeakObjectPtr<UDataTable*> */ __um(BattleEndVoiceConfig);                           // 0x0158   (0x0028)  
	float                                              BattleEndTriggerProbable;                                   // 0x0180   (0x0004)  
	float                                              BattleEndTriggerCDTime;                                     // 0x0184   (0x0004)  
	SDK_UNDEFINED(40,1520) /* TWeakObjectPtr<UDataTable*> */ __um(MonsterInBattleVoiceConfig);                     // 0x0188   (0x0028)  
	float                                              MonsterInBattleVoiceCDTime;                                 // 0x01B0   (0x0004)  
	unsigned char                                      UnknownData00_5[0xC];                                       // 0x01B4   (0x000C)  MISSED
	FPaladinMoveSceneSequencePlaybackSettings          PaladinPlaybackSettings;                                    // 0x01C0   (0x00D0)  
	TArray<EBossBattleName>                            BlockChangePlayerVoiceBossBattleName;                       // 0x0290   (0x0010)  
	TArray<EBossBattleName>                            BlockPlayerDieRespawnVoiceBossBattleName;                   // 0x02A0   (0x0010)  
	TArray<EBossBattleName>                            BlockEnCourageVoiceBossBattleName;                          // 0x02B0   (0x0010)  
	unsigned char                                      UnknownData01_6[0x30];                                      // 0x02C0   (0x0030)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinBattleVoiceManager.ReceiveEnemyBeKilled
	// void ReceiveEnemyBeKilled(class APaladinHero* Killer, class APaladinEnemy* KilledEnemy);                              // [0xe5b780] Final|Native|Private 
	// Function /Script/Pal7.PaladinBattleVoiceManager.IsBattleVoiceTypeEnabled
	// bool IsBattleVoiceTypeEnabled(EBattleVoiceType TypeChannel);                                                          // [0xe596f0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBattleVoiceManager.HandlePlayerRespawn
	// void HandlePlayerRespawn(EPaladinHeroName HeroName);                                                                  // [0xe591c0] Final|Native|Private 
	// Function /Script/Pal7.PaladinBattleVoiceManager.HandlePlayerDie
	// void HandlePlayerDie(EPaladinHeroName HeroName);                                                                      // [0xe59140] Final|Native|Private 
	// Function /Script/Pal7.PaladinBattleVoiceManager.GetBattleVoiceManager
	// class UPaladinBattleVoiceManager* GetBattleVoiceManager();                                                            // [0xe55500] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBattleVoiceManager.BlockBattleVoiceByType
	// void BlockBattleVoiceByType(EBattleVoiceType TypeChannel, bool bBlock);                                               // [0xe52280] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBattleVoiceManager.BlockBattleSpeach
	// void BlockBattleSpeach(bool bBLockSpeach);                                                                            // [0xe52200] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinBlueprintLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladinBlueprintLibrary : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinBlueprintLibrary.WorldPointToCameraSpace
	// FVector4 WorldPointToCameraSpace(FVector CameraLocation, FRotator CameraRotator, FMatrix ProjectionMatrix, FVector Point); // [0xe5e730] Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.UpdateBossChallengeBestTime
	// void UpdateBossChallengeBestTime(class UObject* WorldContextObject, EBossBattleName Name, float Time);                // [0xe5e630] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.UnLoadAsset
	// void UnLoadAsset(TWeakObjectPtr<UObject*> Asset);                                                                     // [0xe5e520] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.TriggerQuestTags
	// void TriggerQuestTags(TArray<FGameplayTag>& Tags, bool bAddTag);                                                      // [0xe5e430] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.TriggerQuestTagContainer
	// void TriggerQuestTagContainer(FGameplayTagContainer Tags, bool bAddTag);                                              // [0xe5e320] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.TriggerQuestTag
	// void TriggerQuestTag(FGameplayTag Tag, bool bAddTag);                                                                 // [0xe5e260] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.TransPlayerAndPartners
	// void TransPlayerAndPartners(class AActor* TargetLocation, class UObject* WorldContextObject);                         // [0xe5e130] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.TransferToNearestLandPoint
	// bool TransferToNearestLandPoint(class UObject* WorldContextObject);                                                   // [0xe5e1e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.TransCharacterToTaskOwner
	// TScriptInterface<Class> TransCharacterToTaskOwner(class APaladinCharacterBase* Character);                            // [0xe5e0a0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.ToggleVolumetricFog
	// void ToggleVolumetricFog(bool bOpenFog);                                                                              // [0xe5e020] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.ToggleMotionBlur
	// void ToggleMotionBlur(bool bOpenBlur);                                                                                // [0xe5dfa0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.ToggleAllEnemeyState
	// void ToggleAllEnemeyState(class UObject* WorldContextObject, EEnemyState NewState);                                   // [0xe5def0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.StreamingForceGC
	// void StreamingForceGC(bool gc);                                                                                       // [0xe5de70] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.StopWatch_Stop
	// float StopWatch_Stop();                                                                                               // [0xe5de40] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.StopWatch_Run
	// void StopWatch_Run();                                                                                                 // [0xe5de20] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.StartAutoSave
	// void StartAutoSave(class UObject* WorldContextObject, bool bSkipPlaymodeCheck);                                       // [0xe5dd60] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.SpawnSoundAttached
	// class UAtomComponent* SpawnSoundAttached(class USoundAtomCue* Sound, class USceneComponent* AttachToComponent, FName AttachPointName, FVector Location, FRotator Rotation, AudioType Type, TEnumAsByte<EAttachLocation> LocationType, bool bStopWhenAttachedToDestroyed, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, class USoundConcurrency* ConcurrencySettings, bool bAutoDestroy); // [0xe5d990] Final|Native|Static|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.SpawnSoundAtLocation
	// class UAtomComponent* SpawnSoundAtLocation(class UObject* WorldContextObject, class USoundAtomCue* Sound, FVector Location, FRotator Rotation, AudioType Type, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, class USoundConcurrency* ConcurrencySettings, bool bAutoDestroy); // [0xe5d680] Final|Native|Static|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.SpawnSound2D
	// class UAtomComponent* SpawnSound2D(class UObject* WorldContextObject, class USoundAtomCue* Sound, AudioType Type, float VolumeMultiplier, float PitchMultiplier, float StartTime); // [0xe5d4d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.SimpleApplyEffectContainer
	// void SimpleApplyEffectContainer(FPaladinFilterAndEffectsContainer& FilterAndEffectsContainer, FGameplayAbilityTargetDataHandle& TargetDataHandle); // [0xe5d320] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.ShouldProbabilityTrigger
	// bool ShouldProbabilityTrigger(FDynamicProbilityContainer& Container, FName TargetProb);                               // [0xe5d140] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.ShouldPopSSDWarning
	// bool ShouldPopSSDWarning();                                                                                           // [0xe5d110] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.SetPointLightCastDynamicShadow
	// void SetPointLightCastDynamicShadow(class UPointLightComponent* LightCMP, bool bCastDynamicShadow);                   // [0xe5d050] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.SetMouseAbsolutePosition
	// void SetMouseAbsolutePosition(FVector2D AbsolutePos);                                                                 // [0xe5cfe0] Final|Native|Static|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.SetLightAffectWorld
	// void SetLightAffectWorld(class ULightComponent* LightCMP, bool bAffectWorld);                                         // [0xe5cf20] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.SetFilterWorldOrientation
	// FPaladinFilterAndEffectsContainer SetFilterWorldOrientation(FPaladinFilterAndEffectsContainer& FilterAndEffectsContainer, FRotator InWorldOrientation); // [0xe5cdf0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.SetFilterEffectDirection
	// FPaladinFilterAndEffectsContainer SetFilterEffectDirection(FPaladinFilterAndEffectsContainer& FilterAndEffectsContainer, FVector_NetQuantizeNormal InDirection); // [0xe5ccc0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.SetFilterContextOrigin
	// FPaladinFilterAndEffectsContainer SetFilterContextOrigin(FPaladinFilterAndEffectsContainer& FilterAndEffectsContainer, FVector InOrigin); // [0xe5cb90] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.SetFilterContextInstigator
	// FPaladinFilterAndEffectsContainer SetFilterContextInstigator(FPaladinFilterAndEffectsContainer& FilterAndEffectsContainer, class AActor* InInstigator, class AActor* InEffectCauser); // [0xe5ca40] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.SetFilterContextHitResult
	// FPaladinFilterAndEffectsContainer SetFilterContextHitResult(FPaladinFilterAndEffectsContainer& FilterAndEffectsContainer, FHitResult& InHitResult); // [0xe5c8c0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.SetFilterContextAbility
	// FPaladinFilterAndEffectsContainer SetFilterContextAbility(FPaladinFilterAndEffectsContainer& FilterAndEffectsContainer, class UGameplayAbility* Ability); // [0xe5c7a0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.SetCanBeLock
	// void SetCanBeLock(FCanLockPart& LockPart, bool CanBeLock);                                                            // [0xe5c6b0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.SetAssetsChunkIDsByConfig
	// void SetAssetsChunkIDsByConfig();                                                                                     // [0xe5c690] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.SelectBool
	// bool SelectBool(bool A, bool B, bool bPickA);                                                                         // [0xe5c580] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.SegmentIntersection2D
	// bool SegmentIntersection2D(FVector SegmentStartA, FVector SegmentEndA, FVector SegmentStartB, FVector SegmentEndB, FVector& out_IntersectionPoint); // [0xe5c3b0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.SaveTexture2DToDisk
	// void SaveTexture2DToDisk(class UTexture2D* PTexture, FString Filename);                                               // [0xe5c2a0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.SaveRenderTargetToDisk
	// bool SaveRenderTargetToDisk(class UTextureRenderTarget2D* InRenderTarget, FString Filename);                          // [0xe5c180] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.ResetActorLevel
	// void ResetActorLevel(class AActor* TargetActor, class AActor* TargetLevelActor);                                      // [0xe5c0d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.RenameLevelActor
	// void RenameLevelActor(class AActor* TargetActor, FName NewName);                                                      // [0xe5c020] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.RemoveLevelTag
	// void RemoveLevelTag(class UObject* WorldContextObject, FGameplayTag& Tag);                                            // [0xe5bf60] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.RemoveGameplayCue
	// void RemoveGameplayCue(class UAbilitySystemComponent* InASC, FGameplayTag GameplayCueTag);                            // [0xe5beb0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.ReleasePaladinCharacter
	// void ReleasePaladinCharacter(class APaladinCharacterBase* Target);                                                    // [0xe5be40] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.RecoveryTagByPIDForSavegameObj
	// void RecoveryTagByPIDForSavegameObj(class UPaladinSaveGame* SavegameObj, FGameplayTag Tag, bool Add, FName PID, bool IsMainQuest, FName QuestID, FString NodeGuid); // [0xe5bb60] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.RecoveryItemByPIDForSavegameObj
	// void RecoveryItemByPIDForSavegameObj(class UPaladinSaveGame* SavegameObj, int32_t ItemId, FName PID, int32_t LeastCount, int32_t MostCount, bool IsMainQuest, FName BasePID); // [0xe5b970] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.RecordTargetMiniGame
	// void RecordTargetMiniGame(FGameplayTag MiniGameTag);                                                                  // [0xe5b900] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.PrintMeshDistanceFactor
	// void PrintMeshDistanceFactor(class UObject* WorldContextObject, class USkeletalMeshComponent* MeshIns, float PrintSeconds); // [0xe5b680] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.PopupMessageInEditor
	// void PopupMessageInEditor(class UObject* WorldContextObject, FText InMessage, float InFadeInDuration, float InFadeOutDuration, float InExpireDuration); // [0xe5b4b0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.ParaseSelectItemData
	// void ParaseSelectItemData(TArray<UObject*> PickObects, class UClass* ComponentClass, FString& OutString);             // [0xe5b330] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.ParasePickUpItemData
	// void ParasePickUpItemData(TArray<AActor*> Actors, FString& OutString);                                                // [0xe5b1f0] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.ParaseAbiliyData
	// bool ParaseAbiliyData(class UDataTable* _AbilityDataTable, FString& OutString);                                       // [0xe5b100] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.PalSetSKMMaterial
	// void PalSetSKMMaterial(class USkeletalMeshComponent* SKMCom, class UMaterialInstance* Material);                      // [0xe5a680] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.PaladinWorldToScreen
	// bool PaladinWorldToScreen(class UObject* WorldContextObject, FVector& WorldPosition, FVector2D& ScreenPosition, bool& Back); // [0xe5afa0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.PaladinSetMaxFPS
	// void PaladinSetMaxFPS(float MaxFPS);                                                                                  // [0xe5af30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.PaladinProjectPointToNav
	// bool PaladinProjectPointToNav(class UObject* WorldContextObject, FVector& Point, FVector& ProjectedLocation, class ANavigationData* NavData); // [0xe5add0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.PaladinPlayDynamicMontage
	// void PaladinPlayDynamicMontage(class UObject* WorldContextObject, class UAnimInstance* AnimInstance, class UAnimSequenceBase* AnimSequence, FName SlotName, float BlendInTime, float BlendOutTime, FLatentActionInfo LatentInfo); // [0xe5abb0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.PaladinMergeSKelatalMesh
	// bool PaladinMergeSKelatalMesh(class USkeletalMesh*& OutMergeMesh, TArray<USkeletalMesh*>& InSrcMeshList, TMap<FName, FSkeletalMaterial>& OverrideMaterialsMap); // [0xe5a960] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.PaladinGotoTransform
	// void PaladinGotoTransform(class UObject* WorldContextObject, class AActor* Actor, FTransform& targetTransform, float Duration, FLatentActionInfo LatentInfo); // [0xe5a760] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.PaladinGetMaxFPS
	// float PaladinGetMaxFPS();                                                                                             // [0xe5a730] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.MultiCulture
	// void MultiCulture(EPaladinGameCulture& Result);                                                                       // [0xe5a4c0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.MergeSKelatalMeshComponentMesh
	// bool MergeSKelatalMeshComponentMesh(class USkeletalMesh*& OutMergeMesh, TArray<USkeletalMeshComponent*>& InSrcMeshCMPList); // [0xe5a3c0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.MergeSKelatalMesh
	// bool MergeSKelatalMesh(class USkeletalMesh*& OutMergeMesh, TArray<USkeletalMesh*>& InSrcMeshList, TArray<FMergeSKMeshOverrideMaterials>& OverrideMaterials); // [0xe5a230] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.MakeSlateBrushFromPaladinSoftCfg
	// FSlateBrush MakeSlateBrushFromPaladinSoftCfg(FPaladinSlateBrushWithSoftPtr Cfg);                                      // [0xe5a040] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.LogAbilityData
	// void LogAbilityData(FString Target, FString Module, FString Source, FString AbilityName, float Magnitude, float Duration); // [0xe59d60] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.LoadArchiveHelperDataToManager
	// bool LoadArchiveHelperDataToManager(FName ArchiveKey);                                                                // [0xe59c60] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.K2_FlushPressedKeys
	// void K2_FlushPressedKeys(class APlayerController* Controller);                                                        // [0x76f6c0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.K2_AddOnScreenDebugMessage
	// void K2_AddOnScreenDebugMessage(class UObject* WorldContextObject, FColor Color, FString String, float Time, bool bUseHashUnique); // [0xe59a90] Final|Native|Static|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.IsWithEditor
	// bool IsWithEditor();                                                                                                  // [0x780e50] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.IsTouchMode
	// bool IsTouchMode(class UObject* WorldContextObject);                                                                  // [0xe59a10] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.IsShipping
	// bool IsShipping();                                                                                                    // [0xe599e0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.IsQuestTagExist
	// bool IsQuestTagExist(class UObject* WorldContextObject, FGameplayTag Tag);                                            // [0xe59920] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.IsQuestTagContainerExist
	// bool IsQuestTagContainerExist(class UObject* WorldContextObject, FGameplayTagContainer TagContainer);                 // [0xe59800] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.IsPaladinXBox
	// bool IsPaladinXBox();                                                                                                 // [0x780e50] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.IsPaladinSteamDeck
	// bool IsPaladinSteamDeck();                                                                                            // [0xe597d0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.IsPaladinPS
	// bool IsPaladinPS();                                                                                                   // [0x780e50] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.IsPaladinConsole
	// bool IsPaladinConsole();                                                                                              // [0x780e50] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.IsGamepadAcceptKeyUseBottomKey
	// bool IsGamepadAcceptKeyUseBottomKey();                                                                                // [0xe597a0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.ISDX12RHI
	// bool ISDX12RHI();                                                                                                     // [0xe596c0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.IsCookerLoadingPackage
	// bool IsCookerLoadingPackage();                                                                                        // [0xe59780] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.IsCloudGame
	// bool IsCloudGame();                                                                                                   // [0x780e50] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.HerosRemoveAutoActivateAbilityGE
	// void HerosRemoveAutoActivateAbilityGE(class UObject* WorldContextObject, class UClass* GE);                           // [0xe59610] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.HerosReceiveAutoActivateAbilityGE
	// void HerosReceiveAutoActivateAbilityGE(class UObject* WorldContextObject, class UClass* GE);                          // [0xe59560] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.HerosReceiveAIGE
	// void HerosReceiveAIGE(class UClass* GE, float Duration, class UObject* WorldContextObject);                           // [0xe59460] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.HasWorldOrientation
	// bool HasWorldOrientation(FGameplayCueParameters Parameters);                                                          // [0xe592c0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.HasTargetMiniGameRecord
	// bool HasTargetMiniGameRecord(FGameplayTag MiniGameTag);                                                               // [0xe59240] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GiveAndActivateAbilityByASC
	// void GiveAndActivateAbilityByASC(class UAbilitySystemComponent* ASC, class UClass* AbilityClass);                     // [0xe59090] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetWorldOrientation
	// FRotator GetWorldOrientation(FGameplayCueParameters Parameters);                                                      // [0xe58ee0] Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetWorldMapManager
	// class UPaladinWorldMapManagerComponent* GetWorldMapManager();                                                         // [0xe58eb0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetValueNearestToGivenInArray
	// FName GetValueNearestToGivenInArray(TArray<FName>& Arr, float GivenValue);                                            // [0xe58d90] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetUIPropertyValue
	// int32_t GetUIPropertyValue(EUIProperty PropertyEnum);                                                                 // [0xe58d10] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetUINotifyContainer
	// class UPaladinGameUINotifyContainer* GetUINotifyContainer();                                                          // [0xe58ce0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetUIManager
	// class UPaladinUIManager* GetUIManager();                                                                              // [0xe58cb0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetTimeText
	// FString GetTimeText(FDateTime Time);                                                                                  // [0xe58bf0] Final|Native|Static|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetTextSourceString
	// FString GetTextSourceString(FText& Text);                                                                             // [0xe58b00] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetSuperHeroManager
	// class UPaladinSuperHeroManagerComponent* GetSuperHeroManager();                                                       // [0xe58ad0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetStaticAsset
	// class UObject* GetStaticAsset(FName Key);                                                                             // [0xe58a50] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetSortedAutoSaveIndexs
	// void GetSortedAutoSaveIndexs(TArray<int32_t>& OutIndexs);                                                             // [0xe58980] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetSlotMetaByIndex
	// bool GetSlotMetaByIndex(int32_t& SlotIndex, FPaladinSlotMetaData& OutSlotData);                                       // [0xe58770] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetShowTipsData
	// bool GetShowTipsData(class UObject* WorldContextObject, FName TipsDataID, FPaladinShowTipsTableRow& OutRow);          // [0xe585c0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetSettingsManager
	// class UPaladinSettingsManager* GetSettingsManager();                                                                  // [0xe58590] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetScenenAtmosphereModifyManager
	// class UPaladinSceneAtmosphereManager* GetScenenAtmosphereModifyManager();                                             // [0xe58560] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetSaveIndexRange
	// void GetSaveIndexRange(int32_t& MinIndex, int32_t& MaxIndex);                                                         // [0xe58480] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetSaveGameManager
	// class UPaladinSaveGameManager* GetSaveGameManager();                                                                  // [0xe58450] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetRuntimeActorManager
	// class UPaladinRuntimeActorManager* GetRuntimeActorManager();                                                          // [0xe58420] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetRealTimeSeconds
	// float GetRealTimeSeconds(class UObject* WorldContextObject);                                                          // [0xe58390] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetRandPoseInBoxVolumRange
	// FVector GetRandPoseInBoxVolumRange(class ATriggerBox* VolumActor);                                                    // [0xe58300] Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetRandPoseInBoxRange
	// FVector GetRandPoseInBoxRange(class UBoxComponent* BoxCollisionComponent);                                            // [0xe58270] Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetQuestProcessIDManager
	// class UPaladinQuestProcessIDManager* GetQuestProcessIDManager();                                                      // [0xe58240] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetQuestPIDValue
	// int32_t GetQuestPIDValue(class UObject* WorldContextObject, FName QuestID);                                           // [0xe58180] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetQuestPID
	// FName GetQuestPID(class UObject* WorldContextObject, FName QuestID);                                                  // [0xe580c0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetQuestManager
	// class UPaladinQuestManagerComponent* GetQuestManager();                                                               // [0xe58090] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetQTEManager
	// class UPaladinQTEManager* GetQTEManager();                                                                            // [0xe58060] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetPuzzleManager
	// class UPaladinPuzzleManager* GetPuzzleManager();                                                                      // [0xe58030] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetProfessionalModeleEnabled
	// ESlateVisibility GetProfessionalModeleEnabled();                                                                      // [0xe58000] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetPlayModeManager
	// class UPaladinPlayModeManager* GetPlayModeManager();                                                                  // [0xe57f20] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetPlayerControlledHeroInFighting
	// class APaladinHero* GetPlayerControlledHeroInFighting(class UObject* Caller);                                         // [0xe57f80] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetPlayerCameraManager
	// class APaladinPlayerCameraManager* GetPlayerCameraManager();                                                          // [0xe57f50] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetPIDValueByPID
	// int32_t GetPIDValueByPID(class UObject* WorldContextObject, FName PID);                                               // [0xe57670] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetPhotoManager
	// class UPaladinPhotoManager* GetPhotoManager();                                                                        // [0xe57ef0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetPetManager
	// class UPaladinPetManager* GetPetManager();                                                                            // [0xe57ec0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetPartnerFollowManager
	// class UPartnerFollowManager* GetPartnerFollowManager();                                                               // [0xe57e90] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetPartnerFightingManager
	// class UPartnerFightingManager* GetPartnerFightingManager();                                                           // [0xe57e60] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetPalPlayerController
	// class APaladinPlayerControllerBase* GetPalPlayerController();                                                         // [0xe57900] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetPalGameMode
	// class APaladinGame* GetPalGameMode(class UObject* WorldContextObject);                                                // [0xe57880] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetPaladinSingleton
	// class UPaladinGlobals* GetPaladinSingleton();                                                                         // [0xe57e30] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetPaladinPlayerController
	// class APaladinPlayerController* GetPaladinPlayerController(class UObject* WorldContextObject);                        // [0xe57bc0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetPaladinMaxLockDis
	// float GetPaladinMaxLockDis(ELockType Type);                                                                           // [0xe57db0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetPaladinHeroSkillLocation
	// bool GetPaladinHeroSkillLocation(class APaladinHero* Hero, FLockTargetSet InLockTargetSet, FVector& SkillLocation);   // [0xe57c70] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetPaladinGlobalEffectManager
	// class UPaladinGlobalSpecialEffectManagerComponent* GetPaladinGlobalEffectManager();                                   // [0xe57c40] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetPaladinFightPlayerController
	// class APaladinPlayerController* GetPaladinFightPlayerController(class UObject* WorldContextObject);                   // [0xe57bc0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetPaladinCurrentCulture
	// EPaladinGameCulture GetPaladinCurrentCulture();                                                                       // [0xe57b90] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetPaladinActorInfo
	// bool GetPaladinActorInfo(FName& ActorID, FPaladinRTActorInfo& OutActorInfo);                                          // [0xe57a10] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetPaladinActor
	// bool GetPaladinActor(FName& ActorID, class AActor*& OutActor);                                                        // [0xe57930] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetPalAbilityDataRow
	// bool GetPalAbilityDataRow(class UDataTable* Table, FName RowName, FPaladinAbilityDataRow& OutRow);                    // [0xe57730] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetOpenFunctionManager
	// class UPaladinOpenFunction* GetOpenFunctionManager();                                                                 // [0xe57640] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetNormalMonsterClass
	// class UClass* GetNormalMonsterClass();                                                                                // [0xe57610] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetMouseAbsolutePosition
	// void GetMouseAbsolutePosition(FVector2D& MousePos);                                                                   // [0xe57590] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetMonsterFightManager
	// class UPaladinMonsterFightingManagerComponent* GetMonsterFightManager();                                              // [0xe57560] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetMonsterClassByType
	// class UClass* GetMonsterClassByType(class UObject* WorldContextObject, EMonsterKind MonsterType);                     // [0xe574a0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetMonsterBaseClass
	// class UClass* GetMonsterBaseClass();                                                                                  // [0xe57470] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetMaxTimeRemainGameplayEffectInfo
	// FActiveGameplayEffectHandle GetMaxTimeRemainGameplayEffectInfo(class UObject* WorldContextObject, TArray<FActiveGameplayEffectHandle>& ActiveGameplayEffectHandles, float& OutRemainDuractionPerceptage); // [0xe57330] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetManualSaveIndexRange
	// void GetManualSaveIndexRange(int32_t& MinIndex, int32_t& MaxIndex);                                                   // [0xe57250] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetLoginLevel
	// bool GetLoginLevel(FGameplayTag& QueryTag, TWeakObjectPtr<UWorld*>& OutMapSoftPtr, class UObject* WorldContextObject); // [0xe570f0] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetLockTargetSetLocation
	// FVector GetLockTargetSetLocation(FLockTargetSet& LockTarget);                                                         // [0xe57040] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetLockTargetLockOffset
	// float GetLockTargetLockOffset(FLockTargetSet& LockTarget);                                                            // [0xe56fa0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetLoadedBehaviourTreeRefFromMonsterInfo
	// class UBehaviorTree* GetLoadedBehaviourTreeRefFromMonsterInfo(FMonsterInfo& Info);                                    // [0xe56ed0] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetLoadedAttackMontageFromMonsterInfo
	// class UAnimMontage* GetLoadedAttackMontageFromMonsterInfo(FMonsterInfo& Info);                                        // [0xe56e00] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetLevelStreamingManager
	// class UPaladinLeveStreamingManagerComponent* GetLevelStreamingManager();                                              // [0xe56dd0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetLevelName
	// FString GetLevelName(class AActor* SelfActor);                                                                        // [0xe56d00] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetLevelLoginTag
	// bool GetLevelLoginTag(FGameplayTag& OutTag, FName LevelID, class UObject* WorldContextObject);                        // [0xe56bf0] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetJointstrikeManager
	// class UPaladinJointstrikeManager* GetJointstrikeManager();                                                            // [0xe56bc0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetItemManager
	// class UPaladinItemManager* GetItemManager();                                                                          // [0xe56b90] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetInteractionManager
	// class UPaladinInteractionManagerComponent* GetInteractionManager();                                                   // [0xe56b60] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetHeroManager
	// class UPaladinHeroManagerComponent* GetHeroManager();                                                                 // [0xe56b30] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetHeroGearedWeaponMesh
	// void GetHeroGearedWeaponMesh(EPaladinHeroName HeroName, class USkeletalMesh*& OutWeapon, class USkeletalMesh*& OutCover); // [0xe56a10] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetGuideManager
	// class APaladinGuideManager* GetGuideManager();                                                                        // [0xe569e0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetGroudPoint
	// bool GetGroudPoint(class UObject* WorldContextObject, FVector Point, ETraceTypeQuery TraceChannel, FVector& GroundPoint, float ZLimitedValue); // [0xe56810] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetGrantedGameplayEffectActiveHandle
	// FActiveGameplayEffectHandle GetGrantedGameplayEffectActiveHandle(class UGameplayAbility* Ability);                    // [0xe56780] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetGPUInfo
	// FPaladinGPUInfo GetGPUInfo();                                                                                         // [0xe56530] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetGPUDriverInfoString
	// FString GetGPUDriverInfoString();                                                                                     // [0xe564b0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetGameLastSlotMeta
	// bool GetGameLastSlotMeta(int32_t& OutSlotIndex, FPaladinSlotMetaData& OutMetaData);                                   // [0xe56570] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetFightGameState
	// class APaladinFightGameState* GetFightGameState(class UObject* WorldContextObject);                                   // [0xe56430] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetEffectDirectionFromGameplayCueParam
	// bool GetEffectDirectionFromGameplayCueParam(FGameplayCueParameters Parameters, FVector& OutDirection);                // [0xe56210] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetEffectDirectionFromEffectContext
	// bool GetEffectDirectionFromEffectContext(FGameplayEffectContextHandle EffectContextHandle, FVector& OutDirection);    // [0xe560d0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetDialogueManager
	// class UPaladinDialogueManager* GetDialogueManager(class UObject* WorldContextObject);                                 // [0xe56050] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetDebugSwitchValue
	// bool GetDebugSwitchValue(FName Key);                                                                                  // [0xe55fd0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetDebugSwitchAndTextColor
	// bool GetDebugSwitchAndTextColor(FName Key, FColor& Color);                                                            // [0xe55f00] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetCurrentViewTargetViewInfo
	// FMinimalViewInfo GetCurrentViewTargetViewInfo(class APlayerController* InPlayerController);                           // [0xe55d70] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetCurrentViewTargetActor
	// class AActor* GetCurrentViewTargetActor(class APlayerController* InPlayerController);                                 // [0xe55cf0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetCurrentMoveTracWorldRotation
	// bool GetCurrentMoveTracWorldRotation(class APlayerController* InPlayerController, class UCameraAnim* Anim, FRotator& OutRot); // [0xe55bb0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetCurrentLoadedLevelID
	// FName GetCurrentLoadedLevelID(class UObject* WorldContextObject);                                                     // [0xe55b20] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetCurrentLevelName
	// FString GetCurrentLevelName(class UObject* WorldContextObject);                                                       // [0xe55a50] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetCurrentLastNeedCompilePSOS
	// int32_t GetCurrentLastNeedCompilePSOS();                                                                              // [0xe55a20] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetCurrentBossInFighting
	// class APaladinBossMonsterBase* GetCurrentBossInFighting(class UObject* WorldContextObject);                           // [0xe559a0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetConstantValue
	// FString GetConstantValue(FName Key);                                                                                  // [0xe558d0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetConditionManager
	// class UPaladinConditionManager* GetConditionManager(class UObject* WorldContextObject);                               // [0xe55850] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetCauserByEffectSpec
	// class AActor* GetCauserByEffectSpec(FGameplayEffectSpec& Spec);                                                       // [0xe55780] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetCanBeLock
	// bool GetCanBeLock(FCanLockPart& LockPart);                                                                            // [0xe556d0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetBubbleManager
	// class UPaladinBubbleManager* GetBubbleManager();                                                                      // [0xe556a0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetBPTargetComponnents
	// void GetBPTargetComponnents(class UObject* TargetIn, class UClass* ClassName, TArray<UActorComponent*>& OutCMP);      // [0xe553b0] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetBossChallengeValidTimeCount
	// int32_t GetBossChallengeValidTimeCount(class UObject* WorldContextObject);                                            // [0xe55620] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetBossChallengeBestTime
	// float GetBossChallengeBestTime(class UObject* WorldContextObject, EBossBattleName Name);                              // [0xe55560] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetBossBaseClass
	// class UClass* GetBossBaseClass();                                                                                     // [0xe55530] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetAutoSaveIndexRange
	// void GetAutoSaveIndexRange(int32_t& MinIndex, int32_t& MaxIndex);                                                     // [0xe552d0] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetAutoSaveIndexNum
	// int32_t GetAutoSaveIndexNum();                                                                                        // [0xe552b0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetAudioManager
	// class UPaladinAudioManager* GetAudioManager(class UObject* WorldContextObject);                                       // [0xe55230] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetAttributeNameByAttribute
	// FString GetAttributeNameByAttribute(FGameplayAttribute Attributetype);                                                // [0xe55030] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetAllActorsByXXX
	// bool GetAllActorsByXXX(class UObject* WorldContextObject, class UClass* ActorClass, FName ActorTag, bool bFindInStreamingLevels, TArray<AActor*>& FoundActors); // [0xe53f00] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetAIBuffByGameDifficulty
	// class UClass* GetAIBuffByGameDifficulty();                                                                            // [0xe54d50] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetActorsByXXX
	// bool GetActorsByXXX(class UObject* WorldContextObject, class UClass* ActorClass, FName ActorTag, bool bFindInStreamingLevels, TArray<AActor*>& FoundActors); // [0xe54ea0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.GetActorDistanceToCollision
	// void GetActorDistanceToCollision(class AActor* TargetActor, FVector& Point, FVector& ClosestPointOnCollision);        // [0xe54d90] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.FormatSequenceBindingText
	// void FormatSequenceBindingText(FText BindingText, FString& OutGuid);                                                  // [0xe54c10] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.FindSpriteByNumberNameAndValue
	// class UPaperSprite* FindSpriteByNumberNameAndValue(FString NumberName, int32_t value, FVector2D& SourceDimension);    // [0xe54af0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.FindLevelData
	// bool FindLevelData(class UObject* WorldContextObject, FName ID, FPaladinLevelData& OutData);                          // [0xe548d0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.FindDefaultKeySettingByEventName
	// bool FindDefaultKeySettingByEventName(EPaladinKeyEventName EventName, FPaladinDefaultKeySetting& OutDefaultKeySetting); // [0xe54670] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.FindCombineKeySettingsByEventName
	// bool FindCombineKeySettingsByEventName(EPaladinKeyEventName EventName, FPaladinDefaultKeySetting& ParentKeySetting, FPaladinDefaultKeySetting& ChildKeySetting); // [0xe54200] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.FindCanLockPartWithName
	// bool FindCanLockPartWithName(TArray<FCanLockPart> CanLockParts, FName SocketName, float& LockOffset);                 // [0xe54090] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.FindAllActorsByXXX
	// bool FindAllActorsByXXX(class UObject* WorldContextObject, class UClass* ActorClass, FName ActorTag, bool bFindInStreamingLevels, TArray<AActor*>& FoundActors); // [0xe53f00] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.FindActorsByXXX
	// bool FindActorsByXXX(class UObject* WorldContextObject, class UClass* ActorClass, FName ActorTag, bool bFindInStreamingLevels, TArray<AActor*>& FoundActors); // [0xe53f00] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.FilterHitReult
	// bool FilterHitReult(FHitResult HitResult, FGameplayTargetDataFilterHandle FilterHandle);                              // [0xe53d60] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.ExistLevelTag
	// bool ExistLevelTag(class UObject* WorldContextObject, FGameplayTag& Tag);                                             // [0xe53c90] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.ExecuteGameplayCue_WithEffectContext
	// void ExecuteGameplayCue_WithEffectContext(class UAbilitySystemComponent* InASC, FGameplayTag GameplayCueTag, FGameplayEffectContextHandle EffectContext); // [0xe53b30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.ExecuteGameplayCue_WithCueParam
	// void ExecuteGameplayCue_WithCueParam(class UAbilitySystemComponent* InASC, FGameplayTag GameplayCueTag, FGameplayCueParameters& GameplayCueParameters); // [0xe53950] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.EvaluateBezier
	// float EvaluateBezier(FVector Vert1, FVector controlpoint1, FVector controlpoint2, FVector Vert2, int32_t NumPoints, TArray<FVector>& OutPoints); // [0xe53730] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.DebugPrintAbilityTargetDataHandle
	// void DebugPrintAbilityTargetDataHandle(FGameplayAbilityTargetDataHandle& TargetData);                                 // [0xe53590] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.CreateTextureFromViewport
	// bool CreateTextureFromViewport();                                                                                     // [0xe53560] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.CreateSummonHeroPlayer
	// class UPaladinLevelSequencePlayer* CreateSummonHeroPlayer(class UObject* WorldContextObject, class UClass* SuperHeroClass, class ULevelSequence* InLevelSequence, FPaladinMoveSceneSequencePlaybackSettings PaladinSettings, class APaladinLevelSequenceActor*& OutActor); // [0xe53240] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.CreateEnemyInsByType
	// class APaladinEnemy* CreateEnemyInsByType(class UObject* WorldContextObject, EMonsterKind MonsterType, int32_t MonsterLevel, FName GroupName, FTransform Trans); // [0xe53070] Final|Native|Static|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.CreateEnemyInsByClass
	// class APaladinEnemy* CreateEnemyInsByClass(class UObject* WorldContextObject, class UClass* MonsterClass, int32_t MonsterLevel, FName GroupName, FTransform Trans); // [0xe52ea0] Final|Native|Static|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.ConvertStringToInt
	// int32_t ConvertStringToInt(FString inString);                                                                         // [0xe52dc0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.ConvertNumberToCharacterArray
	// TArray<int32_t> ConvertNumberToCharacterArray(int32_t value);                                                         // [0xe52d00] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.Conv_FVectorToNetVector
	// FVector_NetQuantize10 Conv_FVectorToNetVector(FVector InVec);                                                         // [0xe52c60] Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.Conv_FVectorToNetNormal
	// FVector_NetQuantizeNormal Conv_FVectorToNetNormal(FVector InVec);                                                     // [0xe52c60] Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.Conv_FVectorFromNetVector
	// FVector Conv_FVectorFromNetVector(FVector_NetQuantize10 InVec);                                                       // [0xe52c60] Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.Conv_FVectoFromNetNormal
	// FVector Conv_FVectoFromNetNormal(FVector_NetQuantizeNormal InVec);                                                    // [0xe52c60] Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.ControlSpawnedForSequenceBinding
	// void ControlSpawnedForSequenceBinding(class ULevelSequencePlayer* SequencePlayer, FMovieSceneObjectBindingID Binding, bool bNeedSpawn); // [0xe52b30] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.CheckCanGameDebugPrint
	// bool CheckCanGameDebugPrint();                                                                                        // [0x780e50] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.CheckAllFiltersOnTarget
	// bool CheckAllFiltersOnTarget(FPaladinFilterAndEffectsContainer& FilterAndEffectsContainer, class AActor* TargetActor, TArray<FGameplayEffectSpecHandle>& PassedEffectSpecHandles); // [0xe52970] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.ChangeEffectInstigator
	// FGameplayEffectSpecHandle ChangeEffectInstigator(FGameplayEffectSpecHandle SpecHandle, class AActor* Actor);          // [0xe527e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.CanPointReachableTwoPoint
	// bool CanPointReachableTwoPoint(FVector& TargetPoint1, FVector& TargetPoint2, class UClass* FilterClass);              // [0xe526c0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.CanPointReachable
	// bool CanPointReachable(class APawn* AIOwner, FVector& TargetPoint, class UClass* FilterClass);                        // [0xe525b0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.CanPlayerSeeTargetPoint
	// bool CanPlayerSeeTargetPoint(class AActor* SelfActor, FVector TargetPoint, float DistanceCannotSee);                  // [0xe52490] Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.CallCustomEvent
	// void CallCustomEvent(class AActor* Obj, FName customEventName);                                                       // [0xe523e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.BezierInterpVector
	// void BezierInterpVector(FVector Start, FVector End, FVector Control, float Alpha, FVector& Out);                      // [0xe52050] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.ApplyTeamEffect
	// FActiveGameplayEffectHandle ApplyTeamEffect(class UClass* GameplayEffectClass, FGameplayTag EffectMarkTag, float Magnitude, float Duration); // [0xe51f10] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.ApplyGamePlayEffectToSelfWithSetByCaller
	// void ApplyGamePlayEffectToSelfWithSetByCaller(FGameplayEffectSpecHandle EffectSpecHandle, TMap<FGameplayTag, float> SetByCallerParam, class UAbilitySystemComponent* TargetASC); // [0xe51b60] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.ApplyGameplayEffectsToTarget
	// void ApplyGameplayEffectsToTarget(TArray<FGameplayEffectSpecHandle>& GameplayEffectSpecHandles, class AActor* TargetActor); // [0xe51de0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.ApplyEffectContainerAndUseUniqueInfo
	// void ApplyEffectContainerAndUseUniqueInfo(FPaladinFilterAndEffectsContainer& FilterAndEffectsContainer, FGameplayAbilityTargetDataHandle& TargetDataHandle, bool bHasDefaultOrigin, FVector DefaultOriginLoc, bool bHasOverrideOrigin, FVector OverrideOriginLoc, bool bHasDefaultHitResult, FHitResult DefaultHitResult, bool bHasOverrideHitResult, FHitResult OverrideHitResult, bool bHasWorldOrientation, FRotator InWorldOrientation); // [0xe51550] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.AppendResArrayWithOrder
	// void AppendResArrayWithOrder(TArray<FIntPoint>& Target, TArray<FIntPoint>& Into);                                     // [0xe51440] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.AnimationIsCompatibleWithSkeMesh
	// bool AnimationIsCompatibleWithSkeMesh(class USkeletalMeshComponent* skeMesh, class UAnimationAsset* Animation);       // [0xe51380] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinBlueprintLibrary.AllHerosRecovery
	// void AllHerosRecovery();                                                                                              // [0xe51360] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.AddLevelTag
	// void AddLevelTag(class UObject* WorldContextObject, FGameplayTag& Tag);                                               // [0xe512a0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.AddGameplayCue
	// void AddGameplayCue(class UAbilitySystemComponent* InASC, FGameplayTag GameplayCueTag, FGameplayEffectContextHandle EffectContext); // [0xe51140] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBlueprintLibrary.ActivateOverlapTrigger
	// void ActivateOverlapTrigger(class UObject* WorldContextObject);                                                       // [0xe510d0] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinBoxAudioVolume
/// Size: 0x0048 (0x000228 - 0x000270)
class APaladinBoxAudioVolume : public ATriggerBox
{ 
public:
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x0228   (0x0008)  MISSED
	class APaladinAtomSound*                           AgentSound;                                                 // 0x0230   (0x0008)  
	bool                                               bIsLevelBGMVolume;                                          // 0x0238   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0239   (0x0007)  MISSED
	FAtomSelectorLabel                                 AgentSelectorLabel;                                         // 0x0240   (0x0020)  
	SDK_UNDEFINED(16,1521) /* FString */               __um(AudioVolumeCategory);                                  // 0x0260   (0x0010)  


	/// Functions
	// Function /Script/Pal7.PaladinBoxAudioVolume.EndOverlap
	// void EndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // [0xe61820] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBoxAudioVolume.BeginOverlap
	// void BeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0xe612b0] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinBTDecorator
/// Size: 0x0038 (0x000068 - 0x0000A0)
class UPaladinBTDecorator : public UBTDecorator
{ 
public:
	class AAIController*                               AIOwner;                                                    // 0x0068   (0x0008)  
	class AActor*                                      ActorOwner;                                                 // 0x0070   (0x0008)  
	TArray<FName>                                      ObservedKeyNames;                                           // 0x0078   (0x0010)  
	unsigned char                                      UnknownData00_5[0x10];                                      // 0x0088   (0x0010)  MISSED
	bool                                               bShowPropertyDetails : 1;                                   // 0x0098:0 (0x0001)  
	bool                                               bCheckConditionOnlyBlackBoardChanges : 1;                   // 0x0098:1 (0x0001)  
	bool                                               bIsObservingBB : 1;                                         // 0x0098:2 (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0099   (0x0007)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinBTDecorator.ReceiveTickAI
	// void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);            // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinBTDecorator.ReceiveTick
	// void ReceiveTick(class AActor* OwnerActor, float DeltaSeconds);                                                       // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinBTDecorator.ReceiveObserverDeactivatedAI
	// void ReceiveObserverDeactivatedAI(class AAIController* OwnerController, class APawn* ControlledPawn);                 // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinBTDecorator.ReceiveObserverDeactivated
	// void ReceiveObserverDeactivated(class AActor* OwnerActor);                                                            // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinBTDecorator.ReceiveObserverActivatedAI
	// void ReceiveObserverActivatedAI(class AAIController* OwnerController, class APawn* ControlledPawn);                   // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinBTDecorator.ReceiveObserverActivated
	// void ReceiveObserverActivated(class AActor* OwnerActor);                                                              // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinBTDecorator.ReceiveExecutionStartAI
	// void ReceiveExecutionStartAI(class AAIController* OwnerController, class APawn* ControlledPawn);                      // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinBTDecorator.ReceiveExecutionStart
	// void ReceiveExecutionStart(class AActor* OwnerActor);                                                                 // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinBTDecorator.ReceiveExecutionFinishAI
	// void ReceiveExecutionFinishAI(class AAIController* OwnerController, class APawn* ControlledPawn, TEnumAsByte<EBTNodeResult> NodeResult); // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinBTDecorator.ReceiveExecutionFinish
	// void ReceiveExecutionFinish(class AActor* OwnerActor, TEnumAsByte<EBTNodeResult> NodeResult);                         // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinBTDecorator.PerformConditionCheckAI
	// bool PerformConditionCheckAI(class AAIController* OwnerController, class APawn* ControlledPawn);                      // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinBTDecorator.PerformConditionCheck
	// bool PerformConditionCheck(class AActor* OwnerActor);                                                                 // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinBTDecorator.IsDecoratorObserverActive
	// bool IsDecoratorObserverActive();                                                                                     // [0xe620d0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinBTDecorator.IsDecoratorExecutionActive
	// bool IsDecoratorExecutionActive();                                                                                    // [0xe620a0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinBTDecorator.CheckAbort
	// void CheckAbort();                                                                                                    // [0xe616f0] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinBubbleConfigInfo
/// Size: 0x0010 (0x000028 - 0x000038)
class UPaladinBubbleConfigInfo : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x28];                                      // 0x0000   (0x0028)  MISSED
	class UDataTable*                                  BubbleAsset;                                                // 0x0028   (0x0008)  
	class UPaladinCondition*                           Condition;                                                  // 0x0030   (0x0008)  
};

/// Class /Script/Pal7.BubbleNode
/// Size: 0x0090 (0x000028 - 0x0000B8)
class UBubbleNode : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x28];                                      // 0x0000   (0x0028)  MISSED
	bool                                               bIsRootNode : 1;                                            // 0x0028:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x0029   (0x0003)  MISSED
	FGuid                                              NodeGuid;                                                   // 0x002C   (0x0010)  
	FVector2D                                          Coordinates;                                                // 0x003C   (0x0008)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0044   (0x0004)  MISSED
	TArray<class UBubbleNode*>                         Links;                                                      // 0x0048   (0x0010)  
	FName                                              ActorID;                                                    // 0x0058   (0x0008)  
	SDK_UNDEFINED(24,1522) /* FText */                 __um(Content);                                              // 0x0060   (0x0018)  
	float                                              Duration;                                                   // 0x0078   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x007C   (0x0004)  MISSED
	TArray<class UPaladinCondition*>                   Conditions;                                                 // 0x0080   (0x0010)  
	TArray<class UPaladinAction*>                      Actions;                                                    // 0x0090   (0x0010)  
	class USoundAtomCue*                               SoundAtom;                                                  // 0x00A0   (0x0008)  
	bool                                               bCustomSoundAttenuation : 1;                                // 0x00A8:0 (0x0001)  
	unsigned char                                      UnknownData04_4[0x7];                                       // 0x00A9   (0x0007)  MISSED
	class USoundAttenuation*                           AttenuationSettings;                                        // 0x00B0   (0x0008)  
};

/// Class /Script/Pal7.PaladinBubble
/// Size: 0x0018 (0x000030 - 0x000048)
class UPaladinBubble : public UDataAsset
{ 
public:
	class UBubbleNode*                                 RootNode;                                                   // 0x0030   (0x0008)  
	TArray<class UBubbleNode*>                         Data;                                                       // 0x0038   (0x0010)  


	/// Functions
	// Function /Script/Pal7.PaladinBubble.SortLinkNodes
	// void SortLinkNodes();                                                                                                 // [0xe62520] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinBubbleComponent
/// Size: 0x0040 (0x0000B0 - 0x0000F0)
class UPaladinBubbleComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_3[0x10];                                      // 0x00B0   (0x0010)  MISSED
	bool                                               bActiveBubble : 1;                                          // 0x00C0:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x7];                                       // 0x00C1   (0x0007)  MISSED
	class UPaladinBubble*                              BubbleAsset;                                                // 0x00C8   (0x0008)  
	float                                              BubbleTraceRange;                                           // 0x00D0   (0x0004)  
	float                                              BubbleSleepTime;                                            // 0x00D4   (0x0004)  
	FName                                              ShowBubblePointText;                                        // 0x00D8   (0x0008)  
	class UBubbleNode*                                 CurBubbleNode;                                              // 0x00E0   (0x0008)  
	class AActor*                                      CurTargetActor;                                             // 0x00E8   (0x0008)  


	/// Functions
	// Function /Script/Pal7.PaladinBubbleComponent.ShowBubble
	// void ShowBubble(bool bIsShow);                                                                                        // [0xe62490] Final|Native|Public  
	// Function /Script/Pal7.PaladinBubbleComponent.SetBubbleActive
	// void SetBubbleActive(bool bInActive);                                                                                 // [0xe62220] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBubbleComponent.IsCanPlayBubble
	// bool IsCanPlayBubble();                                                                                               // [0xe62070] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinBubbleComponent.IsBubbleValid
	// bool IsBubbleValid();                                                                                                 // [0xe62040] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinBubbleComponent.IsBubbleShowing
	// bool IsBubbleShowing();                                                                                               // [0xe62010] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinBubbleComponent.IsBubblePlaying
	// bool IsBubblePlaying();                                                                                               // [0xe61fe0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinBubbleComponent.InitBeginBubble
	// bool InitBeginBubble();                                                                                               // [0xe61fb0] Final|Native|Public  
	// Function /Script/Pal7.PaladinBubbleComponent.EndBubble
	// void EndBubble();                                                                                                     // [0xe61730] Final|Native|Public  
	// Function /Script/Pal7.PaladinBubbleComponent.ClearBubbleCoolDown
	// void ClearBubbleCoolDown();                                                                                           // [0xe61710] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinBubbleComponent.ChangeBubbleAsset
	// void ChangeBubbleAsset(class UPaladinBubble* InBubbleAsset, bool EndCurBubble, bool ClearCoolDown);                   // [0xe615e0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinBubbleInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladinBubbleInterface : public UInterface
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinBubbleInterface.GetShowBubbleLocation
	// FVector GetShowBubbleLocation();                                                                                      // [0xe61f70] Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinBubbleInterface.GetBubbleComponent
	// class UPaladinBubbleComponent* GetBubbleComponent(class AActor* Owner);                                               // [0xe61ac0] Native|Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/Pal7.PaladinBubbleManager
/// Size: 0x00A8 (0x0000B0 - 0x000158)
class UPaladinBubbleManager : public UActorComponent
{ 
public:
	class USoundAttenuation*                           BubbleAttenuationSettings;                                  // 0x00B0   (0x0008)  
	SDK_UNDEFINED(80,1523) /* TMap<TWeakObjectPtr<UPaladinBubbleComponent*>, FTimerHandle> */ __um(PlayingBubbleMap); // 0x00B8   (0x0050)  
	SDK_UNDEFINED(80,1524) /* TMap<TWeakObjectPtr<UPaladinBubbleComponent*>, TWeakObjectPtr<UAtomComponent*>> */ __um(PlayingBubbleSounds); // 0x0108   (0x0050)  


	/// Functions
	// Function /Script/Pal7.PaladinBubbleManager.PlayNextBubble
	// void PlayNextBubble(class UPaladinBubbleComponent* InBubbleComp);                                                     // [0xe62100] Final|Native|Private 
	// Function /Script/Pal7.PaladinBubbleManager.EndBubble
	// void EndBubble(class UPaladinBubbleComponent* InBubbleComp, bool bStopSound);                                         // [0xe61750] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinCameraModifierFocusWalkDirection
/// Size: 0x0018 (0x0000B0 - 0x0000C8)
class UPaladinCameraModifierFocusWalkDirection : public UBaseCameraModifier
{ 
public:
	float                                              RotationSpeed;                                              // 0x00B0   (0x0004)  
	float                                              DirectionChangeCooldown;                                    // 0x00B4   (0x0004)  
	bool                                               RotateOnlyWhileCharacterIsMoving;                           // 0x00B8   (0x0001)  
	unsigned char                                      UnknownData00_6[0xF];                                       // 0x00B9   (0x000F)  MISSED
};

/// Class /Script/Pal7.PaladinEmptyCameraModifier
/// Size: 0x0038 (0x000048 - 0x000080)
class UPaladinEmptyCameraModifier : public UCameraModifier
{ 
public:
	FPaladinCameraInfo                                 CameraInfo;                                                 // 0x0048   (0x002C)  
	FName                                              Tag;                                                        // 0x0074   (0x0008)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x007C   (0x0004)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinEmptyCameraModifier.K2_StartBlendOut
	// void K2_StartBlendOut();                                                                                              // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinEmptyCameraModifier.K2_StartBlendIn
	// void K2_StartBlendIn();                                                                                               // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinEmptyCameraModifier.K2_OnEndCameraModifier
	// void K2_OnEndCameraModifier();                                                                                        // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinEmptyCameraModifier.K2_OnBegineCameraModifier
	// void K2_OnBegineCameraModifier();                                                                                     // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinEmptyCameraModifier.IsPendingDisable
	// bool IsPendingDisable();                                                                                              // [0xe75720] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinEmptyCameraModifier.BlueprintProcessViewRotation
	// void BlueprintProcessViewRotation(class AActor* ViewTarget, float DeltaTime, FRotator InViewRotation, FRotator InDeltaRot, FRotator& OutViewRotation, FRotator& OutDeltaRot); // [0x15dd8c0] BlueprintCosmetic|Event|Public|HasOutParms|HasDefaults|BlueprintEvent 
};

/// Class /Script/Pal7.PaladinCameraModifierHugeBoss
/// Size: 0x0018 (0x000080 - 0x000098)
class UPaladinCameraModifierHugeBoss : public UPaladinEmptyCameraModifier
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0080   (0x0018)  MISSED
};

/// Class /Script/Pal7.PaladinCameraModifierInCombat
/// Size: 0x0058 (0x0000B0 - 0x000108)
class UPaladinCameraModifierInCombat : public UBaseCameraModifier
{ 
public:
	int32_t                                            MonsterNumberIsMore;                                        // 0x00B0   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00B4   (0x0004)  MISSED
	SDK_UNDEFINED(80,1525) /* TMap<EPaladinCameraTransType, FPaladinTransCameraInfo> */ __um(TransCameraInfos);    // 0x00B8   (0x0050)  
};

/// Class /Script/Pal7.CameraTempleteInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UCameraTempleteInterface : public UInterface
{ 
public:


	/// Functions
	// Function /Script/Pal7.CameraTempleteInterface.OverrideGetCameraTransform
	// void OverrideGetCameraTransform(FTransform& Trans);                                                                   // [0x15dd8c0] Event|Public|HasOutParms|HasDefaults|BlueprintEvent|Const 
};

/// Class /Script/Pal7.PaladinCharacterAttributeHelper
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladinCharacterAttributeHelper : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinCharacterAttributeHelper.SetCharacterHPCurrent
	// void SetCharacterHPCurrent(class APaladinCharacterBase* TargetCharacter, float HPPercent);                            // [0xe62340] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterAttributeHelper.GetCharacterCurrentHP
	// float GetCharacterCurrentHP(class APaladinCharacterBase* QueryCharacter);                                             // [0xe61eb0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinCharacterAttributeHelper.GetCharacterCurrentBreakTime
	// float GetCharacterCurrentBreakTime(class APaladinCharacterBase* QueryCharacter);                                      // [0xe61e20] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterAttributeHelper.GetCharacterBaseHP
	// float GetCharacterBaseHP(class APaladinCharacterBase* QueryCharacter);                                                // [0xe61d90] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterAttributeHelper.GetCharacterBaseDefence
	// float GetCharacterBaseDefence(class APaladinCharacterBase* QueryCharacter);                                           // [0xe61d00] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterAttributeHelper.GetCharacterBaseAttack
	// float GetCharacterBaseAttack(class APaladinCharacterBase* QueryCharacter);                                            // [0xe61c70] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterAttributeHelper.GetCharacterAttack
	// float GetCharacterAttack(class APaladinCharacterBase* QueryCharacter);                                                // [0xe61be0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterAttributeHelper.GetCharacterAtkType
	// ECharacterAttckType GetCharacterAtkType(class APaladinCharacterBase* QueryCharacter);                                 // [0xe61b60] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharacterAttributeHelper.ChangeAttributeByName
	// void ChangeAttributeByName(class APaladinCharacterBase* TargetHero, FString AttributeName, float& value);             // [0xe614c0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinCharMovementComponent
/// Size: 0x0070 (0x000610 - 0x000680)
class UPaladinCharMovementComponent : public UCharacterMovementComponent
{ 
public:
	unsigned char                                      UnknownData00_3[0x2C];                                      // 0x0610   (0x002C)  MISSED
	bool                                               bUseCurvePath : 1;                                          // 0x063C:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x7];                                       // 0x063D   (0x0007)  MISSED
	float                                              CoefficientK;                                               // 0x0644   (0x0004)  
	float                                              fCurveDegreeThreshold;                                      // 0x0648   (0x0004)  
	bool                                               TurnLeft;                                                   // 0x064C   (0x0001)  
	bool                                               TurnRight;                                                  // 0x064D   (0x0001)  
	unsigned char                                      UnknownData02_5[0x12];                                      // 0x064E   (0x0012)  MISSED
	bool                                               bUsePawnDirection;                                          // 0x0660   (0x0001)  
	unsigned char                                      UnknownData03_6[0x1F];                                      // 0x0661   (0x001F)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinCharMovementComponent.SetPassiveMoveSpeed
	// void SetPassiveMoveSpeed(float Speed);                                                                                // [0xe6d9b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharMovementComponent.SetPassiveMoveMode
	// void SetPassiveMoveMode(EPaladinPassiveMoveMode MoveMode);                                                            // [0xe6d930] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharMovementComponent.SetPassiveMoveDirection
	// void SetPassiveMoveDirection(FVector Direction);                                                                      // [0xe6d8a0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinCharMovementComponent.SetForcDeceleration
	// void SetForcDeceleration(bool bDeceleration);                                                                         // [0xe6d810] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinCharSkeletalMeshComponet
/// Size: 0x0000 (0x000AD0 - 0x000AD0)
class UPaladinCharSkeletalMeshComponet : public USkeletalMeshComponent
{ 
public:
};

/// Class /Script/Pal7.PaladinCheatAsset
/// Size: 0x0008 (0x000030 - 0x000038)
class UPaladinCheatAsset : public UDataAsset
{ 
public:
	class UClass*                                      QuestTagUIClass;                                            // 0x0030   (0x0008)  


	/// Functions
	// Function /Script/Pal7.PaladinCheatAsset.Get
	// class UPaladinCheatAsset* Get();                                                                                      // [0xe6a900] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/Pal7.PaladinCheatManager
/// Size: 0x0030 (0x000078 - 0x0000A8)
class UPaladinCheatManager : public UCheatManager
{ 
public:
	SDK_UNDEFINED(40,1526) /* TWeakObjectPtr<ULevelSequence*> */ __um(TestSequenceAsset);                          // 0x0078   (0x0028)  
	class UUserWidget*                                 QuestTagWidget;                                             // 0x00A0   (0x0008)  


	/// Functions
	// Function /Script/Pal7.PaladinCheatManager.TriggerAntiaddiction
	// void TriggerAntiaddiction(bool bShutDown);                                                                            // [0xe6da50] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.TestOSSUpload
	// void TestOSSUpload();                                                                                                 // [0xe6da30] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.RemoveAllItem
	// void RemoveAllItem();                                                                                                 // [0xe6d760] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7UpdateLevelChunk
	// void Pal7UpdateLevelChunk(FName LevelRowName, FName ChunkName);                                                       // [0xe6d680] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7UpdateAllLevelChunks
	// void Pal7UpdateAllLevelChunks();                                                                                      // [0xbf6f60] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7UpdateAchivementConfig
	// void Pal7UpdateAchivementConfig();                                                                                    // [0xe6d660] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7UnlockCG
	// void Pal7UnlockCG(FName CGName);                                                                                      // [0xe6d5e0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7UnlockAllCG
	// void Pal7UnlockAllCG();                                                                                               // [0xe6d5c0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7UnlockAchievement
	// void Pal7UnlockAchievement(FName AchName);                                                                            // [0xe6d540] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7TryGiveExp
	// void Pal7TryGiveExp(float Exp);                                                                                       // [0xe6d4c0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7TriggerSingleFunction
	// void Pal7TriggerSingleFunction(int32_t ID, bool Open);                                                                // [0xe6d400] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7TriggerReachProgressAchievement
	// void Pal7TriggerReachProgressAchievement(FName AchName);                                                              // [0xe6d380] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7TriggerQuestTag
	// void Pal7TriggerQuestTag(FName TagName, bool bAddTag);                                                                // [0xe6d2b0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7TriggerJointStrike
	// void Pal7TriggerJointStrike();                                                                                        // [0xe6d290] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7TriggerAwaken
	// void Pal7TriggerAwaken(int32_t AwakenLevel);                                                                          // [0xe6d210] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7TriggerAllMuseumTags
	// void Pal7TriggerAllMuseumTags();                                                                                      // [0xe6d1f0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7TriggerAllFunctions
	// void Pal7TriggerAllFunctions(bool Open);                                                                              // [0xe6d160] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7TransferPlayer
	// void Pal7TransferPlayer(float X, float Y, float Z);                                                                   // [0xe6d050] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7TogglePressCensorshipState
	// void Pal7TogglePressCensorshipState(bool bOpen);                                                                      // [0xe6cfc0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7ToggleFightHeroHPIconState
	// void Pal7ToggleFightHeroHPIconState(bool bOpen);                                                                      // [0xe6cf30] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7ToggleFight
	// void Pal7ToggleFight(bool bOpen);                                                                                     // [0xe6cea0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7TestSQ
	// void Pal7TestSQ(FName SQRowName);                                                                                     // [0xe6ce20] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7TestCutLog
	// void Pal7TestCutLog();                                                                                                // [0xe6ce00] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7SwitchBorderlessWindow
	// void Pal7SwitchBorderlessWindow(bool bUseBorderless);                                                                 // [0xe6cd70] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7SkipSeq
	// void Pal7SkipSeq();                                                                                                   // [0xe6cd50] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7ShowQuestTag
	// void Pal7ShowQuestTag();                                                                                              // [0xe6cd30] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7ShowMaps
	// void Pal7ShowMaps(FString SearchVal, int32_t EffectMapNum);                                                           // [0xe6cc10] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7SetSubLevelVisibleState
	// void Pal7SetSubLevelVisibleState(FName Tag, bool bShouldBeVisible);                                                   // [0xe6cb40] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7SetSpellAttack
	// void Pal7SetSpellAttack(float value);                                                                                 // [0xe6cac0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7SetPetSkillPoint
	// void Pal7SetPetSkillPoint(FName PetName, int32_t SkillPoint);                                                         // [0xe6ca00] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7SetMP
	// void Pal7SetMP(float value);                                                                                          // [0xe6c980] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7SetHPOnly
	// void Pal7SetHPOnly(float value);                                                                                      // [0xe6c880] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7SetHP
	// void Pal7SetHP(float value);                                                                                          // [0xe6c800] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7SetHeroLevel
	// void Pal7SetHeroLevel(int32_t Num);                                                                                   // [0xe6c900] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7SetGraphicsQualityLevel
	// void Pal7SetGraphicsQualityLevel(int32_t InValue);                                                                    // [0xe6c780] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7SetEnemyGod
	// void Pal7SetEnemyGod();                                                                                               // [0xe6c760] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7SetAttack
	// void Pal7SetAttack(float value);                                                                                      // [0xe6c6e0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7SaveCache
	// void Pal7SaveCache();                                                                                                 // [0xe6c6c0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7ResetAllAbilityCD
	// void Pal7ResetAllAbilityCD();                                                                                         // [0xe6c6a0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7ReplaySQ
	// void Pal7ReplaySQ();                                                                                                  // [0xe6c680] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7RemoveLeaderCheatGE
	// void Pal7RemoveLeaderCheatGE();                                                                                       // [0xe6c660] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7RemoveAllWithoutNPC
	// void Pal7RemoveAllWithoutNPC();                                                                                       // [0xe6c640] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7RemoveAllNPC
	// void Pal7RemoveAllNPC();                                                                                              // [0xe6c620] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7ReleaseSQCache
	// void Pal7ReleaseSQCache();                                                                                            // [0xe6c600] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7RefreshCullDistance
	// void Pal7RefreshCullDistance();                                                                                       // [0xe6c5e0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7Recover
	// void Pal7Recover(FString Object);                                                                                     // [0xe6c500] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7QuestStepTo
	// void Pal7QuestStepTo(FName QuestInstanceID, FName PID);                                                               // [0xe6c3c0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7Quest_PushQuest
	// void Pal7Quest_PushQuest(FName QuestID);                                                                              // [0xe6c480] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7PushPlayMode
	// void Pal7PushPlayMode(FName InModeName);                                                                              // [0xe6c340] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7PrintSaveInfo
	// void Pal7PrintSaveInfo();                                                                                             // [0xe6c320] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7PrintAllHeroDamage
	// void Pal7PrintAllHeroDamage();                                                                                        // [0xe6c300] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7PrepareLevel
	// void Pal7PrepareLevel(FName ID, FName StartTag);                                                                      // [0xe6c240] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7PopPlayMode
	// void Pal7PopPlayMode(FName InModeName);                                                                               // [0xe6c1c0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7OpenUI
	// void Pal7OpenUI(FName sUIID, int32_t OpenWay);                                                                        // [0xe6c100] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7OpenPhotoMode
	// void Pal7OpenPhotoMode();                                                                                             // [0xe6c0e0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7MoveToTrackActor
	// void Pal7MoveToTrackActor(bool bShowAcotrLogOnly);                                                                    // [0xe6c050] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7MoveToCustomMark
	// void Pal7MoveToCustomMark(float UpperOffset);                                                                         // [0xe6bfd0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7MoveToActor
	// void Pal7MoveToActor(FName ActorID, float InZOffset);                                                                 // [0xe6bf00] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7ModifyJointStrikeRate
	// void Pal7ModifyJointStrikeRate(int32_t JointStrikeRate);                                                              // [0xe6be80] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7ModifyAwakenPoint
	// void Pal7ModifyAwakenPoint(int32_t AwakenPoint);                                                                      // [0xe6be00] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7MiniMapDebug
	// void Pal7MiniMapDebug();                                                                                              // [0xe6bde0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7LockVisibleStreamingLevels
	// void Pal7LockVisibleStreamingLevels(bool bLock);                                                                      // [0xe6bd50] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7KickOutPartners
	// void Pal7KickOutPartners();                                                                                           // [0xe6bd30] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7HideMaps
	// void Pal7HideMaps(FString SearchVal, int32_t EffectMapNum);                                                           // [0xe6bc10] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7GivePetAndSelect
	// void Pal7GivePetAndSelect(FName PetName);                                                                             // [0xe6bb90] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7GetGraphicsQualityLevel
	// void Pal7GetGraphicsQualityLevel();                                                                                   // [0xe6bb70] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7EquipEquipment
	// void Pal7EquipEquipment(int32_t ID);                                                                                  // [0xe6baf0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7EnhanceWeapon
	// void Pal7EnhanceWeapon(int32_t WeaponID, int32_t ModifierIndex);                                                      // [0xe6ba30] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7EnableStreamVolume
	// void Pal7EnableStreamVolume();                                                                                        // [0xe6ba10] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7DisableStreamingVolume
	// void Pal7DisableStreamingVolume();                                                                                    // [0xe6b9f0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7DebugUI_TeamAttributeList
	// void Pal7DebugUI_TeamAttributeList();                                                                                 // [0xe6b9d0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7DebugUI_OpenChallengeBoss
	// void Pal7DebugUI_OpenChallengeBoss();                                                                                 // [0xe6b9b0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7DebugUI_LeaderTargetAttributeList
	// void Pal7DebugUI_LeaderTargetAttributeList();                                                                         // [0xe6b990] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7DebugUI_LeaderAttributeList
	// void Pal7DebugUI_LeaderAttributeList();                                                                               // [0xe6b970] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7DebugUI_CloseChallengeBoss
	// void Pal7DebugUI_CloseChallengeBoss();                                                                                // [0xe6b6d0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7DebugUI_CameraModifierList
	// void Pal7DebugUI_CameraModifierList();                                                                                // [0xe6b950] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7CruiseChangeLevel
	// void Pal7CruiseChangeLevel(FName ID, FName StartTag);                                                                 // [0xe6b890] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7Crash
	// void Pal7Crash();                                                                                                     // [0xe6b870] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7ComponentsOnOff
	// void Pal7ComponentsOnOff(FString ActorType, FString Component, FString value);                                        // [0xe6b730] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7CloseGuid
	// void Pal7CloseGuid();                                                                                                 // [0xe6b710] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7CloseCurrentUI
	// void Pal7CloseCurrentUI();                                                                                            // [0xe6b6f0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7ClearUIStack
	// void Pal7ClearUIStack();                                                                                              // [0xe6b6d0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7CheatUnLockAllLandPoint
	// void Pal7CheatUnLockAllLandPoint(bool bOpenCheatMode);                                                                // [0xe6b640] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7ChangeTeamMember
	// void Pal7ChangeTeamMember(FString TeamToggle);                                                                        // [0xe6b5a0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7ChangePlayerStart
	// void Pal7ChangePlayerStart(FName PlayStart);                                                                          // [0xe6b520] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7ChangeMapResource
	// void Pal7ChangeMapResource(FName MapResouceID);                                                                       // [0xe6b4a0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7ChangeLevel
	// void Pal7ChangeLevel(FName ID, FName StartTag);                                                                       // [0xe6b3e0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7ChangeLeaderAttributeByGE
	// void Pal7ChangeLeaderAttributeByGE(FName AttributeKey, int32_t ModOp, float ModMagnitude);                            // [0xe6b2d0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7ChangeGameDifficulty
	// void Pal7ChangeGameDifficulty(EPaladinGameDifficulty NewDifficulty);                                                  // [0xe6b250] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7ChangeDistrictState
	// void Pal7ChangeDistrictState(EDistrictOperate Op, FGameplayTag DistrictType);                                         // [0xe6b190] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7AutoSaveUI
	// void Pal7AutoSaveUI();                                                                                                // [0xe6b170] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7AppendLevelChunk
	// void Pal7AppendLevelChunk(FName LevelRowName, FName ChunkName, bool InsertBeginning);                                 // [0xe6b060] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7AddShieldToLeader
	// void Pal7AddShieldToLeader(float value);                                                                              // [0xe6afe0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7AddQuestTag
	// void Pal7AddQuestTag(FName TagName, bool bTrigger);                                                                   // [0xe6af10] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7AddOrRemoveGameplayTag
	// void Pal7AddOrRemoveGameplayTag(FGameplayTag Tag, bool isAdd);                                                        // [0xe6ae40] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7AddMoney
	// void Pal7AddMoney(int32_t Num);                                                                                       // [0xe6adc0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7AddItem
	// void Pal7AddItem(int32_t ItemId, int32_t ItemCount);                                                                  // [0xe6ad00] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7AddExp
	// void Pal7AddExp(int32_t Num);                                                                                         // [0xe6ac80] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7AddAllPets
	// void Pal7AddAllPets();                                                                                                // [0xe6ac60] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7AddAllItem
	// void Pal7AddAllItem(int32_t Num);                                                                                     // [0xe6abe0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.Pal7AddAllCards
	// void Pal7AddAllCards();                                                                                               // [0xe6abc0] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.OnTestSeqLoadLevelDone
	// void OnTestSeqLoadLevelDone(FName LevelID);                                                                           // [0xe6ab40] Final|Native|Private 
	// Function /Script/Pal7.PaladinCheatManager.OnTestSeqFinish
	// void OnTestSeqFinish(FGuid InstID);                                                                                   // [0xe6aab0] Final|Native|Private|HasDefaults 
	// Function /Script/Pal7.PaladinCheatManager.AutoTestFinishRunningTest
	// void AutoTestFinishRunningTest();                                                                                     // [0xe6a850] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.AdjustPetSkillLevel
	// bool AdjustPetSkillLevel(FName PetName, int32_t SkillIdx, int32_t LV);                                                // [0xe6a750] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinCheatManager.AddAttribute
	// void AddAttribute(FString AttributeName, float& value);                                                               // [0xe6a320] Final|Exec|Native|Public|HasOutParms 
};

/// Class /Script/Pal7.PaladinCheckBoxGroup
/// Size: 0x0030 (0x000150 - 0x000180)
class UPaladinCheckBoxGroup : public UNamedSlot
{ 
public:
	bool                                               bPlayChildChangeSound;                                      // 0x0150   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0151   (0x0007)  MISSED
	class USoundAtomCue*                               CustomChildChangedSound;                                    // 0x0158   (0x0008)  
	unsigned char                                      UnknownData01_6[0x20];                                      // 0x0160   (0x0020)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinCheckBoxGroup.OnChildCheckBoxComponentBeChecked
	// void OnChildCheckBoxComponentBeChecked(class UCheckBox* CheckBoxWidget);                                              // [0xe6a9b0] Final|Native|Private 
};

/// Class /Script/Pal7.PaladinCollisionShape
/// Size: 0x0020 (0x000028 - 0x000048)
class UPaladinCollisionShape : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x28];                                      // 0x0000   (0x0028)  MISSED
	FVector                                            StartOffset;                                                // 0x0028   (0x000C)  
	FRotator                                           StartRotation;                                              // 0x0034   (0x000C)  
	bool                                               bHasPeriod;                                                 // 0x0040   (0x0001)  
	bool                                               bPeriodCheckOpen;                                           // 0x0041   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x0042   (0x0006)  MISSED
};

/// Class /Script/Pal7.PaladinCollisionShapeBox
/// Size: 0x0010 (0x000048 - 0x000058)
class UPaladinCollisionShapeBox : public UPaladinCollisionShape
{ 
public:
	FVector                                            HalfExtents;                                                // 0x0048   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0054   (0x0004)  MISSED
};

/// Class /Script/Pal7.PaladinCollisionShapeCone
/// Size: 0x0010 (0x000048 - 0x000058)
class UPaladinCollisionShapeCone : public UPaladinCollisionShape
{ 
public:
	float                                              m_FOV;                                                      // 0x0048   (0x0004)  
	float                                              m_Length;                                                   // 0x004C   (0x0004)  
	float                                              m_Height;                                                   // 0x0050   (0x0004)  
	bool                                               m_Is2DQuery;                                                // 0x0054   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0055   (0x0003)  MISSED
};

/// Struct /Script/Pal7.AwardData
/// Size: 0x0068 (0x000000 - 0x000068)
struct FAwardData
{ 
	SDK_UNDEFINED(80,1527) /* TMap<int32_t, int32_t> */ __um(ItemMap);                                             // 0x0000   (0x0050)  
	int32_t                                            Exp;                                                        // 0x0050   (0x0004)  
	int32_t                                            Money;                                                      // 0x0054   (0x0004)  
	TArray<FGameplayTag>                               Tags;                                                       // 0x0058   (0x0010)  
};

/// Class /Script/Pal7.PaladinCombatAwardManager
/// Size: 0x00E8 (0x000028 - 0x000110)
class UPaladinCombatAwardManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x28];                                      // 0x0000   (0x0028)  MISSED
	SDK_UNDEFINED(16,1528) /* FMulticastInlineDelegate */ __um(OnCombatAwardDelegate);                             // 0x0028   (0x0010)  
	FAwardData                                         AwardData;                                                  // 0x0038   (0x0068)  
	FAwardData                                         BackupAwardData;                                            // 0x00A0   (0x0068)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0108   (0x0008)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinCombatAwardManager.SetAwardActive
	// void SetAwardActive(bool bInActive);                                                                                  // [0xe6d780] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCombatAwardManager.RegisterControllerModeChanged
	// void RegisterControllerModeChanged();                                                                                 // [0xe6d740] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCombatAwardManager.OnControllerModeChanged
	// void OnControllerModeChanged(EPaladinControllerMode NewControllerMode);                                               // [0xe6aa30] Final|Native|Public  
	// Function /Script/Pal7.PaladinCombatAwardManager.GetAwardManager
	// class UPaladinCombatAwardManager* GetAwardManager(class UObject* WorldContext);                                       // [0xe6a930] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinCombatAwardManager.Award
	// void Award(bool IsPickUp);                                                                                            // [0xe6a870] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCombatAwardManager.AddTag
	// void AddTag(FGameplayTag Tag);                                                                                        // [0xe6a6d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCombatAwardManager.AddAwardMoney
	// void AddAwardMoney(int32_t MoneyAdd);                                                                                 // [0xe6a650] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCombatAwardManager.AddAwardItem
	// void AddAwardItem(TMap<int32_t, int32_t> ResultItemTable);                                                            // [0xe6a490] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCombatAwardManager.AddAwardExp
	// void AddAwardExp(int32_t ExpAdd);                                                                                     // [0xe6a410] Final|Native|Public|BlueprintCallable 
};

/// Struct /Script/Pal7.PaladinAbilityHitFilterConfig
/// Size: 0x0003 (0x000000 - 0x000003)
struct FPaladinAbilityHitFilterConfig
{ 
	ETargetFilterType                                  FilterType;                                                 // 0x0000   (0x0001)  
	bool                                               bDodgeUseful;                                               // 0x0001   (0x0001)  
	bool                                               bPerfectUseful;                                             // 0x0002   (0x0001)  
};

/// Struct /Script/Pal7.PaladinAbilityBuffConfig
/// Size: 0x0068 (0x000000 - 0x000068)
struct FPaladinAbilityBuffConfig
{ 
	class UClass*                                      BuffClass;                                                  // 0x0000   (0x0008)  
	float                                              CueExecuteLevel;                                            // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	SDK_UNDEFINED(80,1529) /* TMap<FGameplayTag, float> */ __um(SetByCallerAttr);                                  // 0x0010   (0x0050)  
	float                                              EffectPeriod;                                               // 0x0060   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0064   (0x0004)  MISSED
};

/// Struct /Script/Pal7.PaladinAbilityStrikeAttr
/// Size: 0x0028 (0x000000 - 0x000028)
struct FPaladinAbilityStrikeAttr
{ 
	float                                              PhysicalMultiply;                                           // 0x0000   (0x0004)  
	float                                              PhysicalAdd;                                                // 0x0004   (0x0004)  
	float                                              PhysicalPercentage;                                         // 0x0008   (0x0004)  
	float                                              SpellMultiply;                                              // 0x000C   (0x0004)  
	float                                              SpellAdd;                                                   // 0x0010   (0x0004)  
	float                                              SpellPercentage;                                            // 0x0014   (0x0004)  
	float                                              OverwhelmToughness;                                         // 0x0018   (0x0004)  
	float                                              BreakDamage;                                                // 0x001C   (0x0004)  
	float                                              MPGainOnHit;                                                // 0x0020   (0x0004)  
	EAbilityElementalType                              AbilityElementType;                                         // 0x0024   (0x0001)  
	EAbilityPhysicalDmgType                            AbilityPhysicalDmgType;                                     // 0x0025   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0026   (0x0002)  MISSED
};

/// Struct /Script/Pal7.PaladinAbilityHitEffectConfig
/// Size: 0x0050 (0x000000 - 0x000050)
struct FPaladinAbilityHitEffectConfig
{ 
	float                                              MakeHitTime;                                                // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	TArray<FPaladinAbilityBuffConfig>                  MakeBuffList;                                               // 0x0008   (0x0010)  
	TArray<class UPaladinAbilitySpecialEffect*>        GlobalSpecialEffects;                                       // 0x0018   (0x0010)  
	FPaladinAbilityStrikeAttr                          StrikeAttr;                                                 // 0x0028   (0x0028)  
};

/// Struct /Script/Pal7.BeatenBackParam
/// Size: 0x0018 (0x000000 - 0x000018)
struct FBeatenBackParam
{ 
	EBeatenBackMode                                    BeatenBackMode;                                             // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              EffectScale;                                                // 0x0004   (0x0004)  
	class UCurveFloat*                                 PhysicsBeatenCureve;                                        // 0x0008   (0x0008)  
	float                                              BeatenBackDelay;                                            // 0x0010   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/Pal7.PaladinAbilityHitViewConfig
/// Size: 0x0060 (0x000000 - 0x000060)
struct FPaladinAbilityHitViewConfig
{ 
	FBeatenBackParam                                   BeatenBackSetting;                                          // 0x0000   (0x0018)  
	TArray<FBeatenEffectConfig>                        SkillHitEffects;                                            // 0x0018   (0x0010)  
	class USoundAtomCue*                               HitSoundAtom;                                               // 0x0028   (0x0008)  
	float                                              SoundVolume;                                                // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0034   (0x0004)  MISSED
	SDK_UNDEFINED(16,1530) /* FString */               __um(Selector);                                             // 0x0038   (0x0010)  
	SDK_UNDEFINED(16,1531) /* FString */               __um(Label);                                                // 0x0048   (0x0010)  
	class USoundAttenuation*                           AttenuationSettings;                                        // 0x0058   (0x0008)  
};

/// Struct /Script/Pal7.PaladinAbilityHit
/// Size: 0x00B8 (0x000000 - 0x0000B8)
struct FPaladinAbilityHit
{ 
	FPaladinAbilityHitFilterConfig                     HitFilterConfig;                                            // 0x0000   (0x0003)  
	unsigned char                                      UnknownData00_5[0x5];                                       // 0x0003   (0x0005)  MISSED
	FPaladinAbilityHitEffectConfig                     HitEffectConfig;                                            // 0x0008   (0x0050)  
	FPaladinAbilityHitViewConfig                       HitViewConfig;                                              // 0x0058   (0x0060)  
};

/// Class /Script/Pal7.PaladinComboAbility
/// Size: 0x0060 (0x000410 - 0x000470)
class UPaladinComboAbility : public UPaladinAbilityBase
{ 
public:
	SDK_UNDEFINED(16,1532) /* FMulticastInlineDelegate */ __um(CancelTargetTaskDelegate);                          // 0x0410   (0x0010)  
	TArray<FPaladinAbilityHit>                         HitList;                                                    // 0x0420   (0x0010)  
	bool                                               bJointStrik;                                                // 0x0430   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0431   (0x0003)  MISSED
	FName                                              StartMontageSection;                                        // 0x0434   (0x0008)  
	unsigned char                                      UnknownData01_5[0x14];                                      // 0x043C   (0x0014)  MISSED
	bool                                               bCommitExecute : 1;                                         // 0x0450:0 (0x0001)  
	bool                                               bOnlyApplyGameEffectToAliveCharacter : 1;                   // 0x0450:1 (0x0001)  
	unsigned char                                      UnknownData02_4[0x3];                                       // 0x0451   (0x0003)  MISSED
	bool                                               bIsAwakenAbility;                                           // 0x0454   (0x0001)  
	bool                                               bIsContinuousAbility;                                       // 0x0455   (0x0001)  
	bool                                               bIgnoreCinematicMode;                                       // 0x0456   (0x0001)  
	unsigned char                                      UnknownData03_6[0x19];                                      // 0x0457   (0x0019)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinComboAbility.MakeStartLocation
	// FGameplayAbilityTargetingLocationInfo MakeStartLocation(FVector Location);                                            // [0xe71a30] Final|Native|Protected|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinComboAbility.K2_OnGiveAbility
	// void K2_OnGiveAbility();                                                                                              // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinComboAbility.K2_EndPowerStorage
	// void K2_EndPowerStorage(float PowerStorageSpan);                                                                      // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinComboAbility.K2_DealCustomMontageEvent
	// void K2_DealCustomMontageEvent(FGameplayEventData& Payload);                                                          // [0x15dd8c0] Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinComboAbility.IsNormalAttack
	// bool IsNormalAttack();                                                                                                // [0xe71940] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinComboAbility.GetUseFailErrorCode
	// EUseSkillFailErrorCode GetUseFailErrorCode(float& CDTimeDuring, float& CDTimeRemaining);                              // [0xe71760] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinComboAbility.GetActiveComboAbilityRow
	// bool GetActiveComboAbilityRow(FPaladinAbilityDataRow& OutAbilityDataRow);                                             // [0xe71130] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinComboAbility.GetAbilityName
	// FName GetAbilityName();                                                                                               // [0xe71110] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinComboAbility.DealMontageEventBase
	// void DealMontageEventBase(FGameplayEventData& Payload, FString DisplayString);                                        // [0x15dd8c0] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/Pal7.PaladinEventAbility
/// Size: 0x0008 (0x000410 - 0x000418)
class UPaladinEventAbility : public UPaladinAbilityBase
{ 
public:
	float                                              ExtraMagnitude;                                             // 0x0410   (0x0004)  
	float                                              CD;                                                         // 0x0414   (0x0004)  


	/// Functions
	// Function /Script/Pal7.PaladinEventAbility.GetAbilityCD
	// float GetAbilityCD();                                                                                                 // [0xe710d0] Native|Event|Public|BlueprintEvent|Const 
};

/// Class /Script/Pal7.PaladinAIHeroAbility
/// Size: 0x0000 (0x000410 - 0x000410)
class UPaladinAIHeroAbility : public UPaladinAbilityBase
{ 
public:
};

/// Class /Script/Pal7.PaladinComboConfigData
/// Size: 0x0000 (0x000030 - 0x000030)
class UPaladinComboConfigData : public UDataAsset
{ 
public:
};

/// Class /Script/Pal7.PaladinComposeCondition
/// Size: 0x0010 (0x000138 - 0x000148)
class UPaladinComposeCondition : public UPaladinCondition
{ 
public:
	TArray<class UPaladinCondition*>                   Conditions;                                                 // 0x0138   (0x0010)  
};

/// Struct /Script/Pal7.PaladinConditionConfig
/// Size: 0x0038 (0x000000 - 0x000038)
struct FPaladinConditionConfig
{ 
	FName                                              ConfigKey;                                                  // 0x0000   (0x0008)  
	FName                                              ConfigDesc;                                                 // 0x0008   (0x0008)  
	TArray<class UPaladinCondition*>                   Conditions;                                                 // 0x0010   (0x0010)  
	TArray<class UPaladinAction*>                      MeetActions;                                                // 0x0020   (0x0010)  
	bool                                               bMeetOnce : 1;                                              // 0x0030:0 (0x0001)  
	bool                                               bIgnoreLeftsWhenMeet : 1;                                   // 0x0030:1 (0x0001)  
	bool                                               bListenMeet : 1;                                            // 0x0030:2 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Class /Script/Pal7.PaladinConditionComponent
/// Size: 0x0030 (0x0000B0 - 0x0000E0)
class UPaladinConditionComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,1533) /* FMulticastInlineDelegate */ __um(OnConditionsMeetDelegate);                          // 0x00B0   (0x0010)  
	TArray<FPaladinConditionConfig>                    ConditionConfigs;                                           // 0x00C0   (0x0010)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x00D0   (0x0010)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinConditionComponent.TrackConditionsChange
	// void TrackConditionsChange();                                                                                         // [0xe72c70] Final|Native|Private 
	// Function /Script/Pal7.PaladinConditionComponent.ReTrackConditionsDelegate
	// void ReTrackConditionsDelegate(int32_t NewTrackIndex);                                                                // [0xe71e00] Final|Native|Private 
	// Function /Script/Pal7.PaladinConditionComponent.OnAnyConditionChanged
	// void OnAnyConditionChanged(class UPaladinCondition* ConditionInst, FName ConfigKey, int32_t ConfigIndex, bool bMeetCondition); // [0xe71be0] Final|Native|Private 
	// Function /Script/Pal7.PaladinConditionComponent.InitConditions
	// void InitConditions();                                                                                                // [0xe71920] Final|Native|Private 
};

/// Class /Script/Pal7.PaladinConditionManager
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UPaladinConditionManager : public UActorComponent
{ 
public:
};

/// Class /Script/Pal7.PaladinCookingManager
/// Size: 0x00C8 (0x000028 - 0x0000F0)
class UPaladinCookingManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x68];                                      // 0x0000   (0x0068)  MISSED
	SDK_UNDEFINED(16,1534) /* FMulticastInlineDelegate */ __um(OnMakingFoodEvent);                                 // 0x0068   (0x0010)  
	FGameplayTag                                       CookingMarkTag;                                             // 0x0078   (0x0008)  
	class UDataTable*                                  FoodDataTable;                                              // 0x0080   (0x0008)  
	class UDataTable*                                  CombinationDataTable;                                       // 0x0088   (0x0008)  
	unsigned char                                      UnknownData01_6[0x60];                                      // 0x0090   (0x0060)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinCookingManager.RefreshBuffToTeam
	// void RefreshBuffToTeam();                                                                                             // [0xe728f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCookingManager.K2_GetCookingEffectTimeRemaining
	// bool K2_GetCookingEffectTimeRemaining(FString& TimeRemainingStr);                                                     // [0xe71970] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinCookingManager.GetSelfCookRecipeIDList
	// void GetSelfCookRecipeIDList(EPaladinCookSurroundType SurroundType, TArray<int32_t>& RecipeIDList);                   // [0xe71670] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinCookingManager.GetFoodTags
	// FFoodTagData GetFoodTags(int32_t ChooseRecipeID, int32_t ChooseWineID);                                               // [0xe715a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinCookingManager.GetCookingManagerComponent
	// class UPaladinCookingManager* GetCookingManagerComponent();                                                           // [0xe71520] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinCookingManager.GetCookingEffectName
	// bool GetCookingEffectName(TArray<FText>& EffectNames);                                                                // [0xe71410] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinCookingManager.ConfirmCook
	// EPaladinCookFailReason ConfirmCook(bool bCookBySelf, int32_t ChooseRecipeID, int32_t ChooseWineID, EPaladinCookSurroundType SurroundType); // [0xe70f70] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinCurveProgressBar
/// Size: 0x0018 (0x000318 - 0x000330)
class UPaladinCurveProgressBar : public UProgressBar
{ 
public:
	class UCurveFloat*                                 TimeMappingCurve;                                           // 0x0318   (0x0008)  
	float                                              Duration;                                                   // 0x0320   (0x0004)  
	float                                              DeltaTime;                                                  // 0x0324   (0x0004)  
	float                                              TargetPercent;                                              // 0x0328   (0x0004)  
	float                                              StartPercent;                                               // 0x032C   (0x0004)  


	/// Functions
	// Function /Script/Pal7.PaladinCurveProgressBar.UpdateToPercent
	// void UpdateToPercent(float NewPercent, bool bWithPeriod);                                                             // [0xe72d20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinCurveProgressBar.TickPercent
	// bool TickPercent(float Delta);                                                                                        // [0xe72be0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinDamageExecution
/// Size: 0x0000 (0x000040 - 0x000040)
class UPaladinDamageExecution : public UGameplayEffectExecutionCalculation
{ 
public:
};

/// Class /Script/Pal7.PaladinDataCollectionComponent
/// Size: 0x06B0 (0x0000B0 - 0x000760)
class UPaladinDataCollectionComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,1535) /* FMulticastInlineDelegate */ __um(OnBossDamageDataChange);                            // 0x00B0   (0x0010)  
	unsigned char                                      UnknownData00_6[0x6A0];                                     // 0x00C0   (0x06A0)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinDataCollectionComponent.ShouldShowCollectDataTips
	// bool ShouldShowCollectDataTips();                                                                                     // [0xe72bb0] Final|Native|Private|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinDataCollectionComponent.ReceiveUsedMedicine
	// void ReceiveUsedMedicine(int32_t ItemId, int32_t ItemCount);                                                          // [0xe72830] Final|Native|Private 
	// Function /Script/Pal7.PaladinDataCollectionComponent.ReceiveTouchPet
	// void ReceiveTouchPet(FName State);                                                                                    // [0xe727b0] Final|Native|Private 
	// Function /Script/Pal7.PaladinDataCollectionComponent.ReceiveStartTiaoTiaoLe
	// void ReceiveStartTiaoTiaoLe();                                                                                        // [0xe72790] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinDataCollectionComponent.ReceiveStartPlayCardGame
	// void ReceiveStartPlayCardGame();                                                                                      // [0xe72770] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinDataCollectionComponent.ReceiveQuestUpdate
	// void ReceiveQuestUpdate(FName QuestInstanceID, FName QuestID, FName PID, EQuestCategory QuestCategory);               // [0xe72620] Final|Native|Private 
	// Function /Script/Pal7.PaladinDataCollectionComponent.ReceiveQuestStart
	// void ReceiveQuestStart(FName QuestInstanceID, FName QuestID, EQuestCategory QuestCategory);                           // [0xe72520] Final|Native|Private 
	// Function /Script/Pal7.PaladinDataCollectionComponent.ReceiveQuestEnd
	// void ReceiveQuestEnd(FName QuestInstanceID, FName QuestID, EQuestCategory QuestCategory);                             // [0xe72420] Final|Native|Private 
	// Function /Script/Pal7.PaladinDataCollectionComponent.ReceiveMonsterBekilled
	// void ReceiveMonsterBekilled(class APaladinHero* Killer, class APaladinEnemy* KilledEnemy);                            // [0xe72360] Final|Native|Private 
	// Function /Script/Pal7.PaladinDataCollectionComponent.ReceiveLowerDifficulty
	// void ReceiveLowerDifficulty();                                                                                        // [0xe72340] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinDataCollectionComponent.ReceiveLevelChanllangeStart
	// void ReceiveLevelChanllangeStart(FGameplayTag Tag);                                                                   // [0xe722c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinDataCollectionComponent.ReceiveLevelChanllangeEnd
	// void ReceiveLevelChanllangeEnd(FGameplayTag Tag);                                                                     // [0xe72240] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinDataCollectionComponent.ReceiveLevelChallangeFail
	// void ReceiveLevelChallangeFail(FGameplayTag Tag);                                                                     // [0xe721c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinDataCollectionComponent.ReceiveGainMoney
	// void ReceiveGainMoney(int32_t MoneyCount);                                                                            // [0xe72140] Final|Native|Private 
	// Function /Script/Pal7.PaladinDataCollectionComponent.ReceiveEndTiaoTiaoLe
	// void ReceiveEndTiaoTiaoLe();                                                                                          // [0xe72120] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinDataCollectionComponent.ReceiveDialogStart
	// void ReceiveDialogStart();                                                                                            // [0xe72100] Final|Native|Private 
	// Function /Script/Pal7.PaladinDataCollectionComponent.ReceiveCookFood
	// void ReceiveCookFood(int32_t ChooseRecipeID, int32_t ChooseWineID, EPaladinCookSurroundType SurroundType);            // [0xe72000] Final|Native|Private 
	// Function /Script/Pal7.PaladinDataCollectionComponent.ReceiveBossBattleInOut_Extra
	// void ReceiveBossBattleInOut_Extra(bool InBossBattle, EBossBattleName BossBattleName);                                 // [0xe71f40] Final|Native|Private 
	// Function /Script/Pal7.PaladinDataCollectionComponent.ReceiveBossBattleInOut
	// void ReceiveBossBattleInOut(bool InBossBattle, EBossBattleName BossBattleName);                                       // [0xe71e80] Final|Native|Private 
	// Function /Script/Pal7.PaladinDataCollectionComponent.OnMiniGameEnd
	// void OnMiniGameEnd(FName GameName, bool bSuccess);                                                                    // [0xe71d30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinDataCollectionComponent.GetDataCollectionComponent
	// class UPaladinDataCollectionComponent* GetDataCollectionComponent();                                                  // [0xe71570] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinDataCollectionComponent.GetCurrentBossDamage
	// float GetCurrentBossDamage();                                                                                         // [0xe71550] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinDataCollectionComponent.GetBossChallengeRecords
	// void GetBossChallengeRecords(TMap<EBossBattleName, int32_t>& Records);                                                // [0xe71200] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinDataCollectionComponent.CacheUserSelection
	// void CacheUserSelection(bool bEnable);                                                                                // [0xe70e40] Final|Native|Private|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinManagerInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladinManagerInterface : public UInterface
{ 
public:
};

/// Class /Script/Pal7.PaladinDataManagerInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladinDataManagerInterface : public UPaladinManagerInterface
{ 
public:
};

/// Class /Script/Pal7.PaladinDefaultSettings
/// Size: 0x0048 (0x000038 - 0x000080)
class UPaladinDefaultSettings : public UDeveloperSettings
{ 
public:
	float                                              DefaultFrameRateLimit;                                      // 0x0038   (0x0004)  
	float                                              DefaultExposureOffse;                                       // 0x003C   (0x0004)  
	float                                              DefaultVoiceVolume;                                         // 0x0040   (0x0004)  
	float                                              DefaultMusicVolume;                                         // 0x0044   (0x0004)  
	float                                              DefaultEffectVolume;                                        // 0x0048   (0x0004)  
	float                                              DefaultGlobalVolume;                                        // 0x004C   (0x0004)  
	float                                              DefaultSuppressionVolume;                                   // 0x0050   (0x0004)  
	float                                              DefaultHorizontalSpeed;                                     // 0x0054   (0x0004)  
	float                                              DefaultVerticalSpeed;                                       // 0x0058   (0x0004)  
	float                                              DefaultDisplayGamma;                                        // 0x005C   (0x0004)  
	bool                                               bDefaultHorizontalReverse : 1;                              // 0x0060:0 (0x0001)  
	bool                                               bDefaultVerticalReverse : 1;                                // 0x0060:1 (0x0001)  
	bool                                               bDefaultForceFeedbackEnabled : 1;                           // 0x0060:2 (0x0001)  
	bool                                               bDefaultCameraCorrectionEnabled : 1;                        // 0x0060:3 (0x0001)  
	bool                                               bDefaultMinimapRotatableEnabled : 1;                        // 0x0060:4 (0x0001)  
	bool                                               bDefaultProfessionalModeleEnabled : 1;                      // 0x0060:5 (0x0001)  
	bool                                               bDefaultBattleNumShowEnabled : 1;                           // 0x0060:6 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0061   (0x0003)  MISSED
	int32_t                                            DialogueTextFontSize;                                       // 0x0064   (0x0004)  
	int32_t                                            EnvInteractionLevel;                                        // 0x0068   (0x0004)  
	int32_t                                            GraphicsQualityLevel;                                       // 0x006C   (0x0004)  
	bool                                               DefaultMotionBlur : 1;                                      // 0x0070:0 (0x0001)  
	bool                                               bDefaultVSyncEnable : 1;                                    // 0x0070:1 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x0071   (0x0003)  MISSED
	int32_t                                            bNVRTX;                                                     // 0x0074   (0x0004)  
	int32_t                                            bNVDLSS;                                                    // 0x0078   (0x0004)  
	bool                                               bSpotLightEnabled : 1;                                      // 0x007C:0 (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x007D   (0x0003)  MISSED
};

/// Struct /Script/Pal7.DialogueMontageInstance
/// Size: 0x0010 (0x000000 - 0x000010)
struct FDialogueMontageInstance
{ 
	class UAnimMontage*                                Montage;                                                    // 0x0000   (0x0008)  
	class UAnimInstance*                               AnimInst;                                                   // 0x0008   (0x0008)  
};

/// Class /Script/Pal7.PaladinDialogueManager
/// Size: 0x01D0 (0x0000B0 - 0x000280)
class UPaladinDialogueManager : public UActorComponent
{ 
public:
	class UDialogue*                                   CurrentDialogueAsset;                                       // 0x00B0   (0x0008)  
	FName                                              DialougePlayMode;                                           // 0x00B8   (0x0008)  
	SDK_UNDEFINED(16,1536) /* FMulticastInlineDelegate */ __um(OnBeginDialogueCallback);                           // 0x00C0   (0x0010)  
	SDK_UNDEFINED(16,1537) /* FMulticastInlineDelegate */ __um(OnEndDialogueCallback);                             // 0x00D0   (0x0010)  
	SDK_UNDEFINED(16,1538) /* FMulticastInlineDelegate */ __um(OnDialougeContentChangedSignature);                 // 0x00E0   (0x0010)  
	SDK_UNDEFINED(16,1539) /* FMulticastInlineDelegate */ __um(OnPlayerReplySignature);                            // 0x00F0   (0x0010)  
	int64_t                                            MinSkipInterval;                                            // 0x0100   (0x0008)  
	unsigned char                                      UnknownData00_5[0x120];                                     // 0x0108   (0x0120)  MISSED
	class AActor*                                      Initiator;                                                  // 0x0228   (0x0008)  
	class AActor*                                      Recipient;                                                  // 0x0230   (0x0008)  
	class AActor*                                      NodeRecipient;                                              // 0x0238   (0x0008)  
	class APaladinAvatarNPC*                           NodeTalkNPC;                                                // 0x0240   (0x0008)  
	TArray<class AActor*>                              EventReceiveObject;                                         // 0x0248   (0x0010)  
	FGuid                                              PlayingSeqInstaceID;                                        // 0x0258   (0x0010)  
	class UAtomComponent*                              CurDialogueSound;                                           // 0x0268   (0x0008)  
	TArray<FDialogueMontageInstance>                   DialogueMontageInstances;                                   // 0x0270   (0x0010)  


	/// Functions
	// Function /Script/Pal7.PaladinDialogueManager.SkipDialogueInputEvent
	// void SkipDialogueInputEvent(TEnumAsByte<EInputEvent> InputEvent, EPaladinKeyEventName EventNameEnum, float CurTickHoldSpan, float PreTickHoldSpan, float KeyMappingValue); // [0xe76940] Final|Native|Protected 
	// Function /Script/Pal7.PaladinDialogueManager.SetDialogueSkipEnable
	// void SetDialogueSkipEnable(bool bInEnable);                                                                           // [0xe768b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinDialogueManager.SetDialogueEnable
	// void SetDialogueEnable(bool InEnable);                                                                                // [0xe6d780] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinDialogueManager.SetConfirmReplyEnable
	// void SetConfirmReplyEnable(bool bInEnable);                                                                           // [0xe76820] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinDialogueManager.PlayDialogueSlotAnimationAsDynamicMontage
	// class UAnimMontage* PlayDialogueSlotAnimationAsDynamicMontage(class UAnimInstance* InAnimInst, class UAnimSequenceBase* Asset, FName SlotNodeName, float BlendInTime, float BlendOutTime, float InPlayRate, int32_t LoopCount, float BlendOutTriggerTime, float InTimeToStartMontageAt); // [0xe763b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinDialogueManager.OnSequenceFinish
	// void OnSequenceFinish(FGuid InstID);                                                                                  // [0xe76120] Final|Native|Protected|HasDefaults 
	// Function /Script/Pal7.PaladinDialogueManager.OnPlaymodeChanged
	// void OnPlaymodeChanged(FName ModeName);                                                                               // [0xe75e10] Final|Native|Protected 
	// Function /Script/Pal7.PaladinDialogueManager.OnPlayerHasReply
	// void OnPlayerHasReply(FPlayerReplyInformation& Reply);                                                                // [0xe75e90] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinDialogueManager.GetDialogueEnable
	// bool GetDialogueEnable();                                                                                             // [0xe75610] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinDialogueManager.GetCurrentReplyInfo
	// TArray<FPlayerReplyInformation> GetCurrentReplyInfo();                                                                // [0xe75400] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinDialogueManager.GetConfirmReplyEnable
	// bool GetConfirmReplyEnable();                                                                                         // [0xe753e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinDialogueManager.EndDialogue
	// void EndDialogue();                                                                                                   // [0xe75310] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinDialogueManager.BeginDialogue
	// bool BeginDialogue(class UDialogue* InDialogueAsset, class AActor* InInitiator, class AActor* InRecipient, FName InPlayMode); // [0xe751a0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinDialogueTrackInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladinDialogueTrackInterface : public UInterface
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinDialogueTrackInterface.PlayFaceAnimation
	// void PlayFaceAnimation(class UAnimSequenceBase* FaceAnimation, bool bInLoopPlay, class UAnimMontage*& OutFaceMontage, class UAnimInstance*& OutAnimInstance); // [0xe76630] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/Pal7.PaladinDynamicMonitorComponent
/// Size: 0x00B0 (0x0000B0 - 0x000160)
class UPaladinDynamicMonitorComponent : public UActorComponent
{ 
public:
	FGameplayTag                                       EnvironmentTag;                                             // 0x00B0   (0x0008)  
	FGameplayTag                                       QuestTag;                                                   // 0x00B8   (0x0008)  
	FGameplayTag                                       QuestInvalidTag;                                            // 0x00C0   (0x0008)  
	FName                                              QuestInstanceID;                                            // 0x00C8   (0x0008)  
	FName                                              MinPID;                                                     // 0x00D0   (0x0008)  
	FName                                              MaxPID;                                                     // 0x00D8   (0x0008)  
	SDK_UNDEFINED(16,1540) /* FMulticastInlineDelegate */ __um(OnInit);                                            // 0x00E0   (0x0010)  
	SDK_UNDEFINED(16,1541) /* FMulticastInlineDelegate */ __um(OnEnvironmentTagChanged);                           // 0x00F0   (0x0010)  
	SDK_UNDEFINED(16,1542) /* FMulticastInlineDelegate */ __um(OnQuestTagChanged);                                 // 0x0100   (0x0010)  
	SDK_UNDEFINED(16,1543) /* FMulticastInlineDelegate */ __um(OnQuestInvalidTagChanged);                          // 0x0110   (0x0010)  
	SDK_UNDEFINED(16,1544) /* FMulticastInlineDelegate */ __um(OnMonitorQuestBegin);                               // 0x0120   (0x0010)  
	SDK_UNDEFINED(16,1545) /* FMulticastInlineDelegate */ __um(OnMonitorQuestEnd);                                 // 0x0130   (0x0010)  
	SDK_UNDEFINED(16,1546) /* FMulticastInlineDelegate */ __um(OnMonitorPIDChanged);                               // 0x0140   (0x0010)  
	SDK_UNDEFINED(16,1547) /* FMulticastInlineDelegate */ __um(OnPIDChanged);                                      // 0x0150   (0x0010)  


	/// Functions
	// Function /Script/Pal7.PaladinDynamicMonitorComponent.OnQuestTrigged
	// void OnQuestTrigged(FGameplayTag Tag, bool bAddTag);                                                                  // [0xe76050] Final|Native|Protected 
	// Function /Script/Pal7.PaladinDynamicMonitorComponent.OnQuestInvalidTrigged
	// void OnQuestInvalidTrigged(FGameplayTag InvalidTag, bool bAddTag);                                                    // [0xe75f80] Final|Native|Protected 
	// Function /Script/Pal7.PaladinDynamicMonitorComponent.OnMonitorQuestUpdateFunc
	// void OnMonitorQuestUpdateFunc(FName InQuestInstanceID, FName InQuestID, FName InPID, EQuestCategory InCategory);      // [0xe75ca0] Final|Native|Protected 
	// Function /Script/Pal7.PaladinDynamicMonitorComponent.OnMonitorQuestEndFunc
	// void OnMonitorQuestEndFunc(FName InQuestInstanceID, FName InQuestID, EQuestCategory InCategory);                      // [0xe75ba0] Final|Native|Protected 
	// Function /Script/Pal7.PaladinDynamicMonitorComponent.OnMonitorQuestBeginFunc
	// void OnMonitorQuestBeginFunc(FName InQuestInstanceID, FName InQuestID, EQuestCategory InCategory);                    // [0xe75aa0] Final|Native|Protected 
	// Function /Script/Pal7.PaladinDynamicMonitorComponent.OnEnvTrigged
	// void OnEnvTrigged(FGameplayTag Tag, bool bAddTag);                                                                    // [0xe75910] Final|Native|Protected 
	// Function /Script/Pal7.PaladinDynamicMonitorComponent.HasQuestConditionJudge
	// bool HasQuestConditionJudge();                                                                                        // [0xe75650] Final|Native|Public  
};

/// Class /Script/Pal7.PaladinCameraModifier_InBattle
/// Size: 0x0000 (0x000080 - 0x000080)
class UPaladinCameraModifier_InBattle : public UPaladinEmptyCameraModifier
{ 
public:
};

/// Class /Script/Pal7.PaladinEnemyAttrSet
/// Size: 0x0000 (0x000030 - 0x000030)
class UPaladinEnemyAttrSet : public UPaladinASBase
{ 
public:
};

/// Class /Script/Pal7.PaladinEnvQueryTest_OverlapIgnoreActor
/// Size: 0x0010 (0x000218 - 0x000228)
class UPaladinEnvQueryTest_OverlapIgnoreActor : public UEnvQueryTest_Overlap
{ 
public:
	TArray<class UClass*>                              IgnoreActorClass;                                           // 0x0218   (0x0010)  
};

/// Class /Script/Pal7.PaladinFightGameState
/// Size: 0x0088 (0x000270 - 0x0002F8)
class APaladinFightGameState : public AGameStateBase
{ 
public:
	unsigned char                                      UnknownData00_3[0x40];                                      // 0x0270   (0x0040)  MISSED
	float                                              AwakenPoint;                                                // 0x02B0   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x02B4   (0x0004)  MISSED
	class APaladinBossMonsterBase*                     CurrentBossInBattle;                                        // 0x02B8   (0x0008)  
	EPaladinGameDifficulty                             GameDifficulty;                                             // 0x02C0   (0x0001)  
	unsigned char                                      UnknownData02_5[0x1F];                                      // 0x02C1   (0x001F)  MISSED
	class UPaladinPlayModeManager*                     PlayModeManager;                                            // 0x02E0   (0x0008)  
	class UPaladinBubbleManager*                       BubbleManager;                                              // 0x02E8   (0x0008)  
	class UPaladinAutoSaveComponent*                   AutoSaveManager;                                            // 0x02F0   (0x0008)  


	/// Functions
	// Function /Script/Pal7.PaladinFightGameState.ToggleEnableAwakenCostByTime
	// void ToggleEnableAwakenCostByTime(bool bEnable);                                                                      // [0xe7b0c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinFightGameState.ToggleAwakeBlockState
	// void ToggleAwakeBlockState(ECanAwakeState AwakeType, bool bOpen);                                                     // [0xe7aff0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinFightGameState.SetUILockCookBuffTime
	// void SetUILockCookBuffTime(bool Lock);                                                                                // [0xe7aea0] Final|Native|Public  
	// Function /Script/Pal7.PaladinFightGameState.ResetGameDifficulty
	// void ResetGameDifficulty(EPaladinGameDifficulty GameDifficulty);                                                      // [0xe7a860] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinFightGameState.OnControllerModeChanged
	// void OnControllerModeChanged(EPaladinControllerMode NewControllerMode);                                               // [0xe7a520] Final|Native|Public  
	// Function /Script/Pal7.PaladinFightGameState.ModifyAwakenPoint
	// void ModifyAwakenPoint(float Num);                                                                                    // [0xe7a3e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinFightGameState.IsInFight
	// bool IsInFight();                                                                                                     // [0xe7a190] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinFightGameState.IsAwakeBlocked
	// bool IsAwakeBlocked(ECanAwakeState AwakeType);                                                                        // [0xe7a100] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinFightGameState.GetCurrentCookBuffTimeInSeconds
	// int32_t GetCurrentCookBuffTimeInSeconds();                                                                            // [0xe79790] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinFightGameState.GetCurrentAwakenState
	// ECanAwakeState GetCurrentAwakenState();                                                                               // [0xe79770] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinFightGameState.GetCurrentArchiveTotalPlayTimeInSeconds
	// int32_t GetCurrentArchiveTotalPlayTimeInSeconds();                                                                    // [0xe79740] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinFightGameState.GetCurAwakenHero
	// EPaladinHeroName GetCurAwakenHero();                                                                                  // [0xe79710] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinFightGameState.GetAwakenProgress
	// float GetAwakenProgress();                                                                                            // [0xe796e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinFightGameState.EndAwaken
	// void EndAwaken();                                                                                                     // [0xe79640] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinFightGameState.DoAwakeCost
	// void DoAwakeCost(bool IsSuperAwaken);                                                                                 // [0xe795b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinFightGameState.CanAwake
	// ECanAwakeState CanAwake();                                                                                            // [0xe794d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinFightGameState.BeginAwaken
	// void BeginAwaken(EPaladinHeroName Name);                                                                              // [0xe79430] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinFullScreenCineCameraActor
/// Size: 0x0010 (0x000920 - 0x000930)
class APaladinFullScreenCineCameraActor : public ACineCameraActor
{ 
public:
	float                                              FadeInBlendTime;                                            // 0x0920   (0x0004)  
	float                                              FadeOutBlendTime;                                           // 0x0924   (0x0004)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0928   (0x0008)  MISSED
};

/// Class /Script/Pal7.PaladinGame
/// Size: 0x01A8 (0x0002C0 - 0x000468)
class APaladinGame : public AGameModeBase
{ 
public:
	FName                                              DefaultPlayerStartTag;                                      // 0x02C0   (0x0008)  
	FName                                              DefaultLevel;                                               // 0x02C8   (0x0008)  
	class UPaladinQuestManagerComponent*               QuestManager;                                               // 0x02D0   (0x0008)  
	class UPaladinInteractionManagerComponent*         InteractionManager;                                         // 0x02D8   (0x0008)  
	class UPaladinHeroManagerComponent*                HeroManager;                                                // 0x02E0   (0x0008)  
	class UPaladinMonsterFightingManagerComponent*     MonsterFightingManager;                                     // 0x02E8   (0x0008)  
	class UPaladinGlobalSpecialEffectManagerComponent* GlobalSpecialEffectsManager;                                // 0x02F0   (0x0008)  
	class UPaladinLeveStreamingManagerComponent*       LevelStreamingManager;                                      // 0x02F8   (0x0008)  
	class UPaladinQTEManager*                          QTEManager;                                                 // 0x0300   (0x0008)  
	class UPaladinJointstrikeManager*                  JointstrikeManager;                                         // 0x0308   (0x0008)  
	class UPaladinSceneAtmosphereManager*              SceneAtmosphereModifyManager;                               // 0x0310   (0x0008)  
	class UPaladinSuperHeroManagerComponent*           SuperHeroManager;                                           // 0x0318   (0x0008)  
	class UPaladinWorldMapManagerComponent*            WorldMapManager;                                            // 0x0320   (0x0008)  
	class UPaladinBattleVoiceManager*                  BattleVoiceManager;                                         // 0x0328   (0x0008)  
	class APaladinGuideManager*                        GuideManager;                                               // 0x0330   (0x0008)  
	class UPaladinMuseumManager*                       MuseumManager;                                              // 0x0338   (0x0008)  
	class UPaladinMapManager*                          MapManager;                                                 // 0x0340   (0x0008)  
	class UPaladinDialogueManager*                     DialogueManager;                                            // 0x0348   (0x0008)  
	class UPaladinConditionManager*                    ConditionManager;                                           // 0x0350   (0x0008)  
	class APaladinTeamAttributeAvatar*                 TeamAttributeAvatar;                                        // 0x0358   (0x0008)  
	class UPaladinTipsManagerComponent*                TipsManager;                                                // 0x0360   (0x0008)  
	class UPaladinActionManager*                       ActionManager;                                              // 0x0368   (0x0008)  
	class UPaladinSequenceManager*                     SequenceManager;                                            // 0x0370   (0x0008)  
	class UPaladinRuntimeActorManager*                 RuntimeActorManager;                                        // 0x0378   (0x0008)  
	class UPaladinQuestProcessIDManager*               QuestProcessIDManager;                                      // 0x0380   (0x0008)  
	class UPaladinPetManager*                          PetManager;                                                 // 0x0388   (0x0008)  
	class UPaladinPuzzleManager*                       PuzzleManager;                                              // 0x0390   (0x0008)  
	class UPaladinMergeMeshManager*                    MergeMeshManager;                                           // 0x0398   (0x0008)  
	class UPaladinCombatAwardManager*                  CombatAwardManager;                                         // 0x03A0   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x03A8   (0x0008)  MISSED
	SDK_UNDEFINED(16,1548) /* FMulticastInlineDelegate */ __um(OnGameStartPreEventDelegate);                       // 0x03B0   (0x0010)  
	unsigned char                                      UnknownData01_5[0x60];                                      // 0x03C0   (0x0060)  MISSED
	SDK_UNDEFINED(16,1549) /* FMulticastInlineDelegate */ __um(OnPaladinRestartFightDelegate);                     // 0x0420   (0x0010)  
	unsigned char                                      UnknownData02_5[0x18];                                      // 0x0430   (0x0018)  MISSED
	class UClass*                                      PaladinTeamAttributeAvatarClass;                            // 0x0448   (0x0008)  
	bool                                               bIsPlayInEditor;                                            // 0x0450   (0x0001)  
	unsigned char                                      UnknownData03_6[0x17];                                      // 0x0451   (0x0017)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinGame.ToggleLockSaveGameQuest
	// void ToggleLockSaveGameQuest(bool bLock);                                                                             // [0xe7b140] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGame.ToggleLockSaveGame
	// void ToggleLockSaveGame(bool bLock);                                                                                  // [0xb0fc20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGame.SwitchGraphicsLevel
	// void SwitchGraphicsLevel(int32_t Level);                                                                              // [0xe6c780] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinGame.SetInGame
	// void SetInGame();                                                                                                     // [0xe7adb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGame.SetDisplayGamma
	// void SetDisplayGamma(float Gamma);                                                                                    // [0xe7ad30] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinGame.RestartMissionFight
	// void RestartMissionFight();                                                                                           // [0xe7ac80] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGame.RestartBossFight
	// void RestartBossFight();                                                                                              // [0xe7ac60] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGame.ResetTeamLocationsByTransform
	// void ResetTeamLocationsByTransform(TMap<EPaladinHeroName, FTransform> TransformMap);                                  // [0xe7aaa0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGame.ResetTeamLocationsByStart
	// void ResetTeamLocationsByStart(TMap<EPaladinHeroName, FName> PlayerStartTagMap);                                      // [0xe7a8e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGame.QuestAutoSave
	// bool QuestAutoSave(bool bSkipPlaymodeCheck);                                                                          // [0xe7a7d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGame.PaladinGameEnd
	// void PaladinGameEnd(FGameEndContext GameEndInfo);                                                                     // [0xe7a6e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGame.OnStreamingLevelWaitInitHeros
	// void OnStreamingLevelWaitInitHeros(FName InID, FName InStartTag);                                                     // [0xe7a620] Final|Native|Public  
	// Function /Script/Pal7.PaladinGame.OnLevelLoadingDone
	// void OnLevelLoadingDone(FName LevelID);                                                                               // [0xe7a5a0] Final|Native|Public  
	// Function /Script/Pal7.PaladinGame.OnBeforeLevelLoading
	// void OnBeforeLevelLoading(FName LevelID, FName NextLevelID);                                                          // [0xe7a460] Final|Native|Public  
	// Function /Script/Pal7.PaladinGame.K2_UnloadLogin
	// void K2_UnloadLogin();                                                                                                // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinGame.K2_ShowHideLoadWidget
	// void K2_ShowHideLoadWidget(bool bShow);                                                                               // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinGame.K2_PreInitializeComponents
	// void K2_PreInitializeComponents();                                                                                    // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinGame.K2_PaladinGameEnd
	// void K2_PaladinGameEnd(FGameEndContext GameEndInfo);                                                                  // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinGame.K2_CloseGuid
	// void K2_CloseGuid();                                                                                                  // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinGame.IsShippingMode
	// bool IsShippingMode();                                                                                                // [0xe7a1e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGame.IsInGame
	// bool IsInGame();                                                                                                      // [0xe7a1c0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinGame.GetPaladinGameVersion
	// FString GetPaladinGameVersion();                                                                                      // [0xe79970] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGame.GetInGame
	// bool GetInGame();                                                                                                     // [0xb0fa90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGame.GetEngineGameMode
	// EPaladinEngineGameMode GetEngineGameMode();                                                                           // [0xe797c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGame.FixSequenceAssignment
	// void FixSequenceAssignment(class UMovieSceneSequencePlayer* P);                                                       // [0xe79660] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGame.DisplayStreamingLevels
	// void DisplayStreamingLevels();                                                                                        // [0xe79590] Final|Exec|Native|Public 
	// Function /Script/Pal7.PaladinGame.CheckCanSaveGame
	// bool CheckCanSaveGame(bool bSkipPlaymodeCheck);                                                                       // [0xe79500] Final|Native|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/Pal7.PaladinGameInstance
/// Size: 0x01E8 (0x000198 - 0x000380)
class UPaladinGameInstance : public UGameInstance
{ 
public:
	SDK_UNDEFINED(16,1550) /* FMulticastInlineDelegate */ __um(OnGameInstanceInitializationed);                    // 0x0198   (0x0010)  
	unsigned char                                      UnknownData00_5[0xA8];                                      // 0x01A8   (0x00A8)  MISSED
	class UPaladinGameUINotifyContainer*               GameUINotifyContainer;                                      // 0x0250   (0x0008)  
	class ULevelStreaming*                             TmpLoginLevelStreaming;                                     // 0x0258   (0x0008)  
	class UClass*                                      SettingsManagerClass;                                       // 0x0260   (0x0008)  
	class UClass*                                      UIManagerClass;                                             // 0x0268   (0x0008)  
	class UClass*                                      PhotoManagerClass;                                          // 0x0270   (0x0008)  
	class UClass*                                      ItemManagerClass;                                           // 0x0278   (0x0008)  
	class UClass*                                      CookingManagerClass;                                        // 0x0280   (0x0008)  
	class UClass*                                      AudioManagerClass;                                          // 0x0288   (0x0008)  
	SDK_UNDEFINED(40,1551) /* TWeakObjectPtr<UDataTable*> */ __um(ArchiveUpdateData);                              // 0x0290   (0x0028)  
	class UPaladinAchievementComponennt*               AchievementManager;                                         // 0x02B8   (0x0008)  
	class UPaladinSettingsManager*                     SettingsManager;                                            // 0x02C0   (0x0008)  
	class UPaladinUIManager*                           UIManager;                                                  // 0x02C8   (0x0008)  
	class UPaladinItemManager*                         ItemManager;                                                // 0x02D0   (0x0008)  
	class UPaladinCookingManager*                      CookingManager;                                             // 0x02D8   (0x0008)  
	class UPaladinSaveGameManager*                     SaveGameManager;                                            // 0x02E0   (0x0008)  
	class UPaladinAudioManager*                        AudioManager;                                               // 0x02E8   (0x0008)  
	class UPaladinDataCollectionComponent*             DataCollectedMgr;                                           // 0x02F0   (0x0008)  
	class UPaladinOpenFunction*                        OpenFunctionManager;                                        // 0x02F8   (0x0008)  
	class UPaladinPhotoManager*                        PhotoManager;                                               // 0x0300   (0x0008)  
	unsigned char                                      UnknownData01_5[0x20];                                      // 0x0308   (0x0020)  MISSED
	SDK_UNDEFINED(16,1552) /* FMulticastInlineDelegate */ __um(LoadLoginFinishDelegate);                           // 0x0328   (0x0010)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x0338   (0x0008)  MISSED
	class UPaladinSaveGame*                            CacheSaveGame;                                              // 0x0340   (0x0008)  
	unsigned char                                      UnknownData03_6[0x38];                                      // 0x0348   (0x0038)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinGameInstance.StartNewGame
	// bool StartNewGame(EPaladinGameDifficulty GameDifficulty, int32_t InheritArchiveIndex);                                // [0xe7af30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameInstance.SaveGame
	// bool SaveGame(int32_t SlotIndex);                                                                                     // [0xe7aca0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameInstance.MarkSkipAutoSavePixelCache
	// void MarkSkipAutoSavePixelCache();                                                                                    // [0xe7a3c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameInstance.MarkLoadWait
	// bool MarkLoadWait(int32_t SlotIndex, class UPaladinSaveGame* SaveGame);                                               // [0xe7a300] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameInstance.HideSplashAndShowGameWindow
	// void HideSplashAndShowGameWindow();                                                                                   // [0xe79b50] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameInstance.GetPaladinGameInstance
	// class UPaladinGameInstance* GetPaladinGameInstance();                                                                 // [0xe79940] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinGameInstance.GetLoadWaitCache
	// bool GetLoadWaitCache(int32_t& SlotIndex, class UPaladinSaveGame*& SaveGame);                                         // [0xe79810] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinGameInstance.CacheScreenShootPixel
	// void CacheScreenShootPixel();                                                                                         // [0xe794b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameInstance.AutoSaveArchive
	// bool AutoSaveArchive();                                                                                               // [0xe79400] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinGameplayAbilityBase
/// Size: 0x0000 (0x000400 - 0x000400)
class UPaladinGameplayAbilityBase : public UGameplayAbility
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinGameplayAbilityBase.MakeTargetLocationInfoFromOtherActor
	// FGameplayAbilityTargetingLocationInfo MakeTargetLocationInfoFromOtherActor(class AActor* OtherAcor);                  // [0xe7a210] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinGameplayAbilityBase.MakeTargetLocationInfoFromLocation
	// FGameplayAbilityTargetingLocationInfo MakeTargetLocationInfoFromLocation(FVector Location);                           // [0xe71a30] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinGameplayAbilityBase.InitFilterAndEffectsContainer
	// FPaladinFilterAndEffectsContainer InitFilterAndEffectsContainer(FPaladinFilterAndEffectsContainer& FilterAndEffectsContainer); // [0xe79ef0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameplayAbilityBase.InitAndApplyFilterEffectsContainerToTargetData
	// void InitAndApplyFilterEffectsContainerToTargetData(FPaladinFilterAndEffectsContainer& FilterAndEffectsContainer, FGameplayAbilityTargetDataHandle& TargetDataHandle, bool bHasOrigin, FVector Origin, bool bHasHitResult, FHitResult HitResult); // [0xe79b70] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameplayAbilityBase.GetTransFormFromTargetLocation
	// FTransform GetTransFormFromTargetLocation(FGameplayAbilityTargetingLocationInfo TargetingLocationInfo);               // [0xe799f0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure 
};

/// Class /Script/Pal7.PaladinGameplayDebuggerInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladinGameplayDebuggerInterface : public UInterface
{ 
public:
};

/// Class /Script/Pal7.PaladinGameplayTask_MoveToTransform
/// Size: 0x0058 (0x000068 - 0x0000C0)
class UPaladinGameplayTask_MoveToTransform : public UGameplayTask
{ 
public:
	SDK_UNDEFINED(16,1553) /* FMulticastInlineDelegate */ __um(OnFinished);                                        // 0x0068   (0x0010)  
	unsigned char                                      UnknownData00_6[0x48];                                      // 0x0078   (0x0048)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinGameplayTask_MoveToTransform.MoveToTransform
	// class UPaladinGameplayTask_MoveToTransform* MoveToTransform(class APaladinCharacterBase* PaladinCharacter, FTransform targetTransform, float LocInterpSpeed, float RotationInterpSpeed, float Tollerance); // [0xe7fe80] Final|Native|Static|Public|HasDefaults|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinGameplayTask_PlaySimpleCameraAnim
/// Size: 0x0058 (0x000068 - 0x0000C0)
class UPaladinGameplayTask_PlaySimpleCameraAnim : public UGameplayTask
{ 
public:
	unsigned char                                      UnknownData00_1[0x58];                                      // 0x0068   (0x0058)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinGameplayTask_PlaySimpleCameraAnim.PlaySimpleCameraAnim
	// class UPaladinGameplayTask_PlaySimpleCameraAnim* PlaySimpleCameraAnim(class APaladinCharacterBase* PaladinCharacter, class UPaladinSimpleCameraAnimData* SimpleCameraAnimData); // [0xe800d0] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinGameplayTask_Repeat
/// Size: 0x0038 (0x000068 - 0x0000A0)
class UPaladinGameplayTask_Repeat : public UGameplayTask
{ 
public:
	SDK_UNDEFINED(16,1554) /* FMulticastInlineDelegate */ __um(OnPerformAction);                                   // 0x0068   (0x0010)  
	SDK_UNDEFINED(16,1555) /* FMulticastInlineDelegate */ __um(OnFinished);                                        // 0x0078   (0x0010)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0088   (0x0018)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinGameplayTask_Repeat.RepeatAction
	// class UPaladinGameplayTask_Repeat* RepeatAction(class APaladinCharacterBase* PaladinCharacter, float TimeBetweenActions, int32_t TotalActionCount); // [0xe80190] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinGameplayTask_SetShaderParameter
/// Size: 0x0040 (0x000068 - 0x0000A8)
class UPaladinGameplayTask_SetShaderParameter : public UGameplayTask
{ 
public:
	unsigned char                                      UnknownData00_3[0x30];                                      // 0x0068   (0x0030)  MISSED
	SDK_UNDEFINED(16,1556) /* TArray<TWeakObjectPtr<UMaterialInstanceDynamic*>> */ __um(DynamicMaterials);         // 0x0098   (0x0010)  


	/// Functions
	// Function /Script/Pal7.PaladinGameplayTask_SetShaderParameter.SetShaderParameter
	// class UPaladinGameplayTask_SetShaderParameter* SetShaderParameter(class APaladinCharacterBase* PaladinCharacter, class UPrimitiveComponent* PrimitiveComponent, EPaladinCurveType CurveType, class UCurveBase* Curve, FName Parammetername); // [0xe81410] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinGameSettingsManagerComponent_Deprecated
/// Size: 0x0018 (0x0000B0 - 0x0000C8)
class UPaladinGameSettingsManagerComponent_Deprecated : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x00B0   (0x0018)  MISSED
};

/// Class /Script/Pal7.PaladinGameUINotifyContainer
/// Size: 0x0400 (0x000028 - 0x000428)
class UPaladinGameUINotifyContainer : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x28];                                      // 0x0000   (0x0028)  MISSED
	SDK_UNDEFINED(16,1557) /* FMulticastInlineDelegate */ __um(IsinBattle);                                        // 0x0028   (0x0010)  
	SDK_UNDEFINED(16,1558) /* FMulticastInlineDelegate */ __um(OnMoneyChanged);                                    // 0x0038   (0x0010)  
	SDK_UNDEFINED(16,1559) /* FMulticastInlineDelegate */ __um(OnWeaponEnhance);                                   // 0x0048   (0x0010)  
	SDK_UNDEFINED(16,1560) /* FMulticastInlineDelegate */ __um(OnLoadArchiveFinished);                             // 0x0058   (0x0010)  
	SDK_UNDEFINED(16,1561) /* FMulticastInlineDelegate */ __um(OnAwakeProgressChanged);                            // 0x0068   (0x0010)  
	SDK_UNDEFINED(16,1562) /* FMulticastInlineDelegate */ __um(OnAwakeStateChanged);                               // 0x0078   (0x0010)  
	SDK_UNDEFINED(16,1563) /* FMulticastInlineDelegate */ __um(OnSuperAwakeStateChanged);                          // 0x0088   (0x0010)  
	SDK_UNDEFINED(16,1564) /* FMulticastInlineDelegate */ __um(OnLoadArchiveHelper);                               // 0x0098   (0x0010)  
	SDK_UNDEFINED(16,1565) /* FMulticastInlineDelegate */ __um(OnSwitchHero);                                      // 0x00A8   (0x0010)  
	SDK_UNDEFINED(16,1566) /* FMulticastInlineDelegate */ __um(OnUpdateSkillPanel);                                // 0x00B8   (0x0010)  
	SDK_UNDEFINED(16,1567) /* FMulticastInlineDelegate */ __um(OnMonsterDeadForUI);                                // 0x00C8   (0x0010)  
	SDK_UNDEFINED(16,1568) /* FMulticastInlineDelegate */ __um(OnInOutBossFighting);                               // 0x00D8   (0x0010)  
	SDK_UNDEFINED(16,1569) /* FMulticastInlineDelegate */ __um(OnChangeSkillPage);                                 // 0x00E8   (0x0010)  
	SDK_UNDEFINED(16,1570) /* FMulticastInlineDelegate */ __um(OnHPChangeNumber);                                  // 0x00F8   (0x0010)  
	SDK_UNDEFINED(16,1571) /* FMulticastInlineDelegate */ __um(OnMPChangeNumber);                                  // 0x0108   (0x0010)  
	SDK_UNDEFINED(16,1572) /* FMulticastInlineDelegate */ __um(OnTeamQueueChange);                                 // 0x0118   (0x0010)  
	SDK_UNDEFINED(16,1573) /* FMulticastInlineDelegate */ __um(OnShowHideQTETips);                                 // 0x0128   (0x0010)  
	SDK_UNDEFINED(16,1574) /* FMulticastInlineDelegate */ __um(OnKeyPressed);                                      // 0x0138   (0x0010)  
	SDK_UNDEFINED(16,1575) /* FMulticastInlineDelegate */ __um(OnHeroLockChangeState);                             // 0x0148   (0x0010)  
	SDK_UNDEFINED(16,1576) /* FMulticastInlineDelegate */ __um(OnChangeBossHPBarTarget);                           // 0x0158   (0x0010)  
	SDK_UNDEFINED(16,1577) /* FMulticastInlineDelegate */ __um(OnChangeControlDevice);                             // 0x0168   (0x0010)  
	SDK_UNDEFINED(16,1578) /* FMulticastInlineDelegate */ __um(OnUpdateMouseCursor);                               // 0x0178   (0x0010)  
	SDK_UNDEFINED(16,1579) /* FMulticastInlineDelegate */ __um(OnUIOpenDelegate);                                  // 0x0188   (0x0010)  
	SDK_UNDEFINED(16,1580) /* FMulticastInlineDelegate */ __um(OnPetShowStateChanged);                             // 0x0198   (0x0010)  
	SDK_UNDEFINED(16,1581) /* FMulticastInlineDelegate */ __um(OnHeroShowStateChanged);                            // 0x01A8   (0x0010)  
	SDK_UNDEFINED(16,1582) /* FMulticastInlineDelegate */ __um(OnHeroShowLocationTrace);                           // 0x01B8   (0x0010)  
	SDK_UNDEFINED(16,1583) /* FMulticastInlineDelegate */ __um(OnLoadModelViewForUIStart);                         // 0x01C8   (0x0010)  
	SDK_UNDEFINED(16,1584) /* FMulticastInlineDelegate */ __um(OnLoadModelViewForUICompleted);                     // 0x01D8   (0x0010)  
	SDK_UNDEFINED(16,1585) /* FMulticastInlineDelegate */ __um(OnLoadModelViewForEquipUIStart);                    // 0x01E8   (0x0010)  
	SDK_UNDEFINED(16,1586) /* FMulticastInlineDelegate */ __um(OnLoadModelViewForEquipUICompleted);                // 0x01F8   (0x0010)  
	SDK_UNDEFINED(16,1587) /* FMulticastInlineDelegate */ __um(OnBeginOverlapArea);                                // 0x0208   (0x0010)  
	SDK_UNDEFINED(16,1588) /* FMulticastInlineDelegate */ __um(OnEndOverlapArea);                                  // 0x0218   (0x0010)  
	SDK_UNDEFINED(16,1589) /* FMulticastInlineDelegate */ __um(OnBubbleBegin);                                     // 0x0228   (0x0010)  
	SDK_UNDEFINED(16,1590) /* FMulticastInlineDelegate */ __um(OnBubbleEnd);                                       // 0x0238   (0x0010)  
	SDK_UNDEFINED(16,1591) /* FMulticastInlineDelegate */ __um(OnBubbleShow);                                      // 0x0248   (0x0010)  
	SDK_UNDEFINED(16,1592) /* FMulticastInlineDelegate */ __um(OnTipsChanged);                                     // 0x0258   (0x0010)  
	SDK_UNDEFINED(16,1593) /* FMulticastInlineDelegate */ __um(ShowTipsDelegate);                                  // 0x0268   (0x0010)  
	SDK_UNDEFINED(16,1594) /* FMulticastInlineDelegate */ __um(HideTipsDelegate);                                  // 0x0278   (0x0010)  
	SDK_UNDEFINED(16,1595) /* FMulticastInlineDelegate */ __um(OnInteractionIconChanged);                          // 0x0288   (0x0010)  
	SDK_UNDEFINED(16,1596) /* FMulticastInlineDelegate */ __um(OnQuestTracked);                                    // 0x0298   (0x0010)  
	SDK_UNDEFINED(16,1597) /* FMulticastInlineDelegate */ __um(OnDebugUITeamAttributeList);                        // 0x02A8   (0x0010)  
	SDK_UNDEFINED(16,1598) /* FMulticastInlineDelegate */ __um(OnDebugUILeaderAttributeList);                      // 0x02B8   (0x0010)  
	SDK_UNDEFINED(16,1599) /* FMulticastInlineDelegate */ __um(OnDebugUILeaderTargetAttributeList);                // 0x02C8   (0x0010)  
	SDK_UNDEFINED(16,1600) /* FMulticastInlineDelegate */ __um(OnDebugUICameraModifierList);                       // 0x02D8   (0x0010)  
	SDK_UNDEFINED(16,1601) /* FMulticastInlineDelegate */ __um(OnDebugUIOpenChallengeBoss);                        // 0x02E8   (0x0010)  
	SDK_UNDEFINED(16,1602) /* FMulticastInlineDelegate */ __um(OnDebugUIPrintAllHeroDamage);                       // 0x02F8   (0x0010)  
	SDK_UNDEFINED(16,1603) /* FMulticastInlineDelegate */ __um(OnUpdateHeroCharacter);                             // 0x0308   (0x0010)  
	SDK_UNDEFINED(16,1604) /* FMulticastInlineDelegate */ __um(OnHeroSelectedDelegate);                            // 0x0318   (0x0010)  
	SDK_UNDEFINED(16,1605) /* FMulticastInlineDelegate */ __um(OnBossStateDelegate);                               // 0x0328   (0x0010)  
	SDK_UNDEFINED(16,1606) /* FMulticastInlineDelegate */ __um(OnBossDebuffStateDelegate);                         // 0x0338   (0x0010)  
	SDK_UNDEFINED(16,1607) /* FMulticastInlineDelegate */ __um(OnHeroShowChanged);                                 // 0x0348   (0x0010)  
	SDK_UNDEFINED(16,1608) /* FMulticastInlineDelegate */ __um(OnClearUsedItemCount);                              // 0x0358   (0x0010)  
	SDK_UNDEFINED(16,1609) /* FMulticastInlineDelegate */ __um(OnHotItemKeyEvent);                                 // 0x0368   (0x0010)  
	SDK_UNDEFINED(16,1610) /* FMulticastInlineDelegate */ __um(OnChangePhotoMode);                                 // 0x0378   (0x0010)  
	SDK_UNDEFINED(16,1611) /* FMulticastInlineDelegate */ __um(FunctionOpenStateChanged);                          // 0x0388   (0x0010)  
	SDK_UNDEFINED(16,1612) /* FMulticastInlineDelegate */ __um(OnUpdateBuff);                                      // 0x0398   (0x0010)  
	SDK_UNDEFINED(16,1613) /* FMulticastInlineDelegate */ __um(ScreenshotTextureCreatedDelegate);                  // 0x03A8   (0x0010)  
	SDK_UNDEFINED(16,1614) /* FMulticastInlineDelegate */ __um(OnPhotoUIShowStateChange);                          // 0x03B8   (0x0010)  
	SDK_UNDEFINED(16,1615) /* FMulticastInlineDelegate */ __um(OnCursorStateDelegate);                             // 0x03C8   (0x0010)  
	SDK_UNDEFINED(16,1616) /* FMulticastInlineDelegate */ __um(OnAutoSave);                                        // 0x03D8   (0x0010)  
	SDK_UNDEFINED(16,1617) /* FMulticastInlineDelegate */ __um(OnUpdateNVRTXSettingsDelegate);                     // 0x03E8   (0x0010)  
	SDK_UNDEFINED(16,1618) /* FMulticastInlineDelegate */ __um(OnInteractionStateChange);                          // 0x03F8   (0x0010)  
	SDK_UNDEFINED(16,1619) /* FMulticastInlineDelegate */ __um(OnPaladinHeroDeadDelegate);                         // 0x0408   (0x0010)  
	SDK_UNDEFINED(16,1620) /* FMulticastInlineDelegate */ __um(OnHeroAssetsLoaded);                                // 0x0418   (0x0010)  


	/// Functions
	// Function /Script/Pal7.PaladinGameUINotifyContainer.GetUIUINotifyContainer
	// class UPaladinGameUINotifyContainer* GetUIUINotifyContainer();                                                        // [0xe7fba0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Struct /Script/Pal7.PaladinPlayerCustomKeySetting
/// Size: 0x0038 (0x000000 - 0x000038)
struct FPaladinPlayerCustomKeySetting
{ 
	EPaladinKeyEventName                               EventNameEnum;                                              // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	FKey                                               KeyBoardKey;                                                // 0x0008   (0x0018)  
	FKey                                               GamePadKey;                                                 // 0x0020   (0x0018)  
};

/// Class /Script/Pal7.PaladinGameUserSettings
/// Size: 0x0158 (0x000120 - 0x000278)
class UPaladinGameUserSettings : public UGameUserSettings
{ 
public:
	float                                              ExposureOffset;                                             // 0x0120   (0x0004)  
	float                                              LastVoiceVolume;                                            // 0x0124   (0x0004)  
	float                                              LastMusicVolume;                                            // 0x0128   (0x0004)  
	float                                              LastEffectVolume;                                           // 0x012C   (0x0004)  
	float                                              LastGlobalVolume;                                           // 0x0130   (0x0004)  
	float                                              LastSuppressionVolume;                                      // 0x0134   (0x0004)  
	float                                              VoiceVolume;                                                // 0x0138   (0x0004)  
	float                                              MusicVolume;                                                // 0x013C   (0x0004)  
	float                                              EffectVolume;                                               // 0x0140   (0x0004)  
	float                                              GlobalVolume;                                               // 0x0144   (0x0004)  
	float                                              SuppressionVolume;                                          // 0x0148   (0x0004)  
	float                                              HorizontalSpeed;                                            // 0x014C   (0x0004)  
	float                                              VerticalSpeed;                                              // 0x0150   (0x0004)  
	float                                              DisplayGamma;                                               // 0x0154   (0x0004)  
	bool                                               bHorizontalReverse : 1;                                     // 0x0158:0 (0x0001)  
	bool                                               bVerticalReverse : 1;                                       // 0x0158:1 (0x0001)  
	bool                                               bForceFeedbackEnabled : 1;                                  // 0x0158:2 (0x0001)  
	bool                                               bCameraCorrectionEnabled : 1;                               // 0x0158:3 (0x0001)  
	bool                                               bMinimapRotatableEnabled : 1;                               // 0x0158:4 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0159   (0x0003)  MISSED
	int32_t                                            DialogueTextFontSize;                                       // 0x015C   (0x0004)  
	bool                                               bProfessionalModeleEnabled : 1;                             // 0x0160:0 (0x0001)  
	bool                                               bBattleNumShowEnabled : 1;                                  // 0x0160:1 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x0161   (0x0003)  MISSED
	int32_t                                            PaladinFullscreenMode;                                      // 0x0164   (0x0004)  
	int32_t                                            GraphicsQualityLevel;                                       // 0x0168   (0x0004)  
	int32_t                                            ViewDistanceQuality;                                        // 0x016C   (0x0004)  
	int32_t                                            AntiAliasingQuality;                                        // 0x0170   (0x0004)  
	int32_t                                            ShadowQuality;                                              // 0x0174   (0x0004)  
	int32_t                                            PostProcessQuality;                                         // 0x0178   (0x0004)  
	int32_t                                            TextureQuality;                                             // 0x017C   (0x0004)  
	int32_t                                            FoliageQuality;                                             // 0x0180   (0x0004)  
	int32_t                                            EffectQuality;                                              // 0x0184   (0x0004)  
	int32_t                                            ShadingQuality;                                             // 0x0188   (0x0004)  
	int32_t                                            EnvInteractionLevel;                                        // 0x018C   (0x0004)  
	int32_t                                            MaterialQualityLevel;                                       // 0x0190   (0x0004)  
	int32_t                                            PaladinFogValue;                                            // 0x0194   (0x0004)  
	bool                                               bPaladinMotionBlur : 1;                                     // 0x0198:0 (0x0001)  
	unsigned char                                      UnknownData02_4[0x3];                                       // 0x0199   (0x0003)  MISSED
	int32_t                                            DetailMode;                                                 // 0x019C   (0x0004)  
	int32_t                                            RefractionQuality;                                          // 0x01A0   (0x0004)  
	int32_t                                            ScreenPercentageSetting;                                    // 0x01A4   (0x0004)  
	SDK_UNDEFINED(16,1621) /* FMulticastInlineDelegate */ __um(OnChangedKeySettings);                              // 0x01A8   (0x0010)  
	TArray<FPaladinPlayerCustomKeySetting>             KeySettings;                                                // 0x01B8   (0x0010)  
	int32_t                                            AxisMapSpeedScalarKeyboard;                                 // 0x01C8   (0x0004)  
	int32_t                                            AxisMapSpeedScalarGamepad;                                  // 0x01CC   (0x0004)  
	SDK_UNDEFINED(16,1622) /* FMulticastInlineDelegate */ __um(OnChangeRayTracing);                                // 0x01D0   (0x0010)  
	SDK_UNDEFINED(16,1623) /* FMulticastInlineDelegate */ __um(OnChangedPreviewKeySettings);                       // 0x01E0   (0x0010)  
	SDK_UNDEFINED(16,1624) /* FMulticastInlineDelegate */ __um(OnChangedPreviewKeyItem);                           // 0x01F0   (0x0010)  
	SDK_UNDEFINED(16,1625) /* FMulticastInlineDelegate */ __um(OnChangeShowLimit);                                 // 0x0200   (0x0010)  
	SDK_UNDEFINED(16,1626) /* FMulticastInlineDelegate */ __um(OnChangeProfessionalModel);                         // 0x0210   (0x0010)  
	unsigned char                                      UnknownData03_5[0x10];                                      // 0x0220   (0x0010)  MISSED
	EPaladinKeyEventName                               SelectedEventName;                                          // 0x0230   (0x0001)  
	bool                                               bSelectedKeyboard : 1;                                      // 0x0231:0 (0x0001)  
	unsigned char                                      UnknownData04_4[0x2];                                       // 0x0232   (0x0002)  MISSED
	int32_t                                            bNVRTX;                                                     // 0x0234   (0x0004)  
	int32_t                                            bNVDLSS;                                                    // 0x0238   (0x0004)  
	float                                              SharpnessValue;                                             // 0x023C   (0x0004)  
	bool                                               bSpotLightEnabled : 1;                                      // 0x0240:0 (0x0001)  
	unsigned char                                      UnknownData05_6[0x37];                                      // 0x0241   (0x0037)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinGameUserSettings.SwitchNVRTX
	// void SwitchNVRTX(int32_t InValue);                                                                                    // [0xe81910] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SwitchNVDLSS_Sharpness
	// void SwitchNVDLSS_Sharpness(float InValue);                                                                           // [0xe81890] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SwitchNVDLSS
	// void SwitchNVDLSS(int32_t InValue);                                                                                   // [0xe81810] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SwitchEnableSpotLight
	// void SwitchEnableSpotLight(char bEnable);                                                                             // [0xe81790] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetVoiceVolume
	// void SetVoiceVolume(float InVoiceVolume);                                                                             // [0xe81710] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetVerticalSpeed
	// void SetVerticalSpeed(float InValue);                                                                                 // [0xe81690] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetVerticalReverse
	// void SetVerticalReverse(char InValue);                                                                                // [0xe81610] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetSuppressionVolume
	// void SetSuppressionVolume(float InSuppressionVolume);                                                                 // [0xe81590] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetSQRayTracing
	// void SetSQRayTracing();                                                                                               // [0xe812e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetSelectedKeyboard
	// void SetSelectedKeyboard(bool bSelected);                                                                             // [0xe81380] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetSelectedEventName
	// void SetSelectedEventName(EPaladinKeyEventName EventName);                                                            // [0xe81300] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetRefractionQuality
	// void SetRefractionQuality(int32_t InValue);                                                                           // [0xe81260] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetProfessionalModeleEnabled
	// void SetProfessionalModeleEnabled(int32_t InValue);                                                                   // [0xe811e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetPreviewKeySetting
	// void SetPreviewKeySetting(FPaladinPlayerCustomKeySetting& NewSetting, FKey LastKey);                                  // [0xe81030] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetPaladlinViewDistanceQuality
	// void SetPaladlinViewDistanceQuality(int32_t value);                                                                   // [0xe80fb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetPaladinVisualEffectQuality
	// void SetPaladinVisualEffectQuality(int32_t value);                                                                    // [0xe80f30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetPaladinTextureQuality
	// void SetPaladinTextureQuality(int32_t value);                                                                         // [0xe80eb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetPaladinShadowQuality
	// void SetPaladinShadowQuality(int32_t value);                                                                          // [0xe80e30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetPaladinShadingQuality
	// void SetPaladinShadingQuality(int32_t value);                                                                         // [0xe80db0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetPaladinScreenPercentageSetting
	// void SetPaladinScreenPercentageSetting(int32_t value);                                                                // [0xe80d30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetPaladinPostProcessingQuality
	// void SetPaladinPostProcessingQuality(int32_t value);                                                                  // [0xe80cb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetPaladinFullscreenMode
	// void SetPaladinFullscreenMode(TEnumAsByte<EWindowMode> InFullscreenMode);                                             // [0xe80c30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetPaladinFoliageQuality
	// void SetPaladinFoliageQuality(int32_t value);                                                                         // [0xe80bb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetPaladinAntiAliasingQuality
	// void SetPaladinAntiAliasingQuality(int32_t value);                                                                    // [0xe80b30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetMusicVolume
	// void SetMusicVolume(float InMusicVolume);                                                                             // [0xe80ab0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetMotionBlur
	// void SetMotionBlur(char InValue);                                                                                     // [0xe80a30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetMinimalRotatableEnabled
	// void SetMinimalRotatableEnabled(char InValue);                                                                        // [0xe809b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetMaterialQualityLevel
	// void SetMaterialQualityLevel(int32_t InValue);                                                                        // [0xe80930] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetHorizontalSpeed
	// void SetHorizontalSpeed(float InValue);                                                                               // [0xe808b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetHorizontalReverse
	// void SetHorizontalReverse(char InValue);                                                                              // [0xe80830] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetGlobalVolume
	// void SetGlobalVolume(float InGlobalVolume);                                                                           // [0xe807b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetForceFeedbackEnabled
	// void SetForceFeedbackEnabled(char InValue);                                                                           // [0xe80730] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetFog
	// void SetFog(int32_t InValue);                                                                                         // [0xe806b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetExposureOffset
	// void SetExposureOffset(float value);                                                                                  // [0xe80630] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetEnvInteractionLevel
	// void SetEnvInteractionLevel(int32_t InValue);                                                                         // [0xe805b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetEffectVolume
	// void SetEffectVolume(float InEffectVolume);                                                                           // [0xe80530] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetDisplayGamma
	// void SetDisplayGamma(float InValue);                                                                                  // [0xe804b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetDialogueTextFontSize
	// void SetDialogueTextFontSize(int32_t InValue);                                                                        // [0xe80430] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetDetailMode
	// void SetDetailMode(int32_t InValue);                                                                                  // [0xe803b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetCameraCorrectionEnabled
	// void SetCameraCorrectionEnabled(char InValue);                                                                        // [0xe80330] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.SetBattleNumShowEnabled
	// void SetBattleNumShowEnabled(int32_t InValue);                                                                        // [0xe802b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.RevertAudioSettings
	// void RevertAudioSettings();                                                                                           // [0xa28550] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.ResetKeySettings
	// void ResetKeySettings();                                                                                              // [0xe80290] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.PaladinSetToDefaults
	// void PaladinSetToDefaults(ESettingType Settingtype);                                                                  // [0xe80050] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.IsWindowsVersionPass
	// bool IsWindowsVersionPass();                                                                                          // [0xe7fe50] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinGameUserSettings.IsRayTracingSwiched
	// bool IsRayTracingSwiched();                                                                                           // [0xe4ada0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.IsPaladinWinDX12
	// bool IsPaladinWinDX12();                                                                                              // [0xe7fe20] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinGameUserSettings.IsPaladinRayTracingEnabled
	// bool IsPaladinRayTracingEnabled();                                                                                    // [0xe7fdf0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinGameUserSettings.IsPaladinPS4
	// bool IsPaladinPS4();                                                                                                  // [0xe7fdc0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinGameUserSettings.IsKeySettingDirty
	// bool IsKeySettingDirty();                                                                                             // [0xe7fd90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.IsHadUndefinedKeys
	// bool IsHadUndefinedKeys();                                                                                            // [0xe7fd60] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.IsGraphicsLowLimit
	// bool IsGraphicsLowLimit();                                                                                            // [0xe7fd30] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinGameUserSettings.IsGraphicsHighLimit
	// bool IsGraphicsHighLimit();                                                                                           // [0xe7fd00] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinGameUserSettings.IsGPUUserDriverVersionPass
	// bool IsGPUUserDriverVersionPass();                                                                                    // [0xe7fcd0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinGameUserSettings.IsGPUHardwareSupportRTX
	// bool IsGPUHardwareSupportRTX();                                                                                       // [0xe7fca0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinGameUserSettings.IsCanApplyCurrentScreenResolution
	// bool IsCanApplyCurrentScreenResolution();                                                                             // [0xe7fc70] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinGameUserSettings.IsAudiosDirty
	// bool IsAudiosDirty();                                                                                                 // [0xe7fc40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetVoiceVolume
	// float GetVoiceVolume();                                                                                               // [0xe7fc20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetVerticalSpeed
	// float GetVerticalSpeed();                                                                                             // [0xe7fc00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetVerticalReverse
	// bool GetVerticalReverse();                                                                                            // [0xe7fbd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetSuppressionVolume
	// float GetSuppressionVolume();                                                                                         // [0xe7fb80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetSelectedEventName
	// EPaladinKeyEventName GetSelectedEventName();                                                                          // [0xe7fb60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetRefractionQuality
	// int32_t GetRefractionQuality();                                                                                       // [0xe7fb40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetProfessionalModeleEnabled
	// bool GetProfessionalModeleEnabled();                                                                                  // [0xe7fb10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetPaladinVisualEffectQuality
	// int32_t GetPaladinVisualEffectQuality();                                                                              // [0xe7faf0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetPaladinViewDistanceQuality
	// int32_t GetPaladinViewDistanceQuality();                                                                              // [0xe7fad0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetPaladinTextureQuality
	// int32_t GetPaladinTextureQuality();                                                                                   // [0xe7fab0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetPaladinShadowQuality
	// int32_t GetPaladinShadowQuality();                                                                                    // [0xe7fa90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetPaladinShadingQuality
	// int32_t GetPaladinShadingQuality();                                                                                   // [0xe7fa70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetPaladinScreenResolutionList
	// TArray<FIntPoint> GetPaladinScreenResolutionList();                                                                   // [0xe7f9b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetPaladinScreenResolution
	// FIntPoint GetPaladinScreenResolution();                                                                               // [0xe7f970] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinGameUserSettings.GetPaladinScreenPercentageSetting
	// int32_t GetPaladinScreenPercentageSetting();                                                                          // [0xe7f950] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetPaladinPostProcessingQuality
	// int32_t GetPaladinPostProcessingQuality();                                                                            // [0xe7f930] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetPaladinGameUserSettings
	// class UPaladinGameUserSettings* GetPaladinGameUserSettings();                                                         // [0xe7f900] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinGameUserSettings.GetPaladinGameHardwareType
	// EHardwareType GetPaladinGameHardwareType();                                                                           // [0xe7f8d0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinGameUserSettings.GetPaladinFullscreenMode
	// TEnumAsByte<EWindowMode> GetPaladinFullscreenMode();                                                                  // [0xe7f890] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetPaladinFoliageQuality
	// int32_t GetPaladinFoliageQuality();                                                                                   // [0xe7f870] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetPaladinAntiAliasingQuality
	// int32_t GetPaladinAntiAliasingQuality();                                                                              // [0xe7f850] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetNVRTX
	// int32_t GetNVRTX();                                                                                                   // [0xe7f820] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetNVDLSS_Sharpness
	// float GetNVDLSS_Sharpness();                                                                                          // [0xe7f800] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetNVDLSS
	// int32_t GetNVDLSS();                                                                                                  // [0xe7f7e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetMusicVolume
	// float GetMusicVolume();                                                                                               // [0xe7f7c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetMotionBlur
	// char GetMotionBlur();                                                                                                 // [0xe7f790] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetMinimapRotatableEnabled
	// bool GetMinimapRotatableEnabled();                                                                                    // [0xe7f760] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetMaterialQualityLevel
	// int32_t GetMaterialQualityLevel();                                                                                    // [0xe7f740] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetIsSelectedKeyboard
	// bool GetIsSelectedKeyboard();                                                                                         // [0xe7f710] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetHorizontalSpeed
	// float GetHorizontalSpeed();                                                                                           // [0xe7f6f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetHorizontalReverse
	// bool GetHorizontalReverse();                                                                                          // [0xe7f6c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetGraphicsDefaultVaule
	// char GetGraphicsDefaultVaule();                                                                                       // [0xe7f690] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinGameUserSettings.GetGPUMemoryInGB
	// float GetGPUMemoryInGB();                                                                                             // [0xe7f5f0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinGameUserSettings.GetGlobalVolume
	// float GetGlobalVolume();                                                                                              // [0xe7f670] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetForceFeedbackEnabled
	// bool GetForceFeedbackEnabled();                                                                                       // [0xe7f5c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetFog
	// int32_t GetFog();                                                                                                     // [0xe7f5a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetExposureOffset
	// float GetExposureOffset();                                                                                            // [0xe7f580] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetEnvInteractionLevel
	// int32_t GetEnvInteractionLevel();                                                                                     // [0xe7f560] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetEnableSpotLight
	// char GetEnableSpotLight();                                                                                            // [0xe7f530] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetEffectVolume
	// float GetEffectVolume();                                                                                              // [0xe7f510] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetDisplayGamma
	// float GetDisplayGamma();                                                                                              // [0xe7f4f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetDialogueTextFontSize
	// int32_t GetDialogueTextFontSize();                                                                                    // [0xe7f4d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetDetailMode
	// int32_t GetDetailMode();                                                                                              // [0xe7f4b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetDefaultRayTracingVaule
	// int32_t GetDefaultRayTracingVaule();                                                                                  // [0xe7f480] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinGameUserSettings.GetDefaultNVDLSSValue
	// int32_t GetDefaultNVDLSSValue();                                                                                      // [0xe7f450] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinGameUserSettings.GetCameraCorrectionEnabled
	// bool GetCameraCorrectionEnabled();                                                                                    // [0xe7f420] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.GetBattleNumShowEnabled
	// bool GetBattleNumShowEnabled();                                                                                       // [0xe7f3f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinGameUserSettings.FindPreviewKeySetting
	// bool FindPreviewKeySetting(EPaladinKeyEventName EventName, FPaladinPlayerCustomKeySetting& OutSetting);               // [0xe7f2a0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.FindKeySetting
	// bool FindKeySetting(EPaladinKeyEventName EventName, FPaladinPlayerCustomKeySetting& OutSetting);                      // [0xe7f150] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.ExitSQGraphicsQuality
	// void ExitSQGraphicsQuality();                                                                                         // [0xe7f130] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.ExistPreviewKeySetting
	// bool ExistPreviewKeySetting(EPaladinKeyEventName EventName);                                                          // [0xe7f0a0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinGameUserSettings.EnterSQGraphicsQuality
	// void EnterSQGraphicsQuality(TMap<FString, float> Consoles);                                                           // [0xe7ef60] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.ConfirmAudioSettings
	// void ConfirmAudioSettings();                                                                                          // [0xa28570] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.ClampSettingValue
	// int32_t ClampSettingValue(int32_t InValue, int32_t MinValue, int32_t MaxValue);                                       // [0xe7ee60] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinGameUserSettings.CalcGPUUsage
	// bool CalcGPUUsage(float& FinalUsage, bool& OutOfGpuMem);                                                              // [0xe7ed70] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinGameUserSettings.ApplyKeySettings
	// void ApplyKeySettings();                                                                                              // [0xe7ed50] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinGameViewportClient
/// Size: 0x0000 (0x000340 - 0x000340)
class UPaladinGameViewportClient : public UGameViewportClient
{ 
public:
};

/// Struct /Script/Pal7.PaladinDynamicStrikeAttr
/// Size: 0x0024 (0x000000 - 0x000024)
struct FPaladinDynamicStrikeAttr
{ 
	float                                              DamageRate;                                                 // 0x0000   (0x0004)  
	float                                              ExtraPhysicalAtk;                                           // 0x0004   (0x0004)  
	float                                              ExtraSpellAtk;                                              // 0x0008   (0x0004)  
	float                                              ExtraCritChance;                                            // 0x000C   (0x0004)  
	EAbilityElementalType                              DynamicElementType;                                         // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0011   (0x0003)  MISSED
	float                                              BackstabDamageRate;                                         // 0x0014   (0x0004)  
	EAbilityElementalType                              DynamicExtraElementType;                                    // 0x0018   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0019   (0x0003)  MISSED
	float                                              DynamicExtraElementRatio;                                   // 0x001C   (0x0004)  
	bool                                               bCrit;                                                      // 0x0020   (0x0001)  
	bool                                               bBackstabing;                                               // 0x0021   (0x0001)  
	unsigned char                                      UnknownData02_6[0x2];                                       // 0x0022   (0x0002)  MISSED
};

/// Class /Script/Pal7.PaladinGATargetActor
/// Size: 0x00D0 (0x000340 - 0x000410)
class APaladinGATargetActor : public AGameplayAbilityTargetActor
{ 
public:
	TArray<class AActor*>                              WeaponCheck_HitActors;                                      // 0x0340   (0x0010)  
	unsigned char                                      UnknownData00_5[0x30];                                      // 0x0350   (0x0030)  MISSED
	FRotator                                           HitNormalRotation;                                          // 0x0380   (0x000C)  
	int32_t                                            TargetHitNum;                                               // 0x038C   (0x0004)  
	unsigned char                                      UnknownData01_5[0x28];                                      // 0x0390   (0x0028)  MISSED
	class APaladinCharacterBase*                       PaladinCharacter;                                           // 0x03B8   (0x0008)  
	class UPaladinComboAbility*                        PaladinComboAbility;                                        // 0x03C0   (0x0008)  
	int32_t                                            HaveMadeEffectIdx;                                          // 0x03C8   (0x0004)  
	bool                                               DestroyWhenConfirmTarget;                                   // 0x03CC   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x03CD   (0x0003)  MISSED
	FPaladinDynamicStrikeAttr                          DynamicStrikeAttr;                                          // 0x03D0   (0x0024)  
	bool                                               bRefreshCritOnConfirm;                                      // 0x03F4   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x03F5   (0x0003)  MISSED
	float                                              SpawnTimeFromAbilityActive;                                 // 0x03F8   (0x0004)  
	float                                              TotalTick;                                                  // 0x03FC   (0x0004)  
	unsigned char                                      UnknownData04_6[0x10];                                      // 0x0400   (0x0010)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinGATargetActor.TriggerASQEvent
	// void TriggerASQEvent(int32_t InHaveMadeEffectIdx);                                                                    // [0xe8f140] Final|Native|Protected 
	// Function /Script/Pal7.PaladinGATargetActor.TranslateHitResults
	// void TranslateHitResults(class ACharacter* ReferCharacter, TArray<FHitResult> HitResults, TArray<FHitResult>& OutHitResults); // [0xe8efc0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinGATargetActor.TranslateActorsToHitResults
	// void TranslateActorsToHitResults(TArray<AActor*> InActors, TArray<FHitResult>& OutHitResults);                        // [0xe8ee70] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinGATargetActor.StartTargetingFalledAndPendingEndTaskNextTick
	// void StartTargetingFalledAndPendingEndTaskNextTick();                                                                 // [0xe8ee50] Final|Native|Protected|BlueprintCallable 
	// Function /Script/Pal7.PaladinGATargetActor.SetMadeEffectIdx
	// bool SetMadeEffectIdx(int32_t InHaveMadeEffectIdx);                                                                   // [0xe8edc0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/Pal7.PaladinGATargetActor.RefreshCrit
	// void RefreshCrit();                                                                                                   // [0xe8eda0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/Pal7.PaladinGATargetActor.RadiusCheck
	// bool RadiusCheck(FVector Start, float Radius, bool bTraceComplex, TEnumAsByte<ECollisionChannel> CollisionChannel, TArray<AActor*>& OverLapActors); // [0xe8ebe0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinGATargetActor.OnTargetDataRedady
	// void OnTargetDataRedady(FGameplayAbilityTargetDataHandle& Data);                                                      // [0x15dd8c0] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/Pal7.PaladinGATargetActor.OnStartTargeting
	// void OnStartTargeting();                                                                                              // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinGATargetActor.OnConfirmTargeting
	// void OnConfirmTargeting();                                                                                            // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinGATargetActor.MakeWeaponCheck
	// void MakeWeaponCheck(bool bTraceComplex, TEnumAsByte<ECollisionChannel> TraceTrannel, TArray<FHitResult>& OutHitResults, FName WeaponCollisionName, class USkeletalMeshComponent* WeaponMeshCom); // [0xe8ea30] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinGATargetActor.LineTraceMulti
	// TArray<FHitResult> LineTraceMulti(FVector TraceStart, FVector TraceEnd, bool bTraceComplex, TEnumAsByte<ECollisionChannel> TraceTrannel); // [0xe8e880] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinGATargetActor.GetOwningAbility
	// class UGameplayAbility* GetOwningAbility();                                                                           // [0xe8e860] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGATargetActor.GetAbilityFireRoatatorByLockTargetInfo
	// FRotator GetAbilityFireRoatatorByLockTargetInfo();                                                                    // [0xe8e820] Final|Native|Protected|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinGATargetActor.GetAbilityFireLocationByLockTargetInfo
	// FVector GetAbilityFireLocationByLockTargetInfo();                                                                     // [0xe8e7e0] Final|Native|Protected|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinGATargetActor.EndTask
	// void EndTask();                                                                                                       // [0xe8e7c0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/Pal7.PaladinGATargetActor.ConvertTimeToDelay
	// float ConvertTimeToDelay(float ExcuteTime);                                                                           // [0xe8e630] Final|Native|Protected|BlueprintCallable 
	// Function /Script/Pal7.PaladinGATargetActor.ConfirmTargetDataHandleFromActors
	// void ConfirmTargetDataHandleFromActors(TArray<AActor*>& Actors);                                                      // [0xe8e580] Final|Native|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinGATargetActor.ConfirmTargetDataHandleFromActor
	// void ConfirmTargetDataHandleFromActor(class AActor* Actor);                                                           // [0xe8e500] Final|Native|Protected|BlueprintCallable 
	// Function /Script/Pal7.PaladinGATargetActor.ConfirmTargetDataHandleByHitResults
	// void ConfirmTargetDataHandleByHitResults(TArray<FHitResult>& HitResults);                                             // [0xe8e450] Final|Native|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinGATargetActor.ConfirmTargetDataHandleByHitResult
	// void ConfirmTargetDataHandleByHitResult(FHitResult& HitResult);                                                       // [0xe8e370] Final|Native|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinGATargetActor.ConeCheck
	// bool ConeCheck(FVector Start, float FOV, float Length, float Height, bool BIs2DQuery, FRotator Orientation, bool bTraceComplex, TEnumAsByte<ECollisionChannel> CollisionChannel, TArray<AActor*>& OverLapActors); // [0xe8e0a0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinGATargetActor.CapsuleSweepCheck
	// bool CapsuleSweepCheck(FVector Start, FVector& End, float Radius, bool bTraceComplex, TEnumAsByte<ECollisionChannel> CollisionChannel, TArray<FHitResult>& OutHitResults); // [0xe8de90] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinGATargetActor.CapsuleCheck
	// bool CapsuleCheck(FVector Start, FVector& End, float Radius, bool bTraceComplex, TEnumAsByte<ECollisionChannel> CollisionChannel, TArray<AActor*>& OverLapActors); // [0xe8dc80] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinGATargetActor.BoxSweepCheck
	// bool BoxSweepCheck(class ACharacter* ReferCharacter, FVector Start, FVector& End, FVector HalfSize, FRotator Orientation, TEnumAsByte<ECollisionChannel> CollisionChannel, bool bTraceComplex, TArray<FHitResult>& OutHitResults); // [0xe8d9e0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinGATargetActor.BoxCheck
	// bool BoxCheck(FVector Start, FVector BoxExtent, FRotator BoxRotator, bool bTraceComplex, TEnumAsByte<ECollisionChannel> CollisionChannel, TArray<AActor*>& OverLapActors); // [0xe8d7c0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
};

/// Struct /Script/Pal7.PaladinGameplayTags
/// Size: 0x00E8 (0x000000 - 0x0000E8)
struct FPaladinGameplayTags
{ 
	FGameplayTag                                       Event_MontageNotify;                                        // 0x0000   (0x0008)  
	FGameplayTag                                       Event_ChangeActionState;                                    // 0x0008   (0x0008)  
	FGameplayTag                                       Event_TurnToLockEnemy;                                      // 0x0010   (0x0008)  
	FGameplayTag                                       Buff_InAir;                                                 // 0x0018   (0x0008)  
	FGameplayTag                                       GameplayCue_Death;                                          // 0x0020   (0x0008)  
	FGameplayTag                                       GameplayCue_Damage;                                         // 0x0028   (0x0008)  
	FGameplayTag                                       GameplayCue_HealingDone;                                    // 0x0030   (0x0008)  
	FGameplayTag                                       GameplayCue_MPCost;                                         // 0x0038   (0x0008)  
	FGameplayTag                                       GameplayCue_MPRestore;                                      // 0x0040   (0x0008)  
	FGameplayTagContainer                              SkillAbilityParentTags;                                     // 0x0048   (0x0020)  
	FGameplayTag                                       DashSkillTag;                                               // 0x0068   (0x0008)  
	FGameplayTagContainer                              Debuff_Irremovability;                                      // 0x0070   (0x0020)  
	FGameplayTagContainer                              Debuff_StruckDown;                                          // 0x0090   (0x0020)  
	FGameplayTag                                       DyingTag;                                                   // 0x00B0   (0x0008)  
	FGameplayTag                                       AirNormalHit;                                               // 0x00B8   (0x0008)  
	FGameplayTag                                       Event_SkillUnInterruptable;                                 // 0x00C0   (0x0008)  
	FGameplayTag                                       BlockAirAttackTag;                                          // 0x00C8   (0x0008)  
	FGameplayTag                                       SkillEvent_GotAbility;                                      // 0x00D0   (0x0008)  
	FGameplayTag                                       AIConfig_SelfHealing;                                       // 0x00D8   (0x0008)  
	FGameplayTag                                       AIConfig_GroupHealing;                                      // 0x00E0   (0x0008)  
};

/// Struct /Script/Pal7.AnimUROConfig
/// Size: 0x0068 (0x000000 - 0x000068)
struct FAnimUROConfig
{ 
	EAnimUROType                                       PaladinAnimUROType;                                         // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	TArray<float>                                      PaladinDistanceFactorThresholds;                            // 0x0008   (0x0010)  
	SDK_UNDEFINED(80,1627) /* TMap<int32_t, int32_t> */ __um(PaladinLODToFrameSkipMap);                            // 0x0018   (0x0050)  
};

/// Class /Script/Pal7.PaladinGlobals
/// Size: 0x0588 (0x000028 - 0x0005B0)
class UPaladinGlobals : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x28];                                      // 0x0000   (0x0028)  MISSED
	FPaladinGameplayTags                               PaladinGameplayTagsStruct;                                  // 0x0028   (0x00E8)  
	FGameplayEffectQuery                               DyingClearGameplayEffectQuery;                              // 0x0110   (0x0150)  
	class UClass*                                      CommonCDGEClass;                                            // 0x0260   (0x0008)  
	class UDataTable*                                  ArchiveHelperTable;                                         // 0x0268   (0x0008)  
	class UDataTable*                                  QuestDataTable;                                             // 0x0270   (0x0008)  
	class UDataTable*                                  MarkTypeTable;                                              // 0x0278   (0x0008)  
	class UDataTable*                                  CustomMapDataTable;                                         // 0x0280   (0x0008)  
	TArray<class UDataTable*>                          ActorsDataTable;                                            // 0x0288   (0x0010)  
	class UDataTable*                                  ItemDataTable;                                              // 0x0298   (0x0008)  
	class UDataTable*                                  GrantAttrSet;                                               // 0x02A0   (0x0008)  
	class UDataTable*                                  EquipmentDataTable;                                         // 0x02A8   (0x0008)  
	class UDataTable*                                  CardDataTable;                                              // 0x02B0   (0x0008)  
	class UDataTable*                                  ConstantValueDataTable;                                     // 0x02B8   (0x0008)  
	class UDataTable*                                  ChangeAttributeGEDataTable;                                 // 0x02C0   (0x0008)  
	class UDataTable*                                  StaticAssetDataTable;                                       // 0x02C8   (0x0008)  
	class UDataTable*                                  DebugSwitchDataTable;                                       // 0x02D0   (0x0008)  
	class UDataTable*                                  GeneralBuffConfigDataTable;                                 // 0x02D8   (0x0008)  
	class UDataTable*                                  ParticleByPhysMatDatatable;                                 // 0x02E0   (0x0008)  
	class UDataTable*                                  SoundByPhysMatDatatable;                                    // 0x02E8   (0x0008)  
	class UDataTable*                                  DefaultKeySettingDataTable;                                 // 0x02F0   (0x0008)  
	class UDataTable*                                  DefaultRayTracingSettingTable;                              // 0x02F8   (0x0008)  
	class UDataTable*                                  CombinationKeyEventTable;                                   // 0x0300   (0x0008)  
	SDK_UNDEFINED(80,1628) /* TMap<EBreakLevel, float> */ __um(DefaultBreakConfig);                                // 0x0308   (0x0050)  
	class UDataTable*                                  LevelUpExpDataTable;                                        // 0x0358   (0x0008)  
	class UDataTable*                                  AttrUITable;                                                // 0x0360   (0x0008)  
	class UDataTable*                                  EnemyExpDataTable;                                          // 0x0368   (0x0008)  
	EPaladinGameDifficulty                             BossChallengeDifficulty;                                    // 0x0370   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0371   (0x0007)  MISSED
	SDK_UNDEFINED(80,1629) /* TMap<EPaladinGameDifficulty, FPaladinGameDifficultyAttrMod> */ __um(GameDifficultyAttrModMap); // 0x0378   (0x0050)  
	float                                              FootStepSoundVolume;                                        // 0x03C8   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x03CC   (0x0004)  MISSED
	class UBehaviorTree*                               CommonAnimalBehaviorTree;                                   // 0x03D0   (0x0008)  
	TArray<class UDataTable*>                          QuestPIDTables;                                             // 0x03D8   (0x0010)  
	class UDataTable*                                  PetExpDataTable;                                            // 0x03E8   (0x0008)  
	class UDataTable*                                  PetDataTable;                                               // 0x03F0   (0x0008)  
	class UDataTable*                                  TemGrantAttrSet;                                            // 0x03F8   (0x0008)  
	class UDataTable*                                  TemGrantAttrSetErZhouMu;                                    // 0x0400   (0x0008)  
	class UDataTable*                                  ShowTipsDataTableForKeyboard;                               // 0x0408   (0x0008)  
	class UDataTable*                                  ShowTipsDataTableForGamepad;                                // 0x0410   (0x0008)  
	class UDataTable*                                  ShowTipsDataTableForTouch;                                  // 0x0418   (0x0008)  
	FAnimUROConfig                                     AnimUROConfig;                                              // 0x0420   (0x0068)  
	class UDataTable*                                  FightingGradeTable;                                         // 0x0488   (0x0008)  
	class UDataTable*                                  AchievementConfig;                                          // 0x0490   (0x0008)  
	class UDataTable*                                  LevleDataTableConfig;                                       // 0x0498   (0x0008)  
	class UDataTable*                                  BossChallengeConfig;                                        // 0x04A0   (0x0008)  
	class UDataTable*                                  PreloadAssetsDataTable;                                     // 0x04A8   (0x0008)  
	class UDataTable*                                  DLCInfoDataTable;                                           // 0x04B0   (0x0008)  
	class UDataTable*                                  DLCItemDataTable;                                           // 0x04B8   (0x0008)  
	class UDataTable*                                  SuggestHeroLevelWhenArchiveBad;                             // 0x04C0   (0x0008)  
	unsigned char                                      UnknownData03_6[0xE8];                                      // 0x04C8   (0x00E8)  MISSED
};

/// Class /Script/Pal7.PaladinEventDataObject
/// Size: 0x01C0 (0x000028 - 0x0001E8)
class UPaladinEventDataObject : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x28];                                      // 0x0000   (0x0028)  MISSED
	ECharacterActionStateFlags                         ActionFlag;                                                 // 0x0028   (0x0001)  
	bool                                               ActionState;                                                // 0x0029   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x002A   (0x0002)  MISSED
	int32_t                                            HaveMadeEffectIdx;                                          // 0x002C   (0x0004)  
	SDK_UNDEFINED(80,1630) /* TMap<FName, UObject*> */ __um(OptionalObjectMap);                                    // 0x0030   (0x0050)  
	SDK_UNDEFINED(80,1631) /* TMap<FName, bool> */     __um(OptionalBoolMap);                                      // 0x0080   (0x0050)  
	SDK_UNDEFINED(80,1632) /* TMap<FName, float> */    __um(OptionalFloatMap);                                     // 0x00D0   (0x0050)  
	SDK_UNDEFINED(80,1633) /* TMap<FName, int32_t> */  __um(OptionalIntMap);                                       // 0x0120   (0x0050)  
	SDK_UNDEFINED(80,1634) /* TMap<FName, FVector> */  __um(OptionalFvectorMap);                                   // 0x0170   (0x0050)  
	SDK_UNDEFINED(16,1635) /* TArray<FString> */       __um(Params);                                               // 0x01C0   (0x0010)  
	FRotator                                           HitNormalRotation;                                          // 0x01D0   (0x000C)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x01DC   (0x0004)  MISSED
	class UPaladinCollisionShape*                      m_QueryShape;                                               // 0x01E0   (0x0008)  
};

/// Class /Script/Pal7.PaladinSimpleCameraAnimData
/// Size: 0x0018 (0x000028 - 0x000040)
class UPaladinSimpleCameraAnimData : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x28];                                      // 0x0000   (0x0028)  MISSED
	class UCurveVector*                                SocketOffsetAddCurve;                                       // 0x0028   (0x0008)  
	class UCurveFloat*                                 ControllerPitchAddCurve;                                    // 0x0030   (0x0008)  
	class UCurveFloat*                                 ControllerYawAddCurve;                                      // 0x0038   (0x0008)  
};

/// Class /Script/Pal7.PaladinGhostMeshData
/// Size: 0x0010 (0x000028 - 0x000038)
class UPaladinGhostMeshData : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x28];                                      // 0x0000   (0x0028)  MISSED
	float                                              TimeBetween;                                                // 0x0028   (0x0004)  
	int32_t                                            ActionCount;                                                // 0x002C   (0x0004)  
	class UClass*                                      GhostMeshActor;                                             // 0x0030   (0x0008)  
};

/// Class /Script/Pal7.PaladinHostileDamageEventData
/// Size: 0x0030 (0x000028 - 0x000058)
class UPaladinHostileDamageEventData : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x28];                                      // 0x0000   (0x0028)  MISSED
	float                                              DamageAmount;                                               // 0x0028   (0x0004)  
	float                                              PhysicalDmg;                                                // 0x002C   (0x0004)  
	float                                              SpellDmg;                                                   // 0x0030   (0x0004)  
	float                                              ActualDamageAmount;                                         // 0x0034   (0x0004)  
	EAbilityElementalType                              AbilityElementType;                                         // 0x0038   (0x0001)  
	EAbilityPhysicalDmgType                            AbilityPhysicalDmgType;                                     // 0x0039   (0x0001)  
	bool                                               Crit;                                                       // 0x003A   (0x0001)  
	EBodypartType                                      HitBodyPart;                                                // 0x003B   (0x0001)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x003C   (0x0004)  MISSED
	class AActor*                                      Instigator;                                                 // 0x0040   (0x0008)  
	class UGameplayAbility*                            Ability;                                                    // 0x0048   (0x0008)  
	bool                                               bJoint;                                                     // 0x0050   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0051   (0x0007)  MISSED
};

/// Class /Script/Pal7.PaladinGameSettings
/// Size: 0x0020 (0x000038 - 0x000058)
class UPaladinGameSettings : public UDeveloperSettings
{ 
public:
	int32_t                                            QualityLevel;                                               // 0x0038   (0x0004)  
	bool                                               FullScreenMode;                                             // 0x003C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x003D   (0x0003)  MISSED
	FName                                              GameResolution;                                             // 0x0040   (0x0008)  
	int32_t                                            MasterVolume;                                               // 0x0048   (0x0004)  
	int32_t                                            BackgroundVolume;                                           // 0x004C   (0x0004)  
	int32_t                                            CharacterVolume;                                            // 0x0050   (0x0004)  
	int32_t                                            EnvironmentVolume;                                          // 0x0054   (0x0004)  
};

/// Class /Script/Pal7.PaladinSimpleTask
/// Size: 0x0010 (0x000028 - 0x000038)
class UPaladinSimpleTask : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0000   (0x0038)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinSimpleTask.DoTask
	// void DoTask(class UObject* Param1, class UObject* Param2, class UObject* Param3);                                     // [0xe8e6c0] Native|Event|Public|BlueprintEvent 
};

/// Struct /Script/Pal7.SequenceSaveData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FSequenceSaveData
{ 
	TArray<FName>                                      CGPlayed;                                                   // 0x0000   (0x0010)  
};

/// Class /Script/Pal7.PaladinGlobalSaveGame
/// Size: 0x0088 (0x000028 - 0x0000B0)
class UPaladinGlobalSaveGame : public USaveGame
{ 
public:
	EPaladinSaveGameFileVersion                        Version;                                                    // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0029   (0x0007)  MISSED
	SDK_UNDEFINED(16,1636) /* FString */               __um(PublishVersion);                                       // 0x0030   (0x0010)  
	FSequenceSaveData                                  SequenceData;                                               // 0x0040   (0x0010)  
	SDK_UNDEFINED(80,1637) /* TSet<FGameplayTag> */    __um(MiniGameTags);                                         // 0x0050   (0x0050)  
	TArray<FName>                                      UnlockedDisplayedDLC;                                       // 0x00A0   (0x0010)  
};

/// Class /Script/Pal7.PaladinGuideManager
/// Size: 0x00A0 (0x000220 - 0x0002C0)
class APaladinGuideManager : public AActor
{ 
public:
	unsigned char                                      UnknownData00_3[0x40];                                      // 0x0220   (0x0040)  MISSED
	SDK_UNDEFINED(16,1638) /* FMulticastInlineDelegate */ __um(PaladinGuideNodeChangeDelegate);                    // 0x0260   (0x0010)  
	SDK_UNDEFINED(16,1639) /* FMulticastInlineDelegate */ __um(PaladinGuideProgressChangeDelegate);                // 0x0270   (0x0010)  
	SDK_UNDEFINED(16,1640) /* FMulticastInlineDelegate */ __um(PaladinSequencerEventDelegate);                     // 0x0280   (0x0010)  
	SDK_UNDEFINED(16,1641) /* FMulticastInlineDelegate */ __um(OnAbilityActive);                                   // 0x0290   (0x0010)  
	SDK_UNDEFINED(16,1642) /* FMulticastInlineDelegate */ __um(OnAbilityEnd);                                      // 0x02A0   (0x0010)  
	bool                                               IsEnabled;                                                  // 0x02B0   (0x0001)  
	EPaladinGuideType                                  CurrGuideType;                                              // 0x02B1   (0x0001)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x02B2   (0x0006)  MISSED
	class AGuideNodeBese*                              CurrGuideNode;                                              // 0x02B8   (0x0008)  


	/// Functions
	// Function /Script/Pal7.PaladinGuideManager.SetNewCurrGuideNode
	// void SetNewCurrGuideNode(class AGuideNodeBese* CurrNode);                                                             // [0xe92de0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGuideManager.ParfromGuide
	// void ParfromGuide(EPaladinGuideType GuideType);                                                                       // [0xe928e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGuideManager.OnSequencerEvent
	// void OnSequencerEvent(class APaladinEnemy* Monster);                                                                  // [0xe92770] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGuideManager.GetNewCurrGuideNode
	// class AGuideNodeBese* GetNewCurrGuideNode();                                                                          // [0xe91f10] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGuideManager.GetCurrGuideNodeType
	// EPaladinGuideType GetCurrGuideNodeType();                                                                             // [0xe91eb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGuideManager.ForceParfromGuide
	// void ForceParfromGuide(EPaladinGuideType GuideType);                                                                  // [0xe91da0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGuideManager.ExitGuide
	// void ExitGuide();                                                                                                     // [0xe91d80] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGuideManager.EnterGuide
	// void EnterGuide();                                                                                                    // [0xe91d40] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGuideManager.CreateGuideNode
	// class AGuideNodeBese* CreateGuideNode(EPaladinGuideType InGuideType);                                                 // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinGuideManager.CompleteCurrGuide
	// void CompleteCurrGuide(EPaladinGuideType InGuideType);                                                                // [0xe91c10] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGuideManager.CancelCurrGuide
	// void CancelCurrGuide();                                                                                               // [0xe91a50] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGuideManager.AbilityEnded
	// void AbilityEnded(class UPaladinComboAbility* Ability);                                                               // [0xe916e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinGuideManager.AbilityActive
	// void AbilityActive(class UPaladinComboAbility* Ability);                                                              // [0xe91660] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinHandleShakeTrackInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladinHandleShakeTrackInterface : public UInterface
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinHandleShakeTrackInterface.PlayFaceAnimation
	// void PlayFaceAnimation(class UAnimSequenceBase* FaceAnimation);                                                       // [0xe929e0] Native|Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/Pal7.PaladinHealingExecution
/// Size: 0x0000 (0x000040 - 0x000040)
class UPaladinHealingExecution : public UGameplayEffectExecutionCalculation
{ 
public:
};

/// Class /Script/Pal7.PaladinHeightFog
/// Size: 0x0010 (0x000220 - 0x000230)
class APaladinHeightFog : public AInfo
{ 
public:
	class UExponentialHeightFogComponent*              Component;                                                  // 0x0220   (0x0008)  
	bool                                               bEnabled : 1;                                               // 0x0228:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0229   (0x0007)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinHeightFog.OnRep_bEnabled
	// void OnRep_bEnabled();                                                                                                // [0xe92750] Native|Public        
	// Function /Script/Pal7.PaladinHeightFog.LerpAgentParameters
	// void LerpAgentParameters(class APaladinHeightFog* One, class APaladinHeightFog* Another, float percent);              // [0xe920b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeightFog.ApplyAgentParameters
	// void ApplyAgentParameters(class APaladinHeightFog* Agent);                                                            // [0xe91780] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinHeightFogAgent
/// Size: 0x0000 (0x000230 - 0x000230)
class APaladinHeightFogAgent : public APaladinHeightFog
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinHeightFogAgent.LerpAgentParametersToGlobal
	// void LerpAgentParametersToGlobal(class APaladinHeightFogAgent* Another, float percent);                               // [0xe921c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeightFogAgent.ApplyAgentParametersToGlobal
	// void ApplyAgentParametersToGlobal();                                                                                  // [0xe91800] Final|Native|Public|BlueprintCallable 
};

/// Struct /Script/Pal7.PaladinHeroMaterialInfo
/// Size: 0x0018 (0x000000 - 0x000018)
struct FPaladinHeroMaterialInfo
{ 
	FName                                              BodyPart;                                                   // 0x0000   (0x0008)  
	FName                                              MaterialSlotName;                                           // 0x0008   (0x0008)  
	FName                                              ParameterName;                                              // 0x0010   (0x0008)  
};

/// Class /Script/Pal7.PaladinHero
/// Size: 0x0280 (0x000C80 - 0x000F00)
class APaladinHero : public APaladinCharacterBase
{ 
public:
	unsigned char                                      UnknownData00_3[0x10];                                      // 0x0C78   (0x0010)  MISSED
	class UPaladinHeroAttrSet*                         HeroAttrSet;                                                // 0x0C88   (0x0008)  
	TArray<float>                                      CameraLegSpeedMap;                                          // 0x0C90   (0x0010)  
	TArray<float>                                      CameraLagMaxDisMap;                                         // 0x0CA0   (0x0010)  
	unsigned char                                      UnknownData01_5[0x30];                                      // 0x0CB0   (0x0030)  MISSED
	SDK_UNDEFINED(16,1643) /* FMulticastInlineDelegate */ __um(OnHeroAppearanceChanged);                           // 0x0CE0   (0x0010)  
	SDK_UNDEFINED(16,1644) /* FMulticastInlineDelegate */ __um(OnHeroFootStepDown);                                // 0x0CF0   (0x0010)  
	SDK_UNDEFINED(16,1645) /* FMulticastInlineDelegate */ __um(OnHeroLoadDelegate);                                // 0x0D00   (0x0010)  
	unsigned char                                      UnknownData02_5[0x1];                                       // 0x0D10   (0x0001)  MISSED
	ESpecialEnvironment                                CurSpecialEnvironment;                                      // 0x0D11   (0x0001)  
	bool                                               bPauseAIFollow;                                             // 0x0D12   (0x0001)  
	unsigned char                                      UnknownData03_5[0x1];                                       // 0x0D13   (0x0001)  MISSED
	float                                              VoiceVolumeMul;                                             // 0x0D14   (0x0004)  
	float                                              MeleeHeroLocDisFactor;                                      // 0x0D18   (0x0004)  
	int32_t                                            CurrentSkillPage;                                           // 0x0D1C   (0x0004)  
	TArray<FName>                                      SkillConfig;                                                // 0x0D20   (0x0010)  
	TArray<FName>                                      OldUnLockSkills;                                            // 0x0D30   (0x0010)  
	class UAnimMontage*                                Montage_PickUpWeapon;                                       // 0x0D40   (0x0008)  
	class UAnimMontage*                                Montage_PickUpWeaponWhenMoving;                             // 0x0D48   (0x0008)  
	class UAnimMontage*                                Montage_PutDownWeapon;                                      // 0x0D50   (0x0008)  
	class UAnimMontage*                                Montage_PutDownWeaponWhenMoving;                            // 0x0D58   (0x0008)  
	SDK_UNDEFINED(80,1646) /* TMap<EBeatenBackDirection, UAnimMontage*> */ __um(AirBeatenBackMontageMap);          // 0x0D60   (0x0050)  
	class UDataTable*                                  _DodgeDataTable;                                            // 0x0DB0   (0x0008)  
	unsigned char                                      UnknownData04_5[0x18];                                      // 0x0DB8   (0x0018)  MISSED
	class UPawnNoiseEmitterComponent*                  NoiseEmitter;                                               // 0x0DD0   (0x0008)  
	EPaladinHeroName                                   HeroType;                                                   // 0x0DD8   (0x0001)  
	bool                                               bEnableLookOn;                                              // 0x0DD9   (0x0001)  
	unsigned char                                      UnknownData05_5[0x2];                                       // 0x0DDA   (0x0002)  MISSED
	int32_t                                            DefaultWeaponId;                                            // 0x0DDC   (0x0004)  
	int32_t                                            DefaultSuitId;                                              // 0x0DE0   (0x0004)  
	float                                              BaseTurnRate;                                               // 0x0DE4   (0x0004)  
	float                                              BaseLookUpRate;                                             // 0x0DE8   (0x0004)  
	FPaladinTransCameraInfo                            SprintCameraInfo;                                           // 0x0DEC   (0x0030)  
	float                                              SprintSpeedThreshold;                                       // 0x0E1C   (0x0004)  
	ESuperHeroType                                     SuperHeroType;                                              // 0x0E20   (0x0001)  
	EPaladinHeroAttackState                            Attackstate;                                                // 0x0E21   (0x0001)  
	unsigned char                                      UnknownData06_5[0x2];                                       // 0x0E22   (0x0002)  MISSED
	float                                              PushCharacterRecoverTime;                                   // 0x0E24   (0x0004)  
	float                                              PushCharacterPassiveMoveSpeed;                              // 0x0E28   (0x0004)  
	EPaladinHeroWalkState                              PaladinHeroWalkState;                                       // 0x0E2C   (0x0001)  
	unsigned char                                      UnknownData07_5[0x3];                                       // 0x0E2D   (0x0003)  MISSED
	float                                              DodgetCDTime;                                               // 0x0E30   (0x0004)  
	unsigned char                                      UnknownData08_5[0x4];                                       // 0x0E34   (0x0004)  MISSED
	class UAnimMontage*                                CurrentRunStopMontage;                                      // 0x0E38   (0x0008)  
	bool                                               bInFallDead;                                                // 0x0E40   (0x0001)  
	unsigned char                                      UnknownData09_5[0x7];                                       // 0x0E41   (0x0007)  MISSED
	TArray<class UAnimMontage*>                        LeiSureMontages;                                            // 0x0E48   (0x0010)  
	TArray<FPaladinHeroMaterialInfo>                   HeroMatrialInfo;                                            // 0x0E58   (0x0010)  
	ETraceTypeQuery                                    TraceChannelType;                                           // 0x0E68   (0x0001)  
	bool                                               bCanStruckDownGetupImmediately;                             // 0x0E69   (0x0001)  
	unsigned char                                      UnknownData10_5[0x6];                                       // 0x0E6A   (0x0006)  MISSED
	SDK_UNDEFINED(80,1647) /* TMap<EItemMainType, APaladinEquipment*> */ __um(SpawnEquipActor);                    // 0x0E70   (0x0050)  
	class UPaladinSpringArmComponent*                  CameraBoom;                                                 // 0x0EC0   (0x0008)  
	class UCameraComponent*                            FollowCamera;                                               // 0x0EC8   (0x0008)  
	class APaladinWeapon*                              CurrentWeapon;                                              // 0x0ED0   (0x0008)  
	class USkeletalMesh*                               DefaultWeaponSKMesh;                                        // 0x0ED8   (0x0008)  
	class USkeletalMesh*                               DefaultWeaponCoverSKMesh;                                   // 0x0EE0   (0x0008)  
	class UPaladinSequenceDataComponent*               SequenceData;                                               // 0x0EE8   (0x0008)  
	bool                                               bIsInLeisureState;                                          // 0x0EF0   (0x0001)  
	unsigned char                                      UnknownData11_6[0xF];                                       // 0x0EF1   (0x000F)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinHero.TryLockCharacter
	// bool TryLockCharacter(class APaladinCharacterBase* NewCharacter);                                                     // [0xe93370] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.TryEquipItem
	// bool TryEquipItem(int32_t ID, EItemMainType Type);                                                                    // [0xe932b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.TryAddNewAbilityToSkillConfig
	// void TryAddNewAbilityToSkillConfig();                                                                                 // [0xe93290] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.ToggleWalkState
	// void ToggleWalkState(EPaladinHeroWalkState NewState);                                                                 // [0xe93210] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.ToggleSprint
	// void ToggleSprint(bool Open);                                                                                         // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinHero.ToggleLockingTarget
	// void ToggleLockingTarget();                                                                                           // [0xe931f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.ToggleEnableSpotLight
	// void ToggleEnableSpotLight(bool bNewValue);                                                                           // [0xe93160] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.ToggleBlendCapture
	// void ToggleBlendCapture(bool Open);                                                                                   // [0xe930d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.TestUpdate
	// void TestUpdate();                                                                                                    // [0xe930b0] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.TemGrantAttrSet
	// void TemGrantAttrSet(FName RowId);                                                                                    // [0xe93030] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.SwitchLockingTarget
	// void SwitchLockingTarget(bool bIsUp);                                                                                 // [0xe92fa0] Final|Native|Public  
	// Function /Script/Pal7.PaladinHero.SwitchEnvInteractionLevel
	// void SwitchEnvInteractionLevel(int32_t Level);                                                                        // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinHero.StruckDownGetupImmediately
	// void StruckDownGetupImmediately();                                                                                    // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinHero.StartFallDead
	// void StartFallDead();                                                                                                 // [0xe92f80] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.SetVIPPlayerState
	// void SetVIPPlayerState(bool Open);                                                                                    // [0xe92f00] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.SetParameterValuefromConfig
	// void SetParameterValuefromConfig();                                                                                   // [0xe92ee0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.SetPaladinAttackState
	// void SetPaladinAttackState(EPaladinHeroAttackState NewPaladinState);                                                  // [0xe92e60] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.SetLockWeaponStat
	// void SetLockWeaponStat(bool bLockWeapon);                                                                             // [0xe92d60] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.SetLeisureState
	// void SetLeisureState(bool bNewValue);                                                                                 // [0xe92cd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.SetEnalbeToggleWalkState
	// void SetEnalbeToggleWalkState(bool bEnable);                                                                          // [0xe92c50] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.ReceivePlayModeChange
	// void ReceivePlayModeChange(FName ModeName);                                                                           // [0xe92bd0] Final|Native|Private 
	// Function /Script/Pal7.PaladinHero.RatioBetweenWalkAndRunAnim
	// float RatioBetweenWalkAndRunAnim();                                                                                   // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinHero.PutDownWeapon
	// void PutDownWeapon();                                                                                                 // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinHero.PreCalculateAttrDiff
	// float PreCalculateAttrDiff(FGameplayAttribute& AttrName, int32_t ID, EItemMainType Type);                             // [0xe92a70] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.PickUpWeapon
	// void PickUpWeapon();                                                                                                  // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinHero.PartnerDied
	// void PartnerDied(EPaladinHeroName HeroName);                                                                          // [0xe92960] Final|Native|Private 
	// Function /Script/Pal7.PaladinHero.OnTagConditionChanged
	// void OnTagConditionChanged(FGameplayTag Tag, bool bAddTag);                                                           // [0xe92810] Final|Native|Private 
	// Function /Script/Pal7.PaladinHero.OnSummonSuperHeroEnd
	// void OnSummonSuperHeroEnd();                                                                                          // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinHero.OnStartRespawn
	// void OnStartRespawn();                                                                                                // [0xe927f0] Final|Native|Public  
	// Function /Script/Pal7.PaladinHero.OnReceiveControllerEvent
	// void OnReceiveControllerEvent(TEnumAsByte<EInputEvent> InputEvent, EPaladinKeyEventName EventNameEnum, float CurTickHoldSpan, float PreTickHoldSpan, float KeyMappingValue); // [0xe925b0] Native|Public        
	// Function /Script/Pal7.PaladinHero.OnPlayerMovementUpdatedCallback
	// void OnPlayerMovementUpdatedCallback(float DeltaSeconds, FVector OldLocation, FVector OldVelocity);                   // [0xe92490] Final|Native|Public|HasDefaults 
	// Function /Script/Pal7.PaladinHero.OnHeroTakeOffEquipmentEvent
	// void OnHeroTakeOffEquipmentEvent(EPaladinHeroName HeroName, EItemMainType EquipmentType, int32_t EquipmentID);        // [0xe92390] Final|Native|Public  
	// Function /Script/Pal7.PaladinHero.OnHeroGearedEquipmentEvent
	// void OnHeroGearedEquipmentEvent(EPaladinHeroName HeroName, EItemMainType EquipmentType, int32_t EquipmentID);         // [0xe92290] Final|Native|Public  
	// Function /Script/Pal7.PaladinHero.OnAwakenPointDepleted
	// void OnAwakenPointDepleted();                                                                                         // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinHero.KeyboardToggleWalk
	// void KeyboardToggleWalk();                                                                                            // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinHero.K2_StartFallDead
	// void K2_StartFallDead();                                                                                              // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinHero.K2_SetHeroFadeEffect
	// void K2_SetHeroFadeEffect(bool bShowEffect, bool bOnlyShowHide);                                                      // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinHero.K2_ResetHeroAnim
	// void K2_ResetHeroAnim();                                                                                              // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinHero.K2_ReceivePlaymodeChange
	// void K2_ReceivePlaymodeChange(FName ModeName);                                                                        // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinHero.K2_PlayLeisureEvent
	// void K2_PlayLeisureEvent();                                                                                           // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinHero.K2_OnSetNewWalkState
	// void K2_OnSetNewWalkState(EPaladinHeroWalkState NewState);                                                            // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinHero.K2_OnHoldingWeaponStateChange
	// void K2_OnHoldingWeaponStateChange(EPaladinHeroWeaponState NewState);                                                 // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinHero.K2_OnCameraLensReset
	// void K2_OnCameraLensReset();                                                                                          // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinHero.K2_LevelUP
	// void K2_LevelUP();                                                                                                    // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinHero.K2_EndFallDead
	// void K2_EndFallDead();                                                                                                // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinHero.K2_CanPlayLeisure
	// bool K2_CanPlayLeisure();                                                                                             // [0x15dd8c0] Event|Public|BlueprintEvent|Const 
	// Function /Script/Pal7.PaladinHero.IsUnderPlayerControl
	// bool IsUnderPlayerControl();                                                                                          // [0xe92080] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.IsTeamLeader
	// bool IsTeamLeader();                                                                                                  // [0xe92050] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.IsCurrentLockedWeaponStat
	// bool IsCurrentLockedWeaponStat();                                                                                     // [0xe92030] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinHero.IsAwake
	// bool IsAwake();                                                                                                       // [0xe92000] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinHero.InitSuperHeroAttr
	// void InitSuperHeroAttr();                                                                                             // [0xe91fe0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.HasAIHeroAbility
	// bool HasAIHeroAbility();                                                                                              // [0xe91fb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.GrantAttrSet
	// void GrantAttrSet(FName RowId);                                                                                       // [0xe91f30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.GetExtraExp
	// int32_t GetExtraExp();                                                                                                // [0xe91ee0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.GetConfigSkillByKeyEventNameEnum
	// FName GetConfigSkillByKeyEventNameEnum(EPaladinKeyEventName EventNameEnum);                                           // [0xe91e20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.GetCapture2DCamIns
	// class USceneCaptureComponent2D* GetCapture2DCamIns();                                                                 // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinHero.GainExp
	// void GainExp(float Exp, bool IsCombatAward);                                                                          // [0x15dd8c0] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinHero.ExchangeHPMP
	// void ExchangeHPMP();                                                                                                  // [0xe91d60] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.EndFallDead
	// void EndFallDead();                                                                                                   // [0xe91d20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.EnableAutoCollectWeapon
	// bool EnableAutoCollectWeapon(bool bEnable);                                                                           // [0xe91c90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.CommitSharedAbilityCooldown
	// void CommitSharedAbilityCooldown(FName Name);                                                                         // [0xe91b90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.ChangeLightingChannels
	// void ChangeLightingChannels(bool Channel0, bool Channel1, bool Channel2);                                             // [0xe91a70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.CanSeeCharacter
	// bool CanSeeCharacter(class ACharacter* Character);                                                                    // [0xe919c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.CanEquipItem
	// bool CanEquipItem(int32_t EquipmentIDD, EItemMainType Type);                                                          // [0xe91900] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.CalculateDodgeMontageSectionName
	// bool CalculateDodgeMontageSectionName(float Degree, FName& Name);                                                     // [0xe91820] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.ApplyShieldGEToSelf
	// void ApplyShieldGEToSelf(float ShieldHP, FGameplayTagContainer DynamicAssetTags, float CueLevel);                     // [0x15dd8c0] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinHero.AITryDodge
	// bool AITryDodge(FVector Direction);                                                                                   // [0xe915c0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinHero.ActiveAIHeroAbility
	// void ActiveAIHeroAbility();                                                                                           // [0xe91760] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinHeroAttrSet
/// Size: 0x00D8 (0x000030 - 0x000108)
class UPaladinHeroAttrSet : public UPaladinASBase
{ 
public:
	float                                              ExtraExp;                                                   // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0034   (0x0004)  MISSED
	FGameplayAttributeData                             AwakenGauge;                                                // 0x0038   (0x0010)  
	FGameplayAttributeData                             AwakenGaugeMax;                                             // 0x0048   (0x0010)  
	FGameplayAttributeData                             RecoveryItemEffectRate;                                     // 0x0058   (0x0010)  
	FGameplayAttributeData                             ExpGainRate;                                                // 0x0068   (0x0010)  
	FGameplayAttributeData                             StealthRate;                                                // 0x0078   (0x0010)  
	FGameplayAttributeData                             AttackRate;                                                 // 0x0088   (0x0010)  
	FGameplayAttributeData                             SkillCDReduceSec;                                           // 0x0098   (0x0010)  
	FGameplayAttributeData                             SkillCDReducePercent;                                       // 0x00A8   (0x0010)  
	FGameplayAttributeData                             AttackGainMPRate;                                           // 0x00B8   (0x0010)  
	FGameplayAttributeData                             LevelGainMPRate;                                            // 0x00C8   (0x0010)  
	FGameplayAttributeData                             AttackExtraGainMP;                                          // 0x00D8   (0x0010)  
	FGameplayAttributeData                             JointStrikeRate;                                            // 0x00E8   (0x0010)  
	FGameplayAttributeData                             PerfectDodgeTimeUpRate;                                     // 0x00F8   (0x0010)  
};

/// Struct /Script/Pal7.PartnerFollowSetting
/// Size: 0x0018 (0x000000 - 0x000018)
struct FPartnerFollowSetting
{ 
	float                                              DistanceStartToMove;                                        // 0x0000   (0x0004)  
	float                                              DistanceToLeader;                                           // 0x0004   (0x0004)  
	float                                              RandomAngle;                                                // 0x0008   (0x0004)  
	float                                              AngleBetweenPartner;                                        // 0x000C   (0x0004)  
	float                                              StartSprintDistance;                                        // 0x0010   (0x0004)  
	float                                              StartSprintLV2Distance;                                     // 0x0014   (0x0004)  
};

/// Struct /Script/Pal7.PartnerAttackIntervalInfo
/// Size: 0x000C (0x000000 - 0x00000C)
struct FPartnerAttackIntervalInfo
{ 
	EPaladinGameDifficulty                             GameDifficulty;                                             // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              MinAttackInterval;                                          // 0x0004   (0x0004)  
	float                                              MaxAttackInterval;                                          // 0x0008   (0x0004)  
};

/// Struct /Script/Pal7.PartnerFightSetting
/// Size: 0x0018 (0x000000 - 0x000018)
struct FPartnerFightSetting
{ 
	float                                              AttackDistance;                                             // 0x0000   (0x0004)  
	float                                              MinDistanceKeepAwayToEnemy;                                 // 0x0004   (0x0004)  
	TArray<FPartnerAttackIntervalInfo>                 PartnerAttackIntervalInfos;                                 // 0x0008   (0x0010)  
};

/// Struct /Script/Pal7.PartnerHealSetting
/// Size: 0x0008 (0x000000 - 0x000008)
struct FPartnerHealSetting
{ 
	float                                              HPRatioToHeal;                                              // 0x0000   (0x0004)  
	float                                              HealingDistance;                                            // 0x0004   (0x0004)  
};

/// Class /Script/Pal7.PaladinHeroController
/// Size: 0x0070 (0x000328 - 0x000398)
class APaladinHeroController : public AAIController
{ 
public:
	FPartnerFollowSetting                              PartnerFollowSetting;                                       // 0x0328   (0x0018)  
	FPartnerFightSetting                               PartnerFightingSetting;                                     // 0x0340   (0x0018)  
	FPartnerHealSetting                                PartnerHealingSetting;                                      // 0x0358   (0x0008)  
	class ATargetPoint*                                FollowTargetPoint;                                          // 0x0360   (0x0008)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0368   (0x0004)  MISSED
	bool                                               bIsWander : 1;                                              // 0x036C:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x036D   (0x0003)  MISSED
	bool                                               IsInUnFollowRange;                                          // 0x0370   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x0371   (0x0007)  MISSED
	float                                              RandomLengthOffset;                                         // 0x0378   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x037C   (0x0004)  MISSED
	class UPartnerFollowManager*                       FollowManager;                                              // 0x0380   (0x0008)  
	unsigned char                                      UnknownData04_6[0x10];                                      // 0x0388   (0x0010)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinHeroController.UnLockAttackEnemy
	// void UnLockAttackEnemy();                                                                                             // [0xe97400] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroController.TryPerfromSkill
	// bool TryPerfromSkill();                                                                                               // [0xe973d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroController.TryPerfromHealingSkill
	// bool TryPerfromHealingSkill();                                                                                        // [0xe973a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroController.ToggleEscape
	// void ToggleEscape(bool bToggle);                                                                                      // [0xe970f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroController.StopFollow
	// void StopFollow();                                                                                                    // [0xe96da0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroController.StartFollow
	// void StartFollow();                                                                                                   // [0xe96d80] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroController.SetEnemyPawn
	// void SetEnemyPawn(class APaladinCharacterBase* InPaladinCharacter);                                                   // [0xe96a50] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroController.RecoverFightingState
	// void RecoverFightingState();                                                                                          // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinHeroController.LockAttackEnemy
	// void LockAttackEnemy();                                                                                               // [0xe95fb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroController.IsEscape
	// bool IsEscape();                                                                                                      // [0xe95d20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroController.IsCanAttack
	// bool IsCanAttack();                                                                                                   // [0xe95cd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroController.GetMyFollowPositionBehindLeader
	// void GetMyFollowPositionBehindLeader(FVector& OutLocation);                                                           // [0xe95900] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroController.GetLeader
	// class APaladinHero* GetLeader();                                                                                      // [0xe95870] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroController.GetIsFollowingLeader
	// bool GetIsFollowingLeader();                                                                                          // [0xe95840] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinHeroController.GetEnemyPawn
	// class APaladinCharacterBase* GetEnemyPawn();                                                                          // [0xe956f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Pal7.PaladinHeroForShow
/// Size: 0x0060 (0x0004C0 - 0x000520)
class APaladinHeroForShow : public ACharacter
{ 
public:
	EPaladinHeroName                                   HeroType;                                                   // 0x04B8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x04B9   (0x0007)  MISSED
	SDK_UNDEFINED(80,1648) /* TMap<EPaladinHeroName, TWeakObjectPtr<USkeletalMesh*>> */ __um(HeroSuitList);        // 0x04C0   (0x0050)  
	class APaladinSuit*                                PalSuit;                                                    // 0x0510   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0518   (0x0008)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinHeroForShow.TryChangeSuit
	// void TryChangeSuit(EPaladinHeroName HeroName, EItemMainType EquipmentType, int32_t EquipmentID);                      // [0xe972a0] Final|Native|Protected 
	// Function /Script/Pal7.PaladinHeroForShow.InitSuit
	// void InitSuit();                                                                                                      // [0xe95cb0] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinHeroPreloadAssets
/// Size: 0x0018 (0x000030 - 0x000048)
class UPaladinHeroPreloadAssets : public UDataAsset
{ 
public:
	SDK_UNDEFINED(16,1649) /* TArray<TWeakObjectPtr<UObject*>> */ __um(HeroRefAssets);                             // 0x0030   (0x0010)  
	class UDataTable*                                  HeroSkillConfigDataTable;                                   // 0x0040   (0x0008)  
};

/// Struct /Script/Pal7.ToggleHeroEffectSetttings
/// Size: 0x0690 (0x000000 - 0x000690)
struct FToggleHeroEffectSetttings
{ 
	float                                              TogglePlayerBlendCameraTime;                                // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0xC];                                       // 0x0004   (0x000C)  MISSED
	FPostProcessSettings                               BlendPostSetting;                                           // 0x0010   (0x0670)  
	EViewTargetBlendFunction                           ViewTargetBlendMode;                                        // 0x0680   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0681   (0x0003)  MISSED
	float                                              BlendExp;                                                   // 0x0684   (0x0004)  
	float                                              FarDistanceBetweenHeros;                                    // 0x0688   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x068C   (0x0004)  MISSED
};

/// Class /Script/Pal7.PaladinHeroManagerComponent
/// Size: 0x0FB0 (0x0000B0 - 0x001060)
class UPaladinHeroManagerComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_3[0x48];                                      // 0x00B0   (0x0048)  MISSED
	class UPartnerFightingManager*                     PartnerFightingManager;                                     // 0x00F8   (0x0008)  
	SDK_UNDEFINED(80,1650) /* TMap<EPaladinHeroName, TWeakObjectPtr<UClass*>> */ __um(HeroClasss);                 // 0x0100   (0x0050)  
	class UDataTable*                                  PartnerDatatable;                                           // 0x0150   (0x0008)  
	class UDataTable*                                  PaladinGroupDatatable;                                      // 0x0158   (0x0008)  
	class UClass*                                      AiHeroGeneralEscapeGE;                                      // 0x0160   (0x0008)  
	unsigned char                                      UnknownData01_5[0x18];                                      // 0x0168   (0x0018)  MISSED
	SDK_UNDEFINED(16,1651) /* FMulticastInlineDelegate */ __um(OnEnableSwitchHeroDelegate);                        // 0x0180   (0x0010)  
	SDK_UNDEFINED(16,1652) /* FMulticastInlineDelegate */ __um(OnSwitchHeroBPDelegate);                            // 0x0190   (0x0010)  
	SDK_UNDEFINED(16,1653) /* FMulticastInlineDelegate */ __um(OnChangeConfigDelegate);                            // 0x01A0   (0x0010)  
	SDK_UNDEFINED(16,1654) /* FMulticastInlineDelegate */ __um(OnHeroRespawnDelegate);                             // 0x01B0   (0x0010)  
	SDK_UNDEFINED(16,1655) /* FMulticastInlineDelegate */ __um(OnHeroDieDelegate);                                 // 0x01C0   (0x0010)  
	bool                                               AutoStartPartnerAI;                                         // 0x01D0   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x01D1   (0x0007)  MISSED
	SDK_UNDEFINED(16,1656) /* FMulticastInlineDelegate */ __um(OnHeroSkillCurrentUnlock);                          // 0x01D8   (0x0010)  
	unsigned char                                      UnknownData03_5[0x18];                                      // 0x01E8   (0x0018)  MISSED
	SDK_UNDEFINED(16,1657) /* FMulticastInlineDelegate */ __um(OnPartnersAILockStateChange);                       // 0x0200   (0x0010)  
	SDK_UNDEFINED(16,1658) /* FMulticastInlineDelegate */ __um(OnGroupAction);                                     // 0x0210   (0x0010)  
	unsigned char                                      UnknownData04_5[0x18];                                      // 0x0220   (0x0018)  MISSED
	bool                                               bEntryGroupAction;                                          // 0x0238   (0x0001)  
	unsigned char                                      UnknownData05_5[0x3];                                       // 0x0239   (0x0003)  MISSED
	FName                                              CurrentGroupName;                                           // 0x023C   (0x0008)  
	unsigned char                                      UnknownData06_5[0xC];                                       // 0x0244   (0x000C)  MISSED
	FToggleHeroEffectSetttings                         ToggleHeroEffectSetttings;                                  // 0x0250   (0x0690)  
	TArray<class APaladinHero*>                        HeroPtrList;                                                // 0x08E0   (0x0010)  
	TArray<float>                                      HeroMaxHPList;                                              // 0x08F0   (0x0010)  
	SDK_UNDEFINED(80,1659) /* TMap<EPaladinHeroName, UPaladinHeroPreloadAssets*> */ __um(HeroPreloadAssets);       // 0x0900   (0x0050)  
	unsigned char                                      UnknownData07_6[0x710];                                     // 0x0950   (0x0710)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinHeroManagerComponent.UpdateFromArchiveHelper
	// void UpdateFromArchiveHelper(FPaladinTeamArchiveHelper& TeamArchiveHelper);                                           // [0xe97420] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.TogglePartnersAILockState
	// void TogglePartnersAILockState(bool bLock);                                                                           // [0xe97210] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.ToggleGroupAIFollow
	// void ToggleGroupAIFollow(bool Active);                                                                                // [0xe97180] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.ToggleEnableLeaderHeoPlayLeisureMontage
	// void ToggleEnableLeaderHeoPlayLeisureMontage(bool bEnable);                                                           // [0xe97060] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.SwitchToPlayerStart
	// void SwitchToPlayerStart(FName PlayerStart, bool bUseLandDownDirection);                                              // [0xe96f90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.SwitchToHeroAndPossess
	// void SwitchToHeroAndPossess(EPaladinHeroName HeroName, bool bImmediately);                                            // [0xe96ec0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.SwitchHeroForUI
	// void SwitchHeroForUI(EPaladinHeroName HeroName);                                                                      // [0xe96e40] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.SwitchHero
	// void SwitchHero(EPaladinHeroName HeroName);                                                                           // [0xe96dc0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.SetTeamLocation
	// void SetTeamLocation(FTransform Transform, float SuggestBackAngle, bool bLineTraceTest, bool bFinalSuggestPlayerLoc); // [0xe96bd0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.SetSkillConfig
	// void SetSkillConfig(int32_t ConfigIndex, class APaladinHero* AbilityOwner, FName AbilityName);                        // [0xe96ad0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.SetEndFightingRespawn
	// void SetEndFightingRespawn(bool bLock);                                                                               // [0xe969d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.SetEnableSwitchHero
	// void SetEnableSwitchHero(bool bOpen, bool bForceClearCount);                                                          // [0xe96900] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.SetAllHeroMovementEnabled
	// void SetAllHeroMovementEnabled(bool IsEnabled);                                                                       // [0xe96870] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.SetAllHeroHPMaxList
	// void SetAllHeroHPMaxList(TArray<float> HPMaxList);                                                                    // [0xe96790] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.RemovePartner
	// bool RemovePartner(EPaladinHeroName HeroType);                                                                        // [0xe96700] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.RemoveAppearedPartnerFromRecord
	// void RemoveAppearedPartnerFromRecord(EPaladinHeroName Hero);                                                          // [0xe96680] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.RemoveAllPartner
	// void RemoveAllPartner();                                                                                              // [0xe96660] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.QuitGroupAction
	// void QuitGroupAction();                                                                                               // [0xe96640] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.PullTargetPartnerAroundPlayer
	// void PullTargetPartnerAroundPlayer(EPaladinHeroName& TargetHeroType, float AroundRadius);                             // [0xe96570] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.PullTargetAroundLeader
	// void PullTargetAroundLeader(class ACharacter* TargetCharacter, float MinAroundRadius, float MaxAroundRadius, float EdgeDegree, bool bLineTraceTest, bool bFinalSuggestPlayerLoc); // [0xe963a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.PullAllPartnerToPlayerAround
	// void PullAllPartnerToPlayerAround(float AroundRadius);                                                                // [0xe96320] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.OnShowLearnSkillTips
	// void OnShowLearnSkillTips(class APaladinCharacterBase* Hero, TArray<FText>& AbilityName);                             // [0xe961e0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.OnReceiveControllerEvent
	// void OnReceiveControllerEvent(TEnumAsByte<EInputEvent> InputEvent, EPaladinKeyEventName EventNameEnum, float CurTickHoldSpan, float PreTickHoldSpan, float KeyMappingValue); // [0xe96050] Final|Native|Public  
	// Function /Script/Pal7.PaladinHeroManagerComponent.OnPlaymodeChanged
	// void OnPlaymodeChanged(FName NewModeName);                                                                            // [0xe95fd0] Final|Native|Public  
	// Function /Script/Pal7.PaladinHeroManagerComponent.IsWithLeaderGroup
	// bool IsWithLeaderGroup(class APaladinHero* Hero);                                                                     // [0xe95f20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.IsPartnersAILocked
	// bool IsPartnersAILocked();                                                                                            // [0xe95f00] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinHeroManagerComponent.IsLeadingHeroName
	// bool IsLeadingHeroName(EPaladinHeroName HeroName);                                                                    // [0xe95e70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.IsLeadingHero
	// bool IsLeadingHero(class APaladinHero* AHero);                                                                        // [0xe95de0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.IsLeader
	// bool IsLeader(EPaladinHeroName HeroName);                                                                             // [0xe95d50] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.IsInQueue
	// class APaladinHero* IsInQueue(EPaladinHeroName HeroIndex);                                                            // [0xe95720] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.IsEnableLeaderHeoPlayLeisureMontage
	// bool IsEnableLeaderHeoPlayLeisureMontage();                                                                           // [0xe95d00] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.InitQueue
	// void InitQueue(bool bForceRespawn, float SuggestBackAngle, bool bLineTraceTest, bool bFinalSuggestPlayerLoc);         // [0xe95b50] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.GetTwoHeroFavor
	// float GetTwoHeroFavor(EPaladinHeroName FirstHeroName, EPaladinHeroName SecHeroName);                                  // [0xe95a80] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.GetQueueNumber
	// int32_t GetQueueNumber();                                                                                             // [0xe95a50] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.GetPartners
	// TArray<APaladinHero*> GetPartners();                                                                                  // [0xe959d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.GetPartnerFollowManager
	// class UPartnerFollowManager* GetPartnerFollowManager();                                                               // [0xe959b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinHeroManagerComponent.GetPartnerFightingManager
	// class UPartnerFightingManager* GetPartnerFightingManager();                                                           // [0xe95990] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinHeroManagerComponent.GetLeadingHeroName
	// EPaladinHeroName GetLeadingHeroName();                                                                                // [0xe958d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.GetLeadingHero
	// class APaladinHero* GetLeadingHero();                                                                                 // [0xe958a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.GetHeroInTeamByPositionIdex
	// class APaladinHero* GetHeroInTeamByPositionIdex(int32_t Index);                                                       // [0xe957b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.GetHero
	// class APaladinHero* GetHero(EPaladinHeroName HeroIndex);                                                              // [0xe95720] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.GetAllQueuedPartners
	// void GetAllQueuedPartners(TArray<APaladinHero*>& AllQueuePartners, bool OnlyAlived);                                  // [0xe955f0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.GetAllQueuedHeros
	// void GetAllQueuedHeros(TArray<APaladinHero*>& AllQueueHeros, bool OnlyAlived);                                        // [0xe954f0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.GetAllHeroHPMaxList
	// TArray<float> GetAllHeroHPMaxList();                                                                                  // [0xe95430] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinHeroManagerComponent.GetAllAppearedPartners
	// void GetAllAppearedPartners(TArray<EPaladinHeroName>& AllAppearedPartners);                                           // [0xe95380] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.EntryGroupAction
	// bool EntryGroupAction(FName GroupName);                                                                               // [0xe952f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.EnableSwitchHero
	// bool EnableSwitchHero();                                                                                              // [0xe952c0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinHeroManagerComponent.ConvTwoHeroNameToKey
	// FName ConvTwoHeroNameToKey(EPaladinHeroName FirstHeroName, EPaladinHeroName SecHeroName);                             // [0xe951f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.ConvHeroSlotNameToDisplaySlotName
	// FName ConvHeroSlotNameToDisplaySlotName(EPaladinHeroWeaponState WeaponState);                                         // [0xe95160] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.ConvHeroNameToTableDataRowName
	// FName ConvHeroNameToTableDataRowName(EPaladinHeroName HeroName);                                                      // [0xe950d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.AddTwoHeroFavor
	// bool AddTwoHeroFavor(EPaladinHeroName FirstHeroName, EPaladinHeroName SecHeroName, float changeValue);                // [0xe94fd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.AddPartner
	// class APaladinHero* AddPartner(EPaladinHeroName HeroType, bool bRespawn);                                             // [0xe94f00] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinHeroManagerComponent.AddOldUnLockSkills
	// void AddOldUnLockSkills(class APaladinHero* AbilityOwner, FName AbilityName);                                         // [0xe94e40] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinHeroStandIn
/// Size: 0x0020 (0x0004C0 - 0x0004E0)
class APaladinHeroStandIn : public ACharacter
{ 
public:
	class APaladinWeapon*                              CurWeapon;                                                  // 0x04B8   (0x0008)  
	class USkeletalMeshComponent*                      SKCom;                                                      // 0x04C0   (0x0008)  
	class USkeletalMeshComponent*                      CoverSkCom;                                                 // 0x04C8   (0x0008)  
	EPaladinHeroName                                   HeroName;                                                   // 0x04D0   (0x0001)  
	unsigned char                                      UnknownData00_6[0xF];                                       // 0x04D1   (0x000F)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinHeroStandIn.K2_InitHeroInfo
	// void K2_InitHeroInfo();                                                                                               // [0x15dd8c0] Event|Protected|BlueprintEvent 
};

/// Class /Script/Pal7.PaladinHUD
/// Size: 0x0008 (0x000310 - 0x000318)
class APaladinHUD : public AHUD
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0310   (0x0008)  MISSED
};

/// Class /Script/Pal7.PaladinIkComponent
/// Size: 0x0070 (0x0000B0 - 0x000120)
class UPaladinIkComponent : public UActorComponent
{ 
public:
	float                                              IkTickInterval;                                             // 0x00B0   (0x0004)  
	ETraceTypeQuery                                    TraceChannelType;                                           // 0x00B4   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x00B5   (0x0003)  MISSED
	float                                              OffsetMinLimit;                                             // 0x00B8   (0x0004)  
	float                                              OffsetMaxLimit;                                             // 0x00BC   (0x0004)  
	float                                              IkInterpSpeed;                                              // 0x00C0   (0x0004)  
	FName                                              RightFootSocket;                                            // 0x00C4   (0x0008)  
	FName                                              LeftFootSocket;                                             // 0x00CC   (0x0008)  
	float                                              IKTraceDistance;                                            // 0x00D4   (0x0004)  
	float                                              ZOffsetSlowInterpSpeed;                                     // 0x00D8   (0x0004)  
	bool                                               bAdjustFootZOffset;                                         // 0x00DC   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x00DD   (0x0003)  MISSED
	float                                              FootZOffset;                                                // 0x00E0   (0x0004)  
	bool                                               bEnableIk;                                                  // 0x00E4   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3B];                                      // 0x00E5   (0x003B)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinIkComponent.StopIK
	// void StopIK();                                                                                                        // [0xe9c0a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinIkComponent.StartIK
	// void StartIK();                                                                                                       // [0xe9c060] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinIkComponent.GetIKInfo
	// void GetIKInfo(float& Out_IkOffsetLeftFoot, FRotator& Out_LeftFootRotationOffst, float& Out_IkOffsetRightFoot, FRotator& Out_RightFootRotationOffset, float& Out_PelvisZOffset); // [0xe9bb40] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinInteraction
/// Size: 0x0020 (0x000028 - 0x000048)
class UPaladinInteraction : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x28];                                      // 0x0000   (0x0028)  MISSED
	FName                                              InteractionTag;                                             // 0x0028   (0x0008)  
	class AActor*                                      Initiator;                                                  // 0x0030   (0x0008)  
	class AActor*                                      Recipient;                                                  // 0x0038   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0040   (0x0008)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinInteraction.PostFinishInteract
	// void PostFinishInteract(bool bSuccess);                                                                               // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinInteraction.K2_OnInteractFinish
	// void K2_OnInteractFinish();                                                                                           // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinInteraction.IsInteractValid
	// bool IsInteractValid();                                                                                               // [0xe9bf30] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Script/Pal7.PaladinInteraction.IsCanInteract
	// bool IsCanInteract();                                                                                                 // [0xbf6a40] Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// Function /Script/Pal7.PaladinInteraction.GetInteractionComponent
	// class UInteractionComponent* GetInteractionComponent();                                                               // [0xe9bd60] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinInteraction.FinishInteract
	// void FinishInteract(bool bSuccess);                                                                                   // [0xe9ba40] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinInteraction.BeginInteract
	// void BeginInteract();                                                                                                 // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinInteraction.ActiveInteract
	// void ActiveInteract();                                                                                                // [0xe9b6e0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinInteractionTraceComponent
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UPaladinInteractionTraceComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x00B0   (0x0004)  MISSED
	float                                              ScanTimerInterval;                                          // 0x00B4   (0x0004)  
	ETraceTypeQuery                                    TraceChannelType;                                           // 0x00B8   (0x0001)  
	unsigned char                                      UnknownData01_6[0x1F];                                      // 0x00B9   (0x001F)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinInteractionTraceComponent.EnableScanInteractTarget
	// void EnableScanInteractTarget();                                                                                      // [0xe9b960] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinInteractionTraceComponent.DisableScanInteractTarget
	// void DisableScanInteractTarget();                                                                                     // [0xe9b940] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinInteractionTraceComponent.ActiveTrace
	// void ActiveTrace(bool Inactive);                                                                                      // [0xe9b700] Final|Native|Public  
};

/// Struct /Script/Pal7.LockInteractionInfo
/// Size: 0x0008 (0x000000 - 0x000008)
struct FLockInteractionInfo
{ 
	class UCurveVector*                                ScreenAreaCurve;                                            // 0x0000   (0x0008)  
};

/// Class /Script/Pal7.PaladinInteractionLockComponent
/// Size: 0x0028 (0x0000D8 - 0x000100)
class UPaladinInteractionLockComponent : public UPaladinInteractionTraceComponent
{ 
public:
	unsigned char                                      UnknownData00_3[0x20];                                      // 0x00D8   (0x0020)  MISSED
	FLockInteractionInfo                               LockInteractionInfo;                                        // 0x00F8   (0x0008)  
};

/// Struct /Script/Pal7.PaladinInteractionShowInfo
/// Size: 0x0030 (0x000008 - 0x000038)
struct FPaladinInteractionShowInfo : FTableRowBase
{ 
	EPaladinMarkCategory                               MarkCategory;                                               // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	FName                                              CustomType;                                                 // 0x000C   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	SDK_UNDEFINED(24,1660) /* FText */                 __um(ShowText);                                             // 0x0018   (0x0018)  
	class UPaperSprite*                                FarIcon;                                                    // 0x0030   (0x0008)  
};

/// Class /Script/Pal7.PaladinInteractionManagerComponent
/// Size: 0x00C0 (0x0000B0 - 0x000170)
class UPaladinInteractionManagerComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_3[0x20];                                      // 0x00B0   (0x0020)  MISSED
	class UInteractionComponent*                       CurrentTraceTarget;                                         // 0x00D0   (0x0008)  
	class UInteractionComponent*                       CurFocusTarget;                                             // 0x00D8   (0x0008)  
	class UInteractionComponent*                       CurInteractTarget;                                          // 0x00E0   (0x0008)  
	class AActor*                                      ForceFocusActor;                                            // 0x00E8   (0x0008)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x00F0   (0x0010)  MISSED
	class UDataTable*                                  InteractionShowConfig;                                      // 0x0100   (0x0008)  
	FPaladinInteractionShowInfo                        DefaultShowInfo;                                            // 0x0108   (0x0038)  
	SDK_UNDEFINED(16,1661) /* FMulticastInlineDelegate */ __um(OnTraceTargetChanged);                              // 0x0140   (0x0010)  
	SDK_UNDEFINED(16,1662) /* FMulticastInlineDelegate */ __um(OnStartInteractSignature);                          // 0x0150   (0x0010)  
	SDK_UNDEFINED(16,1663) /* FMulticastInlineDelegate */ __um(OnEndInteractSignature);                            // 0x0160   (0x0010)  


	/// Functions
	// Function /Script/Pal7.PaladinInteractionManagerComponent.Unregister
	// void Unregister(class UInteractionComponent* InteractionComp);                                                        // [0xe9c0c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinInteractionManagerComponent.StartInteract
	// void StartInteract();                                                                                                 // [0xe9c080] Final|Native|Public  
	// Function /Script/Pal7.PaladinInteractionManagerComponent.SetForceFocusActor
	// void SetForceFocusActor(class AActor* InFocusActor);                                                                  // [0xe9bfe0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinInteractionManagerComponent.Register
	// void Register(class UInteractionComponent* InteractionComp);                                                          // [0xe9bf60] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinInteractionManagerComponent.IsCanInteractWithTarget
	// bool IsCanInteractWithTarget();                                                                                       // [0xe9bf00] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinInteractionManagerComponent.GetInteractionShowInfo
	// void GetInteractionShowInfo(EPaladinMarkCategory InMarkCategory, FName InCustomMarkType, FPaladinInteractionShowInfo& OutShowInfo); // [0xe9bd90] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinInteractionManagerComponent.GetInteractingTarget
	// class UInteractionComponent* GetInteractingTarget();                                                                  // [0xe9bd40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinInteractionManagerComponent.GetFocusActor
	// class AActor* GetFocusActor();                                                                                        // [0xe9bb10] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinInteractionManagerComponent.GetCurrentTraceTargetData
	// FInteractionTargetData GetCurrentTraceTargetData();                                                                   // [0xe9bad0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinInteractionManagerComponent.EndInteract
	// void EndInteract(class UInteractionComponent* InterComp, class UPaladinInteraction* InteractionImpl);                 // [0xe9b980] Final|Native|Public  
	// Function /Script/Pal7.PaladinInteractionManagerComponent.ClearTraceTarget
	// void ClearTraceTarget();                                                                                              // [0xe9b920] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinInteractionManagerComponent.BindInteractKeyEvents
	// void BindInteractKeyEvents(TEnumAsByte<EInputEvent> InputEvent, EPaladinKeyEventName EventNameEnum, float CurTickHoldSpan, float PreTickHoldSpan, float KeyMappingValue); // [0xe9b790] Final|Native|Private 
};

/// Struct /Script/Pal7.PaladinItemAbilityParticleCfg
/// Size: 0x0030 (0x000000 - 0x000030)
struct FPaladinItemAbilityParticleCfg
{ 
	SDK_UNDEFINED(40,1664) /* TWeakObjectPtr<UParticleSystem*> */ __um(Particle);                                  // 0x0000   (0x0028)  
	FName                                              AttachSocket;                                               // 0x0028   (0x0008)  
};

/// Class /Script/Pal7.PaladinItemAbility
/// Size: 0x0058 (0x000410 - 0x000468)
class UPaladinItemAbility : public UPaladinAbilityBase
{ 
public:
	TArray<FPaladinItemAbilityParticleCfg>             Particles;                                                  // 0x0410   (0x0010)  
	bool                                               IsInstantRecovery;                                          // 0x0420   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0421   (0x0003)  MISSED
	FGameplayTag                                       RecoveryType;                                               // 0x0424   (0x0008)  
	bool                                               CanUseByHotKey;                                             // 0x042C   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x042D   (0x0003)  MISSED
	class UClass*                                      CDEffect;                                                   // 0x0430   (0x0008)  
	SDK_UNDEFINED(40,1665) /* TWeakObjectPtr<USoundAtomCue*> */ __um(Sound);                                       // 0x0438   (0x0028)  
	bool                                               IgnoreCooldownWhenGamePaused;                               // 0x0460   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0461   (0x0007)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinItemAbility.CheckConfig
	// bool CheckConfig(class AActor* Actor);                                                                                // [0x15dd8c0] Event|Public|BlueprintEvent 
};

/// Class /Script/Pal7.PaladinEquipAbility
/// Size: 0x0018 (0x000410 - 0x000428)
class UPaladinEquipAbility : public UPaladinAbilityBase
{ 
public:
	float                                              CD;                                                         // 0x0410   (0x0004)  
	EItemMainType                                      EquipmentType;                                              // 0x0414   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0415   (0x0003)  MISSED
	int32_t                                            EquipmentID;                                                // 0x0418   (0x0004)  
	unsigned char                                      UnknownData01_6[0xC];                                       // 0x041C   (0x000C)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinEquipAbility.K2_TakeOffEquip
	// void K2_TakeOffEquip();                                                                                               // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinEquipAbility.K2_OnEquip
	// void K2_OnEquip();                                                                                                    // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinEquipAbility.K2_GetEquipmentAttributeValue
	// float K2_GetEquipmentAttributeValue(FGameplayAttribute Attribute);                                                    // [0xea07e0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/Pal7.PaladinEquipAbility.GetConfigData
	// void GetConfigData(class UCurveTable* CurveTable, FName RowName, EEvaluateCurveTableResult& OutResult, float& OutXY, class UPaladinEquipAbility* Ability); // [0xe9ed10] Final|Native|Static|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinEquipAbility.GetAbilityCD
	// float GetAbilityCD();                                                                                                 // [0xe710d0] Native|Event|Protected|BlueprintEvent|Const 
};

/// Class /Script/Pal7.PaladinItemManager
/// Size: 0x0510 (0x000028 - 0x000538)
class UPaladinItemManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x68];                                      // 0x0000   (0x0068)  MISSED
	class UDataTable*                                  NpcSellDataTable;                                           // 0x0068   (0x0008)  
	SDK_UNDEFINED(80,1666) /* TMap<EItemMainType, FGameplayTag> */ __um(ItemBuffMarkTag);                          // 0x0070   (0x0050)  
	FGameplayTag                                       DefaultOwnCards;                                            // 0x00C0   (0x0008)  
	FGameplayTag                                       DefaultDeckCards;                                           // 0x00C8   (0x0008)  
	int32_t                                            Money;                                                      // 0x00D0   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x00D4   (0x0004)  MISSED
	SDK_UNDEFINED(16,1667) /* FMulticastInlineDelegate */ __um(OnUseItemEventDelegate);                            // 0x00D8   (0x0010)  
	SDK_UNDEFINED(16,1668) /* FMulticastInlineDelegate */ __um(OnItemCountChangedEventDelegate);                   // 0x00E8   (0x0010)  
	SDK_UNDEFINED(16,1669) /* FMulticastInlineDelegate */ __um(OnItemHoSlotChangedEventDelegate);                  // 0x00F8   (0x0010)  
	SDK_UNDEFINED(16,1670) /* FMulticastInlineDelegate */ __um(OnHeroGearedEquipmentEventDelegate);                // 0x0108   (0x0010)  
	SDK_UNDEFINED(16,1671) /* FMulticastInlineDelegate */ __um(OnHeroTakeOffEquipmentEventDelegate);               // 0x0118   (0x0010)  
	SDK_UNDEFINED(16,1672) /* FMulticastInlineDelegate */ __um(OnMyEquipmentInfoChangedEventDelegate);             // 0x0128   (0x0010)  
	SDK_UNDEFINED(16,1673) /* FMulticastInlineDelegate */ __um(ChangeCardEventDelegate);                           // 0x0138   (0x0010)  
	SDK_UNDEFINED(16,1674) /* FMulticastInlineDelegate */ __um(RefreshAdvCardLimitEventDelegate);                  // 0x0148   (0x0010)  
	SDK_UNDEFINED(16,1675) /* FMulticastInlineDelegate */ __um(LoadItemDataDelegate);                              // 0x0158   (0x0010)  
	SDK_UNDEFINED(16,1676) /* FMulticastInlineDelegate */ __um(RefreshBattleDeckEventDelegate);                    // 0x0168   (0x0010)  
	unsigned char                                      UnknownData02_5[0x30];                                      // 0x0178   (0x0030)  MISSED
	int32_t                                            LastForgeID;                                                // 0x01A8   (0x0004)  
	int32_t                                            LastEnhanceID;                                              // 0x01AC   (0x0004)  
	int32_t                                            MaxSingleItemCount;                                         // 0x01B0   (0x0004)  
	int32_t                                            MaxOwnedMoney;                                              // 0x01B4   (0x0004)  
	SDK_UNDEFINED(80,1677) /* TMap<EPaladinGameDifficulty, float> */ __um(ItemUseLimitRateByDifficult);            // 0x01B8   (0x0050)  
	unsigned char                                      UnknownData03_6[0x330];                                     // 0x0208   (0x0330)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinItemManager.UpdateMoney
	// int32_t UpdateMoney(int32_t Num, bool AffectedByMoneyRate);                                                           // [0xea17a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.TryUseItem
	// bool TryUseItem(int32_t ID, class UAbilitySystemComponent* TargetASC);                                                // [0xea16e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.TrySellItem
	// bool TrySellItem(int32_t TemplateID, int32_t Count, int32_t EquipmentID);                                             // [0xea15e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.TryForgeEquipment
	// EItemForgeResult TryForgeEquipment(int32_t TemplateID);                                                               // [0xea1550] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.TryChangePlayerDeck
	// bool TryChangePlayerDeck(EDeckGroup TargetDeck, int32_t SlotIndex, int32_t SlotCardID, int32_t ClickCardID);          // [0xea1410] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.TryBuyItem
	// bool TryBuyItem(int32_t ID, int32_t Count, FName NPC, FName TagName);                                                 // [0xea12d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.TakeOffEquipment
	// int32_t TakeOffEquipment(EPaladinHeroName HeroName, EItemMainType EquipmentType);                                     // [0xea1200] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.SetHotSlot
	// void SetHotSlot(int32_t SlotIndex, int32_t ItemId);                                                                   // [0xea1140] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.SetBattleDeck
	// void SetBattleDeck(EDeckGroup DeckNum);                                                                               // [0xea10c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.RemoveEquipmentByTemplateID
	// bool RemoveEquipmentByTemplateID(int32_t EquipmentID, EItemMainType Type);                                            // [0xea1000] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.RemoveEquipment
	// bool RemoveEquipment(int32_t EquipmentID, EItemMainType Type, bool showMessage);                                      // [0xea0f00] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.MarkItemOld
	// void MarkItemOld(int32_t ItemId);                                                                                     // [0xea0e80] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.MarkEquipmentOldByIDAndType
	// void MarkEquipmentOldByIDAndType(int32_t EquipmentID, EItemMainType Type);                                            // [0xea0dc0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.MarkCardOld
	// void MarkCardOld(int32_t ItemId);                                                                                     // [0xea0d40] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.K2_GetMyEquipmentInfoByEquipmentIDAndType
	// bool K2_GetMyEquipmentInfoByEquipmentIDAndType(int32_t EquipmentID, EItemMainType Type, FSaveEquipmentInfo& MyEquipmentInfo, FEquipmentExtraInfo& EquipmentTemplateInfo, FItemBaseInfo& ItemBaseInfo); // [0xea0ac0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.K2_GetEquipmentTemplateInfoByTemplateID
	// bool K2_GetEquipmentTemplateInfoByTemplateID(int32_t EquipmentTemplateID, FEquipmentExtraInfo& EquipmentTemplateInfo); // [0xea09b0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.IsOwnByItemTypes
	// void IsOwnByItemTypes(TArray<EItemMainType> ItemTypes, bool& bIsOwn, bool& bIsCanSell);                               // [0xea0650] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.IsOwnAndNewByCardID
	// void IsOwnAndNewByCardID(int32_t CardID, bool& IsOwn, bool& IsNew);                                                   // [0xea0530] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.IsNewItem
	// bool IsNewItem(int32_t ItemId);                                                                                       // [0xea04a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.IsEquipment
	// bool IsEquipment(EItemMainType Type);                                                                                 // [0xea0410] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.IsAdvCardIsLimited
	// bool IsAdvCardIsLimited(EDeckGroup TargetDeck);                                                                       // [0xea0380] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinItemManager.IsAdvCardByCardID
	// bool IsAdvCardByCardID(int32_t CardID);                                                                               // [0xea02f0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinItemManager.InitCardDeckDefault
	// void InitCardDeckDefault();                                                                                           // [0xea02d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.GetSortedWeaponListForEnhanceOneHero
	// void GetSortedWeaponListForEnhanceOneHero(EPaladinHeroName Hero, TArray<FSaveEquipmentInfo>& ResultList);             // [0xea01c0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.GetSortedEquipmentListForOneHero
	// void GetSortedEquipmentListForOneHero(EItemMainType EquipmentType, TArray<FSaveEquipmentInfo>& ResultList);           // [0xea00b0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.GetOneHeroGeared
	// TArray<int32_t> GetOneHeroGeared(EPaladinHeroName HeroName);                                                          // [0xe9ffe0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.GetNpcLimitGoodsRecord
	// TMap<int32_t, int32_t> GetNpcLimitGoodsRecord(FName NPC, FName Tag);                                                  // [0xe9fe10] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.GetMyMoney
	// int32_t GetMyMoney();                                                                                                 // [0xe9fde0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.GetMyItemsByType
	// void GetMyItemsByType(EItemMainType Type, TArray<int32_t>& IDList, TArray<int32_t>& NumList, bool IsForSetHotKey, bool SortIDByItemPriority); // [0xe9fc00] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.GetMyItemsByMultiType
	// void GetMyItemsByMultiType(TArray<EItemMainType> Types, TArray<int32_t>& IDList, TArray<int32_t>& NumList);           // [0xe9fa50] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.GetMyEquipmentListByType
	// TArray<FSaveEquipmentInfo> GetMyEquipmentListByType(EItemMainType EquipmentType);                                     // [0xe9f8e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.GetMyEquipmentInfoByEquipmentIDAndType_BP
	// bool GetMyEquipmentInfoByEquipmentIDAndType_BP(int32_t EquipmentID, EItemMainType Type, FSaveEquipmentInfo& Info);    // [0xe9f7b0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.GetMarkTagByItemMainType
	// FGameplayTag GetMarkTagByItemMainType(EItemMainType Type);                                                            // [0xe9f720] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.GetLimitItemCount
	// int32_t GetLimitItemCount(int32_t ID);                                                                                // [0xe9f690] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.GetItemIDBySlotIndex
	// int32_t GetItemIDBySlotIndex(int32_t SlotIndex);                                                                      // [0xe9f600] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.GetItemCount
	// int32_t GetItemCount(int32_t ID);                                                                                     // [0xe9f570] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.GetItemBaseInfo
	// bool GetItemBaseInfo(int32_t ItemId, FItemBaseInfo& baseInfo);                                                        // [0xe9f420] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.GetHeroGearedByEquipmentType
	// int32_t GetHeroGearedByEquipmentType(EPaladinHeroName HeroName, EItemMainType EquipmentType);                         // [0xe9f350] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.GetEquipType
	// EItemMainType GetEquipType(int32_t ItemTemId);                                                                        // [0xe9eec0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.GetEquipmentTemplateIDByEquipInstanceIDAndType
	// int32_t GetEquipmentTemplateIDByEquipInstanceIDAndType(int32_t EquipInstanceID, EItemMainType EquipmentType);         // [0xe9f290] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinItemManager.GetEquipmentInstanceIDByTemplateID
	// bool GetEquipmentInstanceIDByTemplateID(int32_t TemplateID, EItemMainType Type, int32_t& InstanceID);                 // [0xe9f180] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.GetEquipmentAttrByString
	// void GetEquipmentAttrByString(FEquipmentExtraInfo& EquipInfo, FGameplayAttribute& AttrName, float& AttrNum, bool& Modified); // [0xe9ef50] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.GetCardListByType
	// void GetCardListByType(ECardType CardType, TMap<int32_t, bool>& CardList, int32_t& FillNum);                          // [0xe9eae0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.GetCardListByGroupNum
	// void GetCardListByGroupNum(EDeckGroup DeckNum, TArray<int32_t>& CardList);                                            // [0xe9e9f0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.GetBattleDeck
	// void GetBattleDeck(EDeckGroup& TargetDeck, TArray<int32_t>& CardList);                                                // [0xe9e8f0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.GetAdvCardNum
	// int32_t GetAdvCardNum(EDeckGroup TargetDeck);                                                                         // [0xe9e860] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinItemManager.GearEquipment
	// void GearEquipment(EPaladinHeroName HeroName, EItemMainType EquipmentType, int32_t EquipmentID);                      // [0xe9e760] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.FindHeroGearedEquipment
	// EPaladinHeroName FindHeroGearedEquipment(EItemMainType EquipmentType, int32_t EquipmentID);                           // [0xe9e6a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.EnhanceWeapon
	// EItemEnhanceResult EnhanceWeapon(int32_t WeaponID, int32_t ModifierIndex);                                            // [0xe9e5e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.CostItem
	// bool CostItem(int32_t ID, int32_t Count, bool showMessage, bool costAll);                                             // [0xe9e480] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.CardSortByRating
	// void CardSortByRating(EDeckGroup DeckNum);                                                                            // [0xe9e400] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.CanGearEquipment
	// int32_t CanGearEquipment(EPaladinHeroName HeroName, EItemMainType EquipmentType, int32_t EquipmentID);                // [0xe9e240] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.CanForgeEquipment
	// EItemForgeResult CanForgeEquipment(int32_t TemplateID);                                                               // [0xe9e1b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.CanEnhanceWeapon
	// EItemEnhanceResult CanEnhanceWeapon(int32_t WeaponID, int32_t ModifierIndex);                                         // [0xe9e0f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.CancelEnhanceWeapon
	// bool CancelEnhanceWeapon(int32_t WeaponID, int32_t ModifierIndex);                                                    // [0xe9e340] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.CanCancelEnhanceWeapon
	// bool CanCancelEnhanceWeapon(int32_t WeaponID, int32_t ModifierIndex);                                                 // [0xe9e030] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.CalcLimitItemCountByDifficult
	// int32_t CalcLimitItemCountByDifficult(int32_t Count);                                                                 // [0xe9dfa0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinItemManager.BroadcastSelfLimitedState
	// void BroadcastSelfLimitedState(EDeckGroup TargetDeck, int32_t SlotCardID);                                            // [0xe9dee0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.AddItem
	// bool AddItem(int32_t ID, int32_t Count, bool showMessage);                                                            // [0xe9dde0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.AddEquipment
	// int32_t AddEquipment(int32_t ItemId);                                                                                 // [0xe9dd50] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinItemManager.AddCard
	// int32_t AddCard(int32_t ItemId);                                                                                      // [0xe9dcc0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinJointstrikeManager
/// Size: 0x0098 (0x0000B0 - 0x000148)
class UPaladinJointstrikeManager : public UActorComponent
{ 
public:
	class UDataTable*                                  JointStrikeDT;                                              // 0x00B0   (0x0008)  
	class UClass*                                      JointStrikQTEClass;                                         // 0x00B8   (0x0008)  
	class UEnvQuery*                                   QueryTemplate;                                              // 0x00C0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x80];                                      // 0x00C8   (0x0080)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinJointstrikeManager.TryJointStrike
	// void TryJointStrike();                                                                                                // [0xea79d0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinLevelInfo
/// Size: 0x0078 (0x000030 - 0x0000A8)
class UPaladinLevelInfo : public UDataAsset
{ 
public:
	FSoftObjectPath                                    MainLevel;                                                  // 0x0030   (0x0018)  
	FSoftObjectPath                                    LightLevel;                                                 // 0x0048   (0x0018)  
	FSoftObjectPath                                    EntranceLevel;                                              // 0x0060   (0x0018)  
	TArray<FSoftObjectPath>                            SubLevels;                                                  // 0x0078   (0x0010)  
	TArray<FSoftObjectPath>                            MonsterLevels;                                              // 0x0088   (0x0010)  
	TArray<FSoftObjectPath>                            NPCLevels;                                                  // 0x0098   (0x0010)  
};

/// Class /Script/Pal7.PaladinLevelSequenceActor
/// Size: 0x00D0 (0x0002B0 - 0x000380)
class APaladinLevelSequenceActor : public ALevelSequenceActor
{ 
public:
	FPaladinMoveSceneSequencePlaybackSettings          PaladinPlaybackSettings;                                    // 0x02B0   (0x00D0)  


	/// Functions
	// Function /Script/Pal7.PaladinLevelSequenceActor.SetCustomOrigin
	// void SetCustomOrigin(FTransform Origin);                                                                              // [0xea77e0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinLevelSequenceActor.AddPaladinBinding
	// void AddPaladinBinding(TArray<FSequenceBindingOverrideData>& InBindingDatas);                                         // [0xea5fe0] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinLevelSequencePlayer
/// Size: 0x01B8 (0x0009A8 - 0x000B60)
class UPaladinLevelSequencePlayer : public ULevelSequencePlayer
{ 
public:
	unsigned char                                      UnknownData00_3[0xD8];                                      // 0x09A8   (0x00D8)  MISSED
	SDK_UNDEFINED(16,1678) /* FMulticastInlineDelegate */ __um(OnPaladinStop);                                     // 0x0A80   (0x0010)  
	unsigned char                                      UnknownData01_5[0x30];                                      // 0x0A90   (0x0030)  MISSED
	class ACineCameraActor*                            LastCameraActorClone;                                       // 0x0AC0   (0x0008)  
	unsigned char                                      UnknownData02_6[0x98];                                      // 0x0AC8   (0x0098)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinLevelSequencePlayer.ResumeDialogueSequencePlayer
	// void ResumeDialogueSequencePlayer();                                                                                  // [0xea77c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinLevelSequencePlayer.PaladinResume
	// void PaladinResume(bool bPushPlayMode);                                                                               // [0xea7710] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinLevelSequencePlayer.PaladinPause
	// void PaladinPause(bool bPopPlayMode, bool bInExitGraphicsQuality);                                                    // [0xea7640] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinLevelSequencePlayer.GetInstanceID
	// FGuid GetInstanceID();                                                                                                // [0xea6740] Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinLevelSequencePlayer.EnableFadeOutCamera
	// void EnableFadeOutCamera(bool bInEnable);                                                                             // [0xea6450] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinLevelSequencePlayer.CreatePaladinLevelSequencePlayer
	// class UPaladinLevelSequencePlayer* CreatePaladinLevelSequencePlayer(class UObject* WorldContextObject, class ULevelSequence* InLevelSequence, FPaladinMoveSceneSequencePlaybackSettings PaladinSettings, class APaladinLevelSequenceActor*& OutActor, class AActor* ActorForLevelInfo); // [0xea6130] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinLevelStreamingTrigger
/// Size: 0x0020 (0x000228 - 0x000248)
class APaladinLevelStreamingTrigger : public ATriggerBox
{ 
public:
	SDK_UNDEFINED(16,1679) /* TArray<TWeakObjectPtr<UWorld*>> */ __um(MapsToLoad);                                 // 0x0228   (0x0010)  
	SDK_UNDEFINED(16,1680) /* TArray<TWeakObjectPtr<UWorld*>> */ __um(MapsToUnload);                               // 0x0238   (0x0010)  
};

/// Class /Script/Pal7.PaladinLevelStreamingVolume
/// Size: 0x0028 (0x000270 - 0x000298)
class APaladinLevelStreamingVolume : public ALevelStreamingVolume
{ 
public:
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0270   (0x0028)  MISSED
};

/// Class /Script/Pal7.PaladinLocalPlayer
/// Size: 0x0000 (0x000258 - 0x000258)
class UPaladinLocalPlayer : public ULocalPlayer
{ 
public:
};

/// Class /Script/Pal7.PaladinLookAtInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladinLookAtInterface : public UInterface
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinLookAtInterface.GetFocusLocation
	// void GetFocusLocation(bool& bIsFocusing, FVector& OutFocusLocation);                                                  // [0xea6650] Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/Pal7.PaladinLoopLandspace
/// Size: 0x00A8 (0x000220 - 0x0002C8)
class APaladinLoopLandspace : public AActor
{ 
public:
	float                                              ViewDistance;                                               // 0x0220   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0224   (0x0004)  MISSED
	class UClass*                                      LandspaceActorAsset;                                        // 0x0228   (0x0008)  
	unsigned char                                      UnknownData01_5[0x18];                                      // 0x0230   (0x0018)  MISSED
	class AActor*                                      DefaultLandspace;                                           // 0x0248   (0x0008)  
	unsigned char                                      UnknownData02_5[0x60];                                      // 0x0250   (0x0060)  MISSED
	float                                              RefreshInterval;                                            // 0x02B0   (0x0004)  
	FVector                                            TargetLocation;                                             // 0x02B4   (0x000C)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x02C0   (0x0008)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinLoopLandspace.RefreshLandspaces
	// void RefreshLandspaces();                                                                                             // [0xea77a0] Final|Native|Protected 
};

/// Class /Script/Pal7.PaladinLoseAwakenCalculation
/// Size: 0x0000 (0x000040 - 0x000040)
class UPaladinLoseAwakenCalculation : public UGameplayEffectExecutionCalculation
{ 
public:
};

/// Class /Script/Pal7.PaladinManaCostExecution
/// Size: 0x0000 (0x000040 - 0x000040)
class UPaladinManaCostExecution : public UGameplayEffectExecutionCalculation
{ 
public:
};

/// Class /Script/Pal7.PaladinMapBlueprintLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladinMapBlueprintLibrary : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinMapBlueprintLibrary.ShouldMarkShowInMap
	// bool ShouldMarkShowInMap(EPaladinMarkCategory InMarkCategory);                                                        // [0xea78d0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinMapBlueprintLibrary.IsMarkNeedTrack
	// bool IsMarkNeedTrack(EPaladinMarkCategory InMarkCategory);                                                            // [0xea7370] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinMapBlueprintLibrary.GetSaveMapMetaInfo
	// bool GetSaveMapMetaInfo(FName& InMapRowID, FLinearColor& InAreaColor, FText& OutAreaName);                            // [0xea6fc0] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinMapBlueprintLibrary.GetQuestTrackTargetMarkType
	// bool GetQuestTrackTargetMarkType(EQuestCategory InQuestCategory, FPaladinMarkTypeInfo& OutInfo);                      // [0xea6e80] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinMapBlueprintLibrary.GetQuestPublisherMarkType
	// bool GetQuestPublisherMarkType(FPaladinMarkTypeInfo& OutInfo);                                                        // [0xea6d80] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinMapBlueprintLibrary.GetPaladinMarkTypeInfo
	// bool GetPaladinMarkTypeInfo(FName InMarkType, FPaladinMarkTypeInfo& OutInfo);                                         // [0xea6c20] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinMapBlueprintLibrary.GetMapResourceInfo
	// bool GetMapResourceInfo(FName InResourceID, FPaladinCustomMapInfo& OutInfo);                                          // [0xea6800] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinMapBlueprintLibrary.GetMapManager
	// class UPaladinMapManager* GetMapManager(class UObject* WorldContextObject);                                           // [0xea6780] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinMapBlueprintLibrary.FindMarkUnitIcon
	// class UPaperSprite* FindMarkUnitIcon(class UObject* WorldContextObject, FPaladinMarkingUnitInfo& OutMarkUnitInfo);    // [0xea64e0] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
};

/// Class /Script/Pal7.PaladinMapManager
/// Size: 0x0110 (0x0000B0 - 0x0001C0)
class UPaladinMapManager : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,1681) /* FMulticastInlineDelegate */ __um(OnMapResourceChangedSignature);                     // 0x00B0   (0x0010)  
	SDK_UNDEFINED(16,1682) /* FMulticastInlineDelegate */ __um(OnMarkActorChanged);                                // 0x00C0   (0x0010)  
	SDK_UNDEFINED(16,1683) /* FMulticastInlineDelegate */ __um(OnShowTreasureChanged);                             // 0x00D0   (0x0010)  
	class UPaladinMapMarkSettings*                     MapMarkSettings;                                            // 0x00E0   (0x0008)  
	unsigned char                                      UnknownData00_5[0xC0];                                      // 0x00E8   (0x00C0)  MISSED
	TArray<class UPaladinActorInfoComponent*>          MarkerList;                                                 // 0x01A8   (0x0010)  
	class UPaladinActorInfoComponent*                  PlayerTrackActor;                                           // 0x01B8   (0x0008)  


	/// Functions
	// Function /Script/Pal7.PaladinMapManager.UntrackPlayerMarkActor
	// void UntrackPlayerMarkActor(class UPaladinActorInfoComponent* InNewActor);                                            // [0xea79f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinMapManager.TrackPlayerMarkActor
	// void TrackPlayerMarkActor(class UPaladinActorInfoComponent* InNewActor);                                              // [0xea7950] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinMapManager.OnQuestTagChanged
	// void OnQuestTagChanged(FGameplayTag QuestTag, bool bAddTag);                                                          // [0xea7570] Final|Native|Private 
	// Function /Script/Pal7.PaladinMapManager.OnMapAssetLoaded
	// void OnMapAssetLoaded();                                                                                              // [0xea7550] Final|Native|Private 
	// Function /Script/Pal7.PaladinMapManager.OnLevelLoadDone
	// void OnLevelLoadDone(FName InLevelID);                                                                                // [0xea74d0] Final|Native|Private 
	// Function /Script/Pal7.PaladinMapManager.OnActorMarkInfoChanged
	// void OnActorMarkInfoChanged(class UPaladinActorInfoComponent* ActorComp);                                             // [0xea7450] Final|Native|Public  
	// Function /Script/Pal7.PaladinMapManager.IsCanShowTreasure
	// bool IsCanShowTreasure();                                                                                             // [0xea7340] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinMapManager.GetPlayerTrackActor
	// class UPaladinActorInfoComponent* GetPlayerTrackActor();                                                              // [0xea6d60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinMapManager.GetMarkDetail
	// bool GetMarkDetail(EPaladinMarkCategory& MarkCategory, FName& CustomMarkKey, FName& DetailKey, FText& Titile, FText& Desc); // [0xea69d0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinMapManager.GetMarkActors
	// void GetMarkActors(TArray<UPaladinActorInfoComponent*>& OutActorComps);                                               // [0xea6920] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinMapManager.GetMapToWorldRatio
	// float GetMapToWorldRatio();                                                                                           // [0xe7fb40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinMapManager.GetCurrentMapResourceID
	// FName GetCurrentMapResourceID();                                                                                      // [0xea6630] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinMapManager.GetCurrentMapInfo
	// FPaladinCustomMapInfo GetCurrentMapInfo();                                                                            // [0xea65d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinMapManager.ChangeMapResource
	// void ChangeMapResource(FName InResourceID);                                                                           // [0xea60b0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinMapMarkSettings
/// Size: 0x00A0 (0x000030 - 0x0000D0)
class UPaladinMapMarkSettings : public UDataAsset
{ 
public:
	SDK_UNDEFINED(80,1684) /* TMap<EPaladinMarkCategory, FPaladinMarkSettingInfo> */ __um(MarkCategorySettings);   // 0x0030   (0x0050)  
	SDK_UNDEFINED(80,1685) /* TMap<FName, FPaladinMarkSettingInfo> */ __um(CustomMarkSettings);                    // 0x0080   (0x0050)  
};

/// Class /Script/Pal7.PaladinMapMarkWidget
/// Size: 0x0040 (0x000230 - 0x000270)
class UPaladinMapMarkWidget : public UUserWidget
{ 
public:
	class UPaladinActorInfoComponent*                  OwnerActorInfoComp;                                         // 0x0230   (0x0008)  
	FVector2D                                          PositionInMap;                                              // 0x0238   (0x0008)  
	bool                                               bRangeMark;                                                 // 0x0240   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0241   (0x0003)  MISSED
	float                                              RangeRadius;                                                // 0x0244   (0x0004)  
	class UPaperSprite*                                MarkIcon;                                                   // 0x0248   (0x0008)  
	EPaladinMarkCategory                               MarkCategory;                                               // 0x0250   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0251   (0x0003)  MISSED
	FName                                              CustomMarkKey;                                              // 0x0254   (0x0008)  
	bool                                               bTrackInMap;                                                // 0x025C   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x025D   (0x0003)  MISSED
	FName                                              DetailKey;                                                  // 0x0260   (0x0008)  
	float                                              MapWorldRatio;                                              // 0x0268   (0x0004)  
	EMarkInMapType                                     MapType;                                                    // 0x026C   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x026D   (0x0003)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinMapMarkWidget.K2_SetMarkRelativeType
	// void K2_SetMarkRelativeType(ERelativeZAxisType InType);                                                               // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinMapMarkWidget.K2_OnMarkInit
	// void K2_OnMarkInit(bool bInShowIcon, class UPaperSprite* InMarkIcon, bool bInShowRange, float InRangeRadius, float InMapWorldRatio, EPaladinMarkCategory InMarkCategory, EMarkInMapType InMapType); // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinMapMarkWidget.IsNeedTrack
	// bool IsNeedTrack();                                                                                                   // [0xea7420] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinMapMarkWidget.IsNeedCustomTrack
	// bool IsNeedCustomTrack();                                                                                             // [0xea73f0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinMapMarkWidget.InitMarkWidget
	// bool InitMarkWidget(FPaladinMarkingUnitInfo& InMarkUnit, class UPaladinActorInfoComponent* InActorInfo, bool bInShowIcon, bool bInShowRange, float InMapWorldRatio, EMarkInMapType InMapType); // [0xea7140] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinMapMarkWidget.GetMarkActorComponent
	// class UPaladinActorInfoComponent* GetMarkActorComponent();                                                            // [0xea68f0] Final|Native|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/Pal7.JumpMapSequenceData
/// Size: 0x0230 (0x000028 - 0x000258)
class UJumpMapSequenceData : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x28];                                      // 0x0000   (0x0028)  MISSED
	SDK_UNDEFINED(80,1686) /* TMap<EPaladinHeroName, FPaladinLevelSequence> */ __um(FlyUpSequences_Common);        // 0x0028   (0x0050)  
	SDK_UNDEFINED(80,1687) /* TMap<EPaladinHeroName, FPaladinLevelSequence> */ __um(LandSequences);                // 0x0078   (0x0050)  
	SDK_UNDEFINED(80,1688) /* TMap<EPaladinHeroName, FPaladinLevelSequence> */ __um(InCruise_RenJie);              // 0x00C8   (0x0050)  
	SDK_UNDEFINED(80,1689) /* TMap<EPaladinHeroName, FPaladinLevelSequence> */ __um(OutCruise_RenJie);             // 0x0118   (0x0050)  
	SDK_UNDEFINED(80,1690) /* TMap<EPaladinHeroName, FPaladinLevelSequence> */ __um(FlyUpSequences_KuaJie);        // 0x0168   (0x0050)  
	SDK_UNDEFINED(80,1691) /* TMap<EPaladinHeroName, FPaladinLevelSequence> */ __um(InCruise_MoJie);               // 0x01B8   (0x0050)  
	SDK_UNDEFINED(80,1692) /* TMap<EPaladinHeroName, FPaladinLevelSequence> */ __um(OutCruise_MoJie);              // 0x0208   (0x0050)  
};

/// Class /Script/Pal7.PaladinMemorySequenceAsset
/// Size: 0x0010 (0x000030 - 0x000040)
class UPaladinMemorySequenceAsset : public UPrimaryDataAsset
{ 
public:
	class UPaladinSequenceInfo*                        SequenceInfo;                                               // 0x0030   (0x0008)  
	FName                                              NeedLevelID;                                                // 0x0038   (0x0008)  
};

/// Class /Script/Pal7.PaladinMergeMeshBlueprintLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladinMergeMeshBlueprintLibrary : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinMergeMeshBlueprintLibrary.RequestAsyncMergeMesh
	// bool RequestAsyncMergeMesh(TArray<USkeletalMesh*>& MeshedToMerge, class USkeletalMesh* NewMergedMesh);                // [0xeabcf0] Final|Native|Static|Public|HasOutParms 
	// Function /Script/Pal7.PaladinMergeMeshBlueprintLibrary.RandomMergeMeshMaterial
	// bool RandomMergeMeshMaterial(TArray<TWeakObjectPtr<USkeletalMesh*>>& InMainMergeMeshes, TMap<TWeakObjectPtr<UMaterialInterface*>, TWeakObjectPtr<UMaterialInterface*>>& OutRandMatMap); // [0xeabb60] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinMergeMeshBlueprintLibrary.MergeSkeletalMeshForNPC
	// bool MergeSkeletalMeshForNPC(class USkeletalMeshComponent* OutSkeletalMeshComp, TArray<USkeletalMeshComponent*> InMeshCmps, TArray<USkeletalMesh*>& InExMeshList, TArray<FSkeletalMaterial>& InOverrideMaterials, class USkeletalMesh*& OutNewMergedMesh); // [0xeab780] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinMergeMeshBlueprintLibrary.MergeSkeletalMeshComponent
	// bool MergeSkeletalMeshComponent(class USkeletalMeshComponent* OutSkeletalMeshComp, TArray<USkeletalMeshComponent*> InMeshCmps, TArray<USkeletalMesh*>& InSrcMeshList, TArray<FSkeletalMaterial>& InOverrideMaterials, class USkeletalMesh*& OutNewMergedMesh); // [0xeab550] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinMergeMeshBlueprintLibrary.MatchNPCFaceSkin
	// EMathcFaceMaterialResult MatchNPCFaceSkin(TArray<TWeakObjectPtr<USkeletalMesh*>>& InMainMergeMeshes, TMap<TWeakObjectPtr<UMaterialInterface*>, TWeakObjectPtr<UMaterialInterface*>>& InLockedMaterialMap, TWeakObjectPtr<UMaterialInterface*>& OutFaceKey, TWeakObjectPtr<UMaterialInterface*>& OutNewFaceValue); // [0xeab2c0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinMergeMeshBlueprintLibrary.FindNPCMeshPhysicsAsset
	// TWeakObjectPtr<UPhysicsAsset*> FindNPCMeshPhysicsAsset(TArray<TWeakObjectPtr<USkeletalMesh*>>& InMainMergeMeshes);    // [0xeaaaf0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinMergeMeshBlueprintLibrary.EmptySkeletalMeshComponentMaterials
	// void EmptySkeletalMeshComponentMaterials(class USkeletalMeshComponent* InMeshComp);                                   // [0xeaa9f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinMergeMeshBlueprintLibrary.DoMergeMeshEx
	// class USkeletalMesh* DoMergeMeshEx(TArray<USkeletalMesh*>& MeshedToMerge);                                            // [0xeaa940] Final|Native|Static|Public|HasOutParms 
	// Function /Script/Pal7.PaladinMergeMeshBlueprintLibrary.CollectSkeletalCompMaterials
	// void CollectSkeletalCompMaterials(TArray<USkeletalMeshComponent*> SkelComp, TMap<FName, FSkeletalMaterial>& MaterialMap); // [0xeaa670] Final|Native|Static|Public|HasOutParms 
	// Function /Script/Pal7.PaladinMergeMeshBlueprintLibrary.ApplyLockMergeMeshMaterial
	// void ApplyLockMergeMeshMaterial(class USkeletalMeshComponent* InSkeletalMeshComp, TMap<TWeakObjectPtr<UMaterialInterface*>, TWeakObjectPtr<UMaterialInterface*>>& LockedMatMap); // [0xeaa4a0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinMergeMeshManager
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UPaladinMergeMeshManager : public UActorComponent
{ 
public:
	SDK_UNDEFINED(80,1693) /* TMap<FString, FMergeMeshInstance> */ __um(MergedMeshInstances);                      // 0x00B0   (0x0050)  
};

/// Struct /Script/Pal7.MiniMapMarkInstance
/// Size: 0x0020 (0x000000 - 0x000020)
struct FMiniMapMarkInstance
{ 
	FName                                              ActorID;                                                    // 0x0000   (0x0008)  
	class AActor*                                      MarkActor;                                                  // 0x0008   (0x0008)  
	class UPaladinMapMarkWidget*                       MarkWidget;                                                 // 0x0010   (0x0008)  
	class UPaladinMapMarkWidget*                       MarkRangeWidget;                                            // 0x0018   (0x0008)  
};

/// Class /Script/Pal7.PaladinMiniMapWidget
/// Size: 0x01C8 (0x000230 - 0x0003F8)
class UPaladinMiniMapWidget : public UUserWidget
{ 
public:
	float                                              MiniMapUIRadius;                                            // 0x0230   (0x0004)  
	float                                              MaxViewRadius;                                              // 0x0234   (0x0004)  
	class UClass*                                      MarkClazz;                                                  // 0x0238   (0x0008)  
	float                                              UpdatePlayerLocThreshold;                                   // 0x0240   (0x0004)  
	float                                              AreaColorTolerance;                                         // 0x0244   (0x0004)  
	FName                                              DefaultPlayMode;                                            // 0x0248   (0x0008)  
	float                                              ZAxisThreshold;                                             // 0x0250   (0x0004)  
	float                                              ZoomMin;                                                    // 0x0254   (0x0004)  
	float                                              ZoomMax;                                                    // 0x0258   (0x0004)  
	unsigned char                                      UnknownData00_5[0x144];                                     // 0x025C   (0x0144)  MISSED
	TArray<FMiniMapMarkInstance>                       MarkInstances;                                              // 0x03A0   (0x0010)  
	class APawn*                                       PlayerPawn;                                                 // 0x03B0   (0x0008)  
	unsigned char                                      UnknownData01_5[0x30];                                      // 0x03B8   (0x0030)  MISSED
	SDK_UNDEFINED(16,1694) /* FMulticastInlineDelegate */ __um(OnPinTypeChanged);                                  // 0x03E8   (0x0010)  


	/// Functions
	// Function /Script/Pal7.PaladinMiniMapWidget.OnShowTreasureChanged
	// void OnShowTreasureChanged(bool bShowTreasure);                                                                       // [0xeabad0] Final|Native|Public  
	// Function /Script/Pal7.PaladinMiniMapWidget.OnRegisterActorChanged
	// void OnRegisterActorChanged(class UPaladinActorInfoComponent* InActorComp);                                           // [0xeaba50] Final|Native|Public  
	// Function /Script/Pal7.PaladinMiniMapWidget.OnMapAreaAssetLoaded
	// void OnMapAreaAssetLoaded();                                                                                          // [0xeab9b0] Final|Native|Private 
	// Function /Script/Pal7.PaladinMiniMapWidget.K2_UpdatePlayerMarkRotation
	// void K2_UpdatePlayerMarkRotation(EMiniMapPinType PinType, FRotator PlayerRotation, FRotator ControlRotation);         // [0x15dd8c0] Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinMiniMapWidget.K2_UpdatePlayerMarkOffset
	// void K2_UpdatePlayerMarkOffset(EMiniMapPinType PinType, FVector2D PlayerPostionOffset);                               // [0x15dd8c0] Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinMiniMapWidget.K2_ShowDebugInfo
	// void K2_ShowDebugInfo(bool bInDebug);                                                                                 // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinMiniMapWidget.K2_RebulidMarks
	// void K2_RebulidMarks();                                                                                               // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinMiniMapWidget.K2_OnZoomChange
	// void K2_OnZoomChange(float InZoom);                                                                                   // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinMiniMapWidget.K2_OnRangeMarkUICreate
	// void K2_OnRangeMarkUICreate(class UPaladinMapMarkWidget* RangeWidget);                                                // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinMiniMapWidget.K2_OnMarkUnitUICreate
	// void K2_OnMarkUnitUICreate(class UPaladinMapMarkWidget* MarkUnitWidget);                                              // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinMiniMapWidget.K2_OnMapTextureChanged
	// void K2_OnMapTextureChanged(class UTexture2D* NewMap);                                                                // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinMiniMapWidget.K2_OnAreaChanged
	// void K2_OnAreaChanged(bool bFindArea, FText& AreaName);                                                               // [0x15dd8c0] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/Pal7.PaladinMiniMapWidget.K2_GetMiniMapRadius
	// float K2_GetMiniMapRadius();                                                                                          // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinMiniMapWidget.IsPositionInPlayerView
	// bool IsPositionInPlayerView(FVector2D& InMarkPosition);                                                               // [0xeab080] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinMiniMapWidget.InitializeMiniMap
	// void InitializeMiniMap(FName MapResource);                                                                            // [0xeaaec0] Final|Native|Public  
	// Function /Script/Pal7.PaladinMiniMapWidget.GetOffsetPositionToPlayer
	// FVector2D GetOffsetPositionToPlayer(FVector& WorldLoc);                                                               // [0xeaade0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinMiniMapWidget.GetMarkScale
	// float GetMarkScale();                                                                                                 // [0xeaad80] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinMiniMapWidget.GetMapResourceInfo
	// FPaladinCustomMapInfo GetMapResourceInfo();                                                                           // [0xeaad20] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinMiniMapWidget.EnableMiniMap
	// void EnableMiniMap(bool bInEnable);                                                                                   // [0xeaaa60] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinMiniMapWidget.ConvertWorldToMapPosition
	// FVector2D ConvertWorldToMapPosition(FVector& WorldLoc);                                                               // [0xeaa890] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinMiniMapWidget.ClearMiniMap
	// void ClearMiniMap();                                                                                                  // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinMiniMapWidget.ClampMarkPosition
	// void ClampMarkPosition(FVector2D& InOriginPosition);                                                                  // [0xeaa5e0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
};

/// Struct /Script/Pal7.AIThreatenFactorParam
/// Size: 0x0008 (0x000000 - 0x000008)
struct FAIThreatenFactorParam
{ 
	float                                              PlayerHero_Factor;                                          // 0x0000   (0x0004)  
	float                                              AIHero_Factor;                                              // 0x0004   (0x0004)  
};

/// Struct /Script/Pal7.BossAIDataSetting
/// Size: 0x0110 (0x000000 - 0x000110)
struct FBossAIDataSetting
{ 
	class UDataTable*                                  PlayerHeroPressureLevelConfigTable;                         // 0x0000   (0x0008)  
	float                                              BossAIUpdateInterval;                                       // 0x0008   (0x0004)  
	float                                              PlayerHeroPressureDecreaseRate;                             // 0x000C   (0x0004)  
	float                                              PlayerHero_TotalDamageConstant_A;                           // 0x0010   (0x0004)  
	float                                              PlayerHero_TotalHitCounterConstant_B;                       // 0x0014   (0x0004)  
	float                                              PlayerHero_HPConstant_C;                                    // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x001C   (0x0004)  MISSED
	SDK_UNDEFINED(80,1695) /* TMap<EPaladinHeroName, float> */ __um(HeroPressIncreaseCoeff);                       // 0x0020   (0x0050)  
	SDK_UNDEFINED(80,1696) /* TMap<EPaladinHeroName, float> */ __um(HeroPressDecreaseCoeff);                       // 0x0070   (0x0050)  
	unsigned char                                      UnknownData01_6[0x50];                                      // 0x00C0   (0x0050)  MISSED
};

/// Class /Script/Pal7.PaladinMonsterFightingManagerComponent
/// Size: 0x0410 (0x0000B0 - 0x0004C0)
class UPaladinMonsterFightingManagerComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x00B0   (0x0008)  MISSED
	class UDataTable*                                  MonsterDataTables;                                          // 0x00B8   (0x0008)  
	class UDataTable*                                  BossGroupTable;                                             // 0x00C0   (0x0008)  
	float                                              MaxCatchupDistance;                                         // 0x00C8   (0x0004)  
	float                                              MaxDistanceAwayFromSpawnPoint;                              // 0x00CC   (0x0004)  
	FAIThreatenFactorParam                             AIThreatenParams;                                           // 0x00D0   (0x0008)  
	float                                              AssignAttackersDelayTime;                                   // 0x00D8   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x00DC   (0x0004)  MISSED
	FBossAIDataSetting                                 BossAIDataParams;                                           // 0x00E0   (0x0110)  
	SDK_UNDEFINED(16,1697) /* FMulticastInlineDelegate */ __um(BossBattleInOutEvent);                              // 0x01F0   (0x0010)  
	SDK_UNDEFINED(16,1698) /* FMulticastInlineDelegate */ __um(OnMonsterBeKilled);                                 // 0x0200   (0x0010)  
	unsigned char                                      UnknownData02_5[0x18];                                      // 0x0210   (0x0018)  MISSED
	int32_t                                            ShowLowerDifficultyTimes;                                   // 0x0228   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x022C   (0x0004)  MISSED
	FName                                              BossBattlePlayModeName;                                     // 0x0230   (0x0008)  
	FGameplayTag                                       RestBossLevleTag;                                           // 0x0238   (0x0008)  
	SDK_UNDEFINED(16,1699) /* FMulticastInlineDelegate */ __um(RefreshInvalidWorldMonsters);                       // 0x0240   (0x0010)  
	unsigned char                                      UnknownData04_6[0x270];                                     // 0x0250   (0x0270)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinMonsterFightingManagerComponent.ToggleNeverEndFightingByDistance
	// void ToggleNeverEndFightingByDistance(bool bNeverEndFightingByDistance);                                              // [0xeabef0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinMonsterFightingManagerComponent.StopAllFight
	// void StopAllFight();                                                                                                  // [0xeabed0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinMonsterFightingManagerComponent.ShouldDifficultyLower
	// bool ShouldDifficultyLower();                                                                                         // [0xeabea0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinMonsterFightingManagerComponent.RequreResetBossBattle
	// void RequreResetBossBattle(FDelegateProperty& ResetFinish);                                                           // [0xeabdf0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinMonsterFightingManagerComponent.OnPlaymodeChanged
	// void OnPlaymodeChanged(FName NewModeName);                                                                            // [0xeab9d0] Final|Native|Public  
	// Function /Script/Pal7.PaladinMonsterFightingManagerComponent.MarkUnFailBattle
	// void MarkUnFailBattle(bool bUnFail);                                                                                  // [0xeab240] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinMonsterFightingManagerComponent.MarkMissionFighting
	// void MarkMissionFighting(bool bMissionFighting);                                                                      // [0xeab1b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinMonsterFightingManagerComponent.IsShowDebuffForBoss
	// bool IsShowDebuffForBoss(class APaladinBossMonsterBase* LockTarget);                                                  // [0xeab120] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinMonsterFightingManagerComponent.IsJustTheFinalBossQuitFighting
	// bool IsJustTheFinalBossQuitFighting();                                                                                // [0xeab050] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinMonsterFightingManagerComponent.IsInUnFailBattle
	// bool IsInUnFailBattle();                                                                                              // [0xeab030] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinMonsterFightingManagerComponent.IsInMissionFighting
	// bool IsInMissionFighting();                                                                                           // [0xeab010] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinMonsterFightingManagerComponent.IsInFight
	// bool IsInFight();                                                                                                     // [0xeaaff0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinMonsterFightingManagerComponent.IsEnemyToofarawayFromSpawnPoint
	// bool IsEnemyToofarawayFromSpawnPoint(class APaladinEnemy* Enemy);                                                     // [0xeaaf60] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinMonsterFightingManagerComponent.IsBossBattleReseted
	// bool IsBossBattleReseted();                                                                                           // [0xeaaf40] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinMonsterFightingManagerComponent.HasBossFighting
	// bool HasBossFighting();                                                                                               // [0xeaae90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinMonsterFightingManagerComponent.GetMonsterDatatable
	// class UDataTable* GetMonsterDatatable();                                                                              // [0xeaadb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinMonsterFightingManagerComponent.GetFightingBoss
	// TArray<APaladinBossMonsterBase*> GetFightingBoss();                                                                   // [0xeaaca0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinMonsterFightingManagerComponent.GetAllFightingMonsters
	// void GetAllFightingMonsters(TArray<APaladinEnemy*>& AllFightingMonsters);                                             // [0xeaabf0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
};

/// Class /Script/Pal7.PaladinMuseumManager
/// Size: 0x0450 (0x0000B0 - 0x000500)
class UPaladinMuseumManager : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_3[0x40];                                      // 0x00B0   (0x0040)  MISSED
	class UDataTable*                                  MuseumItemDataTable;                                        // 0x00F0   (0x0008)  
	TArray<class UDataTable*>                          InheritMuseumItemDataTable;                                 // 0x00F8   (0x0010)  
	SDK_UNDEFINED(24,1700) /* FText */                 __um(TipsTitle);                                            // 0x0108   (0x0018)  
	SDK_UNDEFINED(24,1701) /* FText */                 __um(ContentFormat);                                        // 0x0120   (0x0018)  
	float                                              ShowIntervals;                                              // 0x0138   (0x0004)  
	float                                              ShowTime;                                                   // 0x013C   (0x0004)  
	float                                              PlayModeChangeDeltaTime;                                    // 0x0140   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0144   (0x0004)  MISSED
	SDK_UNDEFINED(16,1702) /* FMulticastInlineDelegate */ __um(MuseumUpdated);                                     // 0x0148   (0x0010)  
	SDK_UNDEFINED(16,1703) /* FMulticastInlineDelegate */ __um(OnMuseumItemUnlockSignature);                       // 0x0158   (0x0010)  
	SDK_UNDEFINED(16,1704) /* FMulticastInlineDelegate */ __um(OnMuseumMessageClearSignatrue);                     // 0x0168   (0x0010)  
	unsigned char                                      UnknownData02_6[0x388];                                     // 0x0178   (0x0388)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinMuseumManager.UnlockMuseumMessageTips
	// void UnlockMuseumMessageTips();                                                                                       // [0xeb29f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinMuseumManager.TimerShowNextTips
	// void TimerShowNextTips();                                                                                             // [0xeb29d0] Final|Native|Private 
	// Function /Script/Pal7.PaladinMuseumManager.OnQuestTagTriggered
	// void OnQuestTagTriggered(FGameplayTag Tag, bool bAddTag);                                                             // [0xeb23e0] Final|Native|Private 
	// Function /Script/Pal7.PaladinMuseumManager.OnPlaymodeChanged
	// void OnPlaymodeChanged(FName ModeName);                                                                               // [0xeb2360] Final|Native|Public  
	// Function /Script/Pal7.PaladinMuseumManager.OnFunctionOpenStateChanged
	// void OnFunctionOpenStateChanged(EOpenFunctionID ID, bool bOpen);                                                      // [0xeb2270] Final|Native|Private 
	// Function /Script/Pal7.PaladinMuseumManager.IsTagInNewItem
	// bool IsTagInNewItem(FText ID, FGameplayTag Tag);                                                                      // [0xeb1ca0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinMuseumManager.IsSubTypeOpened
	// bool IsSubTypeOpened(FString title1, FString title2);                                                                 // [0xeb1b30] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinMuseumManager.IsShowMuseumTips
	// bool IsShowMuseumTips();                                                                                              // [0xeb1b00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinMuseumManager.IsItemNew
	// bool IsItemNew(FText ID);                                                                                             // [0xeb1950] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinMuseumManager.GetShowTipsData
	// FUnlockData GetShowTipsData();                                                                                        // [0xeb17b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinMuseumManager.GetPercentData
	// FMuseumPercentResult GetPercentData();                                                                                // [0xeb1680] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinMuseumManager.GetMuseumManager
	// class UPaladinMuseumManager* GetMuseumManager();                                                                      // [0xeb1650] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinMuseumManager.GetItemLockState
	// FMuseumItemLockState GetItemLockState(FName ID);                                                                      // [0xeb15c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinMuseumManager.ClearMuseumMessage
	// void ClearMuseumMessage();                                                                                            // [0xeb1410] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinMuseumManager.ClearItemNewState
	// void ClearItemNewState(FText ID);                                                                                     // [0xeb1330] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinMuseumManager.BindInteractKeyEvents
	// void BindInteractKeyEvents(TEnumAsByte<EInputEvent> InputEvent, EPaladinKeyEventName EventNameEnum, float CurTickHoldSpan, float PreTickHoldSpan, float KeyMappingValue); // [0xeb0fe0] Final|Native|Private 
};

/// Class /Script/Pal7.PaladinNavigationUserWidgetBase
/// Size: 0x0068 (0x000230 - 0x000298)
class UPaladinNavigationUserWidgetBase : public UUserWidget
{ 
public:
	SDK_UNDEFINED(80,1705) /* TMap<FPaladinUINavigationKey, USoundAtomCue*> */ __um(CustomSoundConfig);            // 0x0230   (0x0050)  
	TArray<EPaladinUIKeyControlType>                   ControlTypes;                                               // 0x0280   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0290   (0x0008)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinNavigationUserWidgetBase.SetNavigationActive
	// void SetNavigationActive(bool B);                                                                                     // [0xeb2790] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinNavigationUserWidgetBase.SetControlTypes
	// void SetControlTypes(TArray<EPaladinUIKeyControlType> InControlTypes);                                                // [0xeb24f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinNavigationUserWidgetBase.OnPaladinUIEvent
	// bool OnPaladinUIEvent(EPaladinUIKeyControlType UIKeyControlType, EUINavigation UINavigation);                         // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinNavigationUserWidgetBase.ButtonCallPaladinUIEvent
	// void ButtonCallPaladinUIEvent(EPaladinUIKeyControlType UIKeyControlType, EUINavigation UINavigation);                 // [0xeb1170] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinNavigationUserWidget
/// Size: 0x0050 (0x000298 - 0x0002E8)
class UPaladinNavigationUserWidget : public UPaladinNavigationUserWidgetBase
{ 
public:
	SDK_UNDEFINED(80,1706) /* TMap<EUINavigation, UPaladinNavigationUserWidget*> */ __um(CustomNavigationConfig);  // 0x0298   (0x0050)  


	/// Functions
	// Function /Script/Pal7.PaladinNavigationUserWidget.RequestBeSelected
	// void RequestBeSelected();                                                                                             // [0xeb24d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinNavigationUserWidget.OnSelectedByParentPanel
	// void OnSelectedByParentPanel(bool B);                                                                                 // [0x15dd8c0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinNavigationUserWidget.OnParentPanelActiveStateChanged
	// void OnParentPanelActiveStateChanged(bool ParentPanelIsActive);                                                       // [0x15dd8c0] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinNavigationUserWidget.OnNativeParentSelectedChanged
	// void OnNativeParentSelectedChanged();                                                                                 // [0xeb2340] Final|Native|Public  
	// Function /Script/Pal7.PaladinNavigationUserWidget.K2_IsNavigationActive
	// bool K2_IsNavigationActive();                                                                                         // [0xeb1de0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinNavigationUserWidget.IsSelected
	// bool IsSelected();                                                                                                    // [0xeb1ad0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinNavigationUserWidget.GetSelfIndex
	// int32_t GetSelfIndex();                                                                                               // [0xeb1780] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinNavigationWidgetPanelInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladinNavigationWidgetPanelInterface : public UInterface
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinNavigationWidgetPanelInterface.SetNavigationSound
	// void SetNavigationSound(class USoundAtomCue* Sound);                                                                  // [0xeb2820] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinNavigationWidgetPanelInterface.SetNavigationActive
	// void SetNavigationActive(bool B, ESlateVisibility ActiveVisibility, ESlateVisibility UnActiveVisibility);             // [0xeb2680] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinNavigationWidgetPanelInterface.IsNavigationActive
	// bool IsNavigationActive();                                                                                            // [0xeb1aa0] Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinNPCAIPerceptionComponent
/// Size: 0x0000 (0x000180 - 0x000180)
class UPaladinNPCAIPerceptionComponent : public UAIPerceptionComponent
{ 
public:
};

/// Class /Script/Pal7.PaladinNPCAnimInstance
/// Size: 0x0040 (0x000270 - 0x0002B0)
class UPaladinNPCAnimInstance : public UAnimInstance
{ 
public:
	float                                              CurrentSpeed;                                               // 0x0268   (0x0004)  
	bool                                               bIsWalking;                                                 // 0x026C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x026D   (0x0003)  MISSED
	float                                              WalkRatio;                                                  // 0x0270   (0x0004)  
	bool                                               bIsLookingAt;                                               // 0x0274   (0x0001)  
	bool                                               bHasHeadBone;                                               // 0x0275   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x0276   (0x0002)  MISSED
	FVector                                            LookAtLocation;                                             // 0x0278   (0x000C)  
	FRotator                                           LookAtModifyRotar;                                          // 0x0284   (0x000C)  
	float                                              LookAtBlendOutTime;                                         // 0x0290   (0x0004)  
	float                                              LookAtBlendInSpeed;                                         // 0x0294   (0x0004)  
	float                                              LookAtBlendOutSpeed;                                        // 0x0298   (0x0004)  
	unsigned char                                      UnknownData02_6[0x14];                                      // 0x029C   (0x0014)  MISSED
};

/// Class /Script/Pal7.PaladinNPCController
/// Size: 0x0008 (0x000328 - 0x000330)
class APaladinNPCController : public AAIController
{ 
public:
	FGenericTeamId                                     TeamID;                                                     // 0x0328   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0329   (0x0007)  MISSED
};

/// Class /Script/Pal7.PaladinNPCInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladinNPCInterface : public UInterface
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinNPCInterface.ShowNPC
	// void ShowNPC();                                                                                                       // [0xe5a540] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinNPCInterface.SetEnableComposite
	// void SetEnableComposite(FPaladinNPCEnableComposite& Composite);                                                       // [0xeb8b40] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinNPCInterface.SetAISleep
	// void SetAISleep(bool bInSleep);                                                                                       // [0xeb89a0] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinNPCInterface.HideNPC
	// void HideNPC();                                                                                                       // [0xeb8680] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinNPCInterface.DestroyNPC
	// void DestroyNPC();                                                                                                    // [0xeb7e40] Native|Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/Pal7.PaladinNPCMovementComponent
/// Size: 0x0040 (0x000610 - 0x000650)
class UPaladinNPCMovementComponent : public UCharacterMovementComponent
{ 
public:
	unsigned char                                      UnknownData00_3[0x14];                                      // 0x0610   (0x0014)  MISSED
	bool                                               bUseCurvePath : 1;                                          // 0x0624:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x7];                                       // 0x0625   (0x0007)  MISSED
	float                                              CoefficientK;                                               // 0x062C   (0x0004)  
	float                                              fCurveDegreeThreshold;                                      // 0x0630   (0x0004)  
	bool                                               TurnLeft;                                                   // 0x0634   (0x0001)  
	bool                                               TurnRight;                                                  // 0x0635   (0x0001)  
	unsigned char                                      UnknownData02_6[0x1A];                                      // 0x0636   (0x001A)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinNPCMovementComponent.SetRootMotionScale
	// void SetRootMotionScale(float InScale);                                                                               // [0xeb92e0] Final|Native|Public|BlueprintCallable 
};

/// Struct /Script/Pal7.PaladinMeshPhysicsInfo
/// Size: 0x0050 (0x000000 - 0x000050)
struct FPaladinMeshPhysicsInfo
{ 
	SDK_UNDEFINED(80,1707) /* TMap<TWeakObjectPtr<USkeletalMesh*>, TWeakObjectPtr<UPhysicsAsset*>> */ __um(PhysicalMeshMap); // 0x0000   (0x0050)  
};

/// Class /Script/Pal7.PaladinNPCSettings
/// Size: 0x0100 (0x000030 - 0x000130)
class UPaladinNPCSettings : public UDataAsset
{ 
public:
	class UDataTable*                                  MergeMaterialTable;                                         // 0x0030   (0x0008)  
	class UDataTable*                                  MergeMeshTable;                                             // 0x0038   (0x0008)  
	SDK_UNDEFINED(80,1708) /* TMap<FString, FString> */ __um(BodyToFaceMaterialMap);                               // 0x0040   (0x0050)  
	FPaladinMeshPhysicsInfo                            PhysicsMeshConfig;                                          // 0x0090   (0x0050)  
	SDK_UNDEFINED(80,1709) /* TMap<FName, FPaladinSleepSettingInfo> */ __um(SleepConfigMap);                       // 0x00E0   (0x0050)  


	/// Functions
	// Function /Script/Pal7.PaladinNPCSettings.Get
	// class UPaladinNPCSettings* Get();                                                                                     // [0xeb7f70] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/Pal7.PaladinNPCUIComponent
/// Size: 0x00F8 (0x0000B0 - 0x0001A8)
class UPaladinNPCUIComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(80,1710) /* TMap<FName, FForgeItemListUnit> */ __um(NPCForgeItemList);                           // 0x00B0   (0x0050)  
	SDK_UNDEFINED(80,1711) /* TMap<FName, FBuyItemList> */ __um(NPCBuyItemList);                                   // 0x0100   (0x0050)  
	SDK_UNDEFINED(80,1712) /* TMap<FName, FBuyFoodList> */ __um(BuyFoodList);                                      // 0x0150   (0x0050)  
	bool                                               bAllowTestMap;                                              // 0x01A0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x01A1   (0x0007)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinNPCUIComponent.GetLargestAvailablePIDInArray
	// FName GetLargestAvailablePIDInArray(TArray<FName>& FNameArray);                                                       // [0xeb8140] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinOpenFunction
/// Size: 0x0058 (0x000028 - 0x000080)
class UPaladinOpenFunction : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x78];                                      // 0x0000   (0x0078)  MISSED
	int32_t                                            OpenState;                                                  // 0x0078   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x007C   (0x0004)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinOpenFunction.TriggerFunctionOpenState
	// void TriggerFunctionOpenState(EOpenFunctionID ID, bool bOpen);                                                        // [0xeb9480] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinOpenFunction.GetFunctionOpenState
	// bool GetFunctionOpenState(EOpenFunctionID ID);                                                                        // [0xeb8020] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinPawn
/// Size: 0x0008 (0x000280 - 0x000288)
class APaladinPawn : public APawn
{ 
public:
	FName                                              PaladinName;                                                // 0x0280   (0x0008)  
};

/// Class /Script/Pal7.PaladinPawnSensingComponent
/// Size: 0x0010 (0x0000F8 - 0x000108)
class UPaladinPawnSensingComponent : public UPawnSensingComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x00F8   (0x0010)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinPawnSensingComponent.ToggleDynamicFacing
	// void ToggleDynamicFacing(bool bDynamicFacing);                                                                        // [0xeb93f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPawnSensingComponent.CouldSeePawn
	// bool CouldSeePawn(class APawn* Other, bool bMaySkipChecks);                                                           // [0xeb7d70] Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinPawnSensingComponent.BindFacingArrow
	// void BindFacingArrow(class UArrowComponent* FacingArrow);                                                             // [0xeb7bc0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinPetManager
/// Size: 0x0190 (0x0000B0 - 0x000240)
class UPaladinPetManager : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_3[0x40];                                      // 0x00B0   (0x0040)  MISSED
	FGameplayTag                                       PetMarkTag;                                                 // 0x00F0   (0x0008)  
	FGameplayTag                                       PetFeedMarkTag;                                             // 0x00F8   (0x0008)  
	SDK_UNDEFINED(16,1713) /* FMulticastInlineDelegate */ __um(OnChangedSelectedPet);                              // 0x0100   (0x0010)  
	SDK_UNDEFINED(16,1714) /* FMulticastInlineDelegate */ __um(OnChangeViewPet);                                   // 0x0110   (0x0010)  
	SDK_UNDEFINED(16,1715) /* FMulticastInlineDelegate */ __um(OnChangePetTouchTrigger);                           // 0x0120   (0x0010)  
	SDK_UNDEFINED(16,1716) /* FMulticastInlineDelegate */ __um(OnAddedPet);                                        // 0x0130   (0x0010)  
	SDK_UNDEFINED(16,1717) /* FMulticastInlineDelegate */ __um(OnPetExpChange);                                    // 0x0140   (0x0010)  
	SDK_UNDEFINED(16,1718) /* FMulticastInlineDelegate */ __um(OnPetLockSelectStateChanged);                       // 0x0150   (0x0010)  
	FName                                              DefaultPetName;                                             // 0x0160   (0x0008)  
	unsigned char                                      UnknownData01_5[0xB0];                                      // 0x0168   (0x00B0)  MISSED
	TArray<FName>                                      AutoGivePets;                                               // 0x0218   (0x0010)  
	class UCurveTable*                                 SkillMagnitudeCurveTable;                                   // 0x0228   (0x0008)  
	bool                                               LockSelectPet;                                              // 0x0230   (0x0001)  
	bool                                               bFirstFeedPet;                                              // 0x0231   (0x0001)  
	unsigned char                                      UnknownData02_5[0x6];                                       // 0x0232   (0x0006)  MISSED
	class UDataTable*                                  PetInfoData;                                                // 0x0238   (0x0008)  


	/// Functions
	// Function /Script/Pal7.PaladinPetManager.SetPetInfo
	// void SetPetInfo(FName PetName, FPetInfo Info);                                                                        // [0xeb8f50] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPetManager.SetLockSelectPet
	// void SetLockSelectPet(bool bLockSelectPet);                                                                           // [0xeb8e30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPetManager.MinusExp
	// bool MinusExp(FName PetName, int32_t MinusExp);                                                                       // [0xeb8860] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPetManager.IsPetExist
	// bool IsPetExist(FName PetName);                                                                                       // [0xeb8730] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinPetManager.IsLockedSelectPet
	// bool IsLockedSelectPet();                                                                                             // [0xeb8700] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinPetManager.GivePet
	// bool GivePet(FName PetName);                                                                                          // [0xeb85f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPetManager.GetSelectedPet
	// FName GetSelectedPet();                                                                                               // [0xeb85a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinPetManager.GetPetData
	// bool GetPetData(FName PetName, FPetData& PetData);                                                                    // [0xeb8350] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinPetManager.GetOwnPets
	// TArray<FName> GetOwnPets();                                                                                           // [0xeb82d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinPetManager.GetMyPetArchive
	// FPetInfo GetMyPetArchive(FName PetName);                                                                              // [0xeb8200] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinPetManager.EatFood
	// bool EatFood(FName PetName, int32_t ItemId, bool& bLevelUp);                                                          // [0xeb7e60] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinPetManager.ChangePet
	// void ChangePet(FName PetName);                                                                                        // [0xeb7c40] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPetManager.AdjustPetSkillLevel
	// bool AdjustPetSkillLevel(FName PetName, int32_t SkillIdx, int32_t LV);                                                // [0xeb7ac0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinPhotoManager
/// Size: 0x0150 (0x000028 - 0x000178)
class UPaladinPhotoManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x30];                                      // 0x0000   (0x0030)  MISSED
	class UDataTable*                                  PhotoDataTable;                                             // 0x0030   (0x0008)  
	class UDataTable*                                  PhotoFunctionDataTable;                                     // 0x0038   (0x0008)  
	class UClass*                                      PaladinHeroStandIn;                                         // 0x0040   (0x0008)  
	class APaladinHeroStandIn*                         CurHeroStandIn;                                             // 0x0048   (0x0008)  
	TArray<class APaladinHeroStandIn*>                 HeroStandIns;                                               // 0x0050   (0x0010)  
	SDK_UNDEFINED(40,1719) /* TWeakObjectPtr<UClass*> */ __um(PhotoUIClass);                                       // 0x0060   (0x0028)  
	class UUserWidget*                                 PhotoUIPtr;                                                 // 0x0088   (0x0008)  
	SDK_UNDEFINED(16,1720) /* FMulticastInlineDelegate */ __um(OnCameraUnlock);                                    // 0x0090   (0x0010)  
	SDK_UNDEFINED(16,1721) /* FMulticastInlineDelegate */ __um(OnEnterPhotoMode);                                  // 0x00A0   (0x0010)  
	SDK_UNDEFINED(16,1722) /* FMulticastInlineDelegate */ __um(OnPhotoModeChange);                                 // 0x00B0   (0x0010)  
	SDK_UNDEFINED(16,1723) /* FMulticastInlineDelegate */ __um(OnPhotoModeGroupChange);                            // 0x00C0   (0x0010)  
	SDK_UNDEFINED(16,1724) /* FMulticastInlineDelegate */ __um(OnUpdateRoleList);                                  // 0x00D0   (0x0010)  
	SDK_UNDEFINED(16,1725) /* FMulticastInlineDelegate */ __um(OnPhotoUnconfirmDelegate);                          // 0x00E0   (0x0010)  
	SDK_UNDEFINED(16,1726) /* FMulticastInlineDelegate */ __um(OnResetPhotoMode);                                  // 0x00F0   (0x0010)  
	SDK_UNDEFINED(16,1727) /* FMulticastInlineDelegate */ __um(OnPhotoStateChange);                                // 0x0100   (0x0010)  
	SDK_UNDEFINED(16,1728) /* FMulticastInlineDelegate */ __um(OnHeroActionUnlock);                                // 0x0110   (0x0010)  
	unsigned char                                      UnknownData01_6[0x58];                                      // 0x0120   (0x0058)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinPhotoManager.UnlockCameraControl
	// void UnlockCameraControl(bool bIsUnlock);                                                                             // [0xeb9550] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPhotoManager.SwitchPhotoMode
	// void SwitchPhotoMode(bool bIsEnter);                                                                                  // [0xeb9360] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPhotoManager.SetPhotoState
	// void SetPhotoState(EPaladinPhotoStateMode InCurPhotoState);                                                           // [0xeb9260] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPhotoManager.SetPhotoParentValue
	// void SetPhotoParentValue(EPaladinPhotoMode PhotoMode, int32_t InValue);                                               // [0xeb91a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPhotoManager.SetPhotoFunctionValue
	// void SetPhotoFunctionValue(EPaladinPhotoMode PhotoMode, float InValue);                                               // [0xeb90e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPhotoManager.SetPauseAllPawnForPhoto
	// void SetPauseAllPawnForPhoto(bool bIsPause);                                                                          // [0xeb8ec0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPhotoManager.SetHeroForPhoto
	// void SetHeroForPhoto(EPaladinHeroName HeroName);                                                                      // [0xeb8db0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPhotoManager.SetHeroFaceForPhoto
	// void SetHeroFaceForPhoto(int32_t IsSelectedIndex);                                                                    // [0xeb8d30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPhotoManager.SetHeroAnimPoseForPhoto
	// void SetHeroAnimPoseForPhoto(int32_t IsSelectedIndex);                                                                // [0xeb8cb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPhotoManager.SetFunctionByMode
	// void SetFunctionByMode(EPaladinPhotoMode ModeName, float CurValue);                                                   // [0xeb8bf0] Final|Native|Public  
	// Function /Script/Pal7.PaladinPhotoManager.SetCurPhotoFunction
	// void SetCurPhotoFunction(char CurIndex);                                                                              // [0xeb8ac0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPhotoManager.SetCameraControlLock
	// void SetCameraControlLock(bool bIslock);                                                                              // [0xeb8a30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPhotoManager.ResetPhotoCamera
	// void ResetPhotoCamera();                                                                                              // [0xeb8980] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPhotoManager.ResetHeroAnimState
	// void ResetHeroAnimState();                                                                                            // [0xeb8960] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPhotoManager.RecoverPhotoCache
	// void RecoverPhotoCache();                                                                                             // [0xeb8940] Final|Native|Public  
	// Function /Script/Pal7.PaladinPhotoManager.OpenPhotoUI
	// void OpenPhotoUI();                                                                                                   // [0xeb8920] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPhotoManager.IsPhotoCache
	// bool IsPhotoCache();                                                                                                  // [0xeb8830] Final|Native|Public  
	// Function /Script/Pal7.PaladinPhotoManager.IsHerosPause
	// bool IsHerosPause();                                                                                                  // [0xeb86d0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinPhotoManager.IsHeroActionUnlock
	// bool IsHeroActionUnlock();                                                                                            // [0xeb86a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinPhotoManager.GetUnlockCameraValue
	// bool GetUnlockCameraValue();                                                                                          // [0xeb85c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinPhotoManager.GetPhotoUIPtr
	// class UUserWidget* GetPhotoUIPtr();                                                                                   // [0xeb8580] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinPhotoManager.GetPhotoParentValue
	// int32_t GetPhotoParentValue(EPaladinPhotoMode PhotoMode);                                                             // [0xeb84f0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinPhotoManager.GetPhotoFunctionValue
	// float GetPhotoFunctionValue(EPaladinPhotoMode PhotoMode);                                                             // [0xeb8460] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinPhotoManager.GetFunctionValue
	// int32_t GetFunctionValue(EPaladinPhotoMode PhotoMode);                                                                // [0xeb80b0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinPhotoManager.GetCurPhotoState
	// EPaladinPhotoStateMode GetCurPhotoState();                                                                            // [0xeb8000] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinPhotoManager.GetCurPhotoFunction
	// char GetCurPhotoFunction();                                                                                           // [0xeb7fe0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinPhotoManager.GetCurHeroNameForPhoto
	// FName GetCurHeroNameForPhoto();                                                                                       // [0xeb7fa0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinPhotoManager.ConvertSpriteFromTexture2D
	// class UPaperSprite* ConvertSpriteFromTexture2D(class UTexture2D* InTexture);                                          // [0xeb7ce0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPhotoManager.ClosePhotoUI
	// void ClosePhotoUI();                                                                                                  // [0xeb7cc0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinPhotoUIBase
/// Size: 0x0058 (0x000230 - 0x000288)
class UPaladinPhotoUIBase : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_1[0x58];                                      // 0x0230   (0x0058)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinPhotoUIBase.SetActiveWidget
	// void SetActiveWidget(class UWidget* InWidget);                                                                        // [0xebd080] Final|Native|Protected|BlueprintCallable 
	// Function /Script/Pal7.PaladinPhotoUIBase.PaladinPhotoUIEvent
	// bool PaladinPhotoUIEvent(EPaladinUIKeyControlType UIKeyControlType, EUINavigation UINavigation, float CurTickHoldValue); // [0x15dd8c0] BlueprintCosmetic|Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinPhotoUIBase.DealNavigationEvent
	// void DealNavigationEvent(EPaladinKeyEventName PaladinKeyEvent);                                                       // [0xebbe10] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinPhysicalMaterial
/// Size: 0x0008 (0x000080 - 0x000088)
class UPaladinPhysicalMaterial : public UPhysicalMaterial
{ 
public:
	EBodypartType                                      BodyPart;                                                   // 0x0080   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0081   (0x0007)  MISSED
};

/// Class /Script/Pal7.PaladinPhysicsVolume
/// Size: 0x0000 (0x000268 - 0x000268)
class APaladinPhysicsVolume : public APhysicsVolume
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinPhysicsVolume.ControlHeroLeavingVolume
	// void ControlHeroLeavingVolume();                                                                                      // [0x15dd8c0] Event|Protected|BlueprintEvent 
	// Function /Script/Pal7.PaladinPhysicsVolume.ControlHeroEnterVolume
	// void ControlHeroEnterVolume();                                                                                        // [0x15dd8c0] Event|Protected|BlueprintEvent 
};

/// Class /Script/Pal7.PaladinChangeControlModeVolume
/// Size: 0x0008 (0x000268 - 0x000270)
class APaladinChangeControlModeVolume : public APaladinPhysicsVolume
{ 
public:
	EPaladinControllerMode                             EnterVoluemeMode;                                           // 0x0268   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0269   (0x0007)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinChangeControlModeVolume.OnGameStartPostEventDelegateCall
	// void OnGameStartPostEventDelegateCall();                                                                              // [0xebc2d0] Final|Native|Public  
};

/// Struct /Script/Pal7.PlayModeCameraModifierInstance
/// Size: 0x0020 (0x000000 - 0x000020)
struct FPlayModeCameraModifierInstance
{ 
	FName                                              PlayModeName;                                               // 0x0000   (0x0008)  
	ECameraModifierHandleType                          HandleType;                                                 // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	TArray<class UCameraModifier*>                     CameraModifiers;                                            // 0x0010   (0x0010)  
};

/// Class /Script/Pal7.PaladinPlayerCameraManager
/// Size: 0x0870 (0x002E60 - 0x0036D0)
class APaladinPlayerCameraManager : public APlayerCameraManager
{ 
public:
	class UCameraModifier_PostProcess*                 CachedCameraPostProcessMod;                                 // 0x2E60   (0x0008)  
	TArray<class UCameraAnimInst*>                     BlendOutAnims;                                              // 0x2E68   (0x0010)  
	SDK_UNDEFINED(16,1729) /* FMulticastInlineDelegate */ __um(OnCameraFadeStateChange);                           // 0x2E78   (0x0010)  
	unsigned char                                      UnknownData00_5[0x18];                                      // 0x2E88   (0x0018)  MISSED
	SDK_UNDEFINED(16,1730) /* FMulticastInlineDelegate */ __um(OnCameraAnimationEnd);                              // 0x2EA0   (0x0010)  
	SDK_UNDEFINED(16,1731) /* FMulticastInlineDelegate */ __um(OnCameraAnimationBlendOut);                         // 0x2EB0   (0x0010)  
	SDK_UNDEFINED(16,1732) /* FMulticastInlineDelegate */ __um(OnSetViewTargetEnd);                                // 0x2EC0   (0x0010)  
	SDK_UNDEFINED(80,1733) /* TMap<FName, float> */    __um(ArmLengthOffsetMap);                                   // 0x2ED0   (0x0050)  
	SDK_UNDEFINED(80,1734) /* TMap<FName, FVector> */  __um(ArmSocketOffsetMap);                                   // 0x2F20   (0x0050)  
	unsigned char                                      UnknownData01_5[0x748];                                     // 0x2F70   (0x0748)  MISSED
	TArray<FPlayModeCameraModifierInstance>            PlayModeModiferInstances;                                   // 0x36B8   (0x0010)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x36C8   (0x0008)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinPlayerCameraManager.UpdateArmSocketOffset
	// void UpdateArmSocketOffset(FName InKey, FVector NewSocketOffset);                                                     // [0xebd810] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerCameraManager.UpdateArmLengthOffset
	// void UpdateArmLengthOffset(FName InKey, float NewArmLengthOffset);                                                    // [0xebd740] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerCameraManager.StopCameraPostProcessBlend
	// void StopCameraPostProcessBlend(class UPaladinPostProcess* PPBlendInstance, bool bImmediately);                       // [0xebd390] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerCameraManager.StopAllPostProcessBlend
	// void StopAllPostProcessBlend(bool bImmediately);                                                                      // [0xebd300] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerCameraManager.StopAllInstancesOfPostProcessBlend
	// void StopAllInstancesOfPostProcessBlend(class UClass* PPBlendClass, bool bImmediately);                               // [0xebd230] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerCameraManager.RemoveCameraModifier_WithBlend
	// void RemoveCameraModifier_WithBlend(class UCameraModifier* ModifierToRemove);                                         // [0xebcfd0] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerCameraManager.RemoveArmSocketOffset
	// void RemoveArmSocketOffset(FName InKey);                                                                              // [0xebcf50] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerCameraManager.RemoveArmLengthOffset
	// void RemoveArmLengthOffset(FName InKey);                                                                              // [0xebced0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerCameraManager.RemoveAllCameraModifier
	// void RemoveAllCameraModifier();                                                                                       // [0xebceb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerCameraManager.RemoveAllArmSocketFffset
	// void RemoveAllArmSocketFffset();                                                                                      // [0xebce90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerCameraManager.PlayCameraPostProcessBlend
	// class UPaladinPostProcess* PlayCameraPostProcessBlend(class UClass* PPBlendClass, float Scale);                       // [0xebcc10] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerCameraManager.PlayCameraAnimwithBlendOutAndTarget
	// class UCameraAnimInst* PlayCameraAnimwithBlendOutAndTarget(class UCameraAnim* Anim, class AActor* TargetActor, class UCurveFloat* CustomCurve, float Rate, float Scale, float BlendInTime, float BlendOutTime, bool bLoop, bool bRandomStartTime, float Duration, ECameraAnimPlaySpace PlaySpace, FRotator UserPlaySpaceRot, EAlphaBlendOption BlendOption); // [0xebc870] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerCameraManager.PlayCameraAnimwithBlendOut
	// class UCameraAnimInst* PlayCameraAnimwithBlendOut(class UCameraAnim* Anim, class UCurveFloat* CustomCurve, float Rate, float Scale, float BlendInTime, float BlendOutTime, bool bLoop, bool bRandomStartTime, float Duration, ECameraAnimPlaySpace PlaySpace, FRotator UserPlaySpaceRot, EAlphaBlendOption BlendOption); // [0xebc510] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerCameraManager.PaladinGameEnd
	// void PaladinGameEnd();                                                                                                // [0xebc4f0] Final|Native|Private 
	// Function /Script/Pal7.PaladinPlayerCameraManager.OnRemoveAllCameraModifier
	// void OnRemoveAllCameraModifier();                                                                                     // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinPlayerCameraManager.OnPlayModePushed
	// void OnPlayModePushed(FName ModeName);                                                                                // [0xebc470] Final|Native|Private 
	// Function /Script/Pal7.PaladinPlayerCameraManager.OnPlayModePopped
	// void OnPlayModePopped(FName ModeName);                                                                                // [0xebc3f0] Final|Native|Private 
	// Function /Script/Pal7.PaladinPlayerCameraManager.OnPlaymodeChanged
	// void OnPlaymodeChanged(FName ModeName);                                                                               // [0xebc2f0] Final|Native|Private 
	// Function /Script/Pal7.PaladinPlayerCameraManager.GetModifierList
	// TArray<UCameraModifier*> GetModifierList();                                                                           // [0xebc1b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerCameraManager.GetFinalSocketOffset
	// FVector GetFinalSocketOffset();                                                                                       // [0xebc050] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinPlayerCameraManager.GetFinalLengthOffset
	// float GetFinalLengthOffset();                                                                                         // [0xebc020] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinPlayerCameraManager.GetArmLengthOffset
	// float GetArmLengthOffset(FName InKey);                                                                                // [0xebbf20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerCameraManager.AddCameraModifier_ByInstance
	// bool AddCameraModifier_ByInstance(class UCameraModifier* NewModifier);                                                // [0xebbb90] Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinPlayerControllerBase
/// Size: 0x0158 (0x000570 - 0x0006C8)
class APaladinPlayerControllerBase : public APlayerController
{ 
public:
	SDK_UNDEFINED(16,1735) /* FMulticastInlineDelegate */ __um(OnAnyKeyPressedDelegate);                           // 0x0570   (0x0010)  
	SDK_UNDEFINED(16,1736) /* FMulticastInlineDelegate */ __um(OnControllerModeChanged);                           // 0x0580   (0x0010)  
	SDK_UNDEFINED(16,1737) /* FMulticastInlineDelegate */ __um(OnControlerEvent);                                  // 0x0590   (0x0010)  
	bool                                               bLockAction;                                                // 0x05A0   (0x0001)  
	EPaladinKeyEventDeviceType                         UsingDeviceType;                                            // 0x05A1   (0x0001)  
	bool                                               bShowDebugInfo;                                             // 0x05A2   (0x0001)  
	unsigned char                                      UnknownData00_5[0x115];                                     // 0x05A3   (0x0115)  MISSED
	FVector2D                                          MoveInputExtra;                                             // 0x06B8   (0x0008)  
	class UDataTable*                                  ControllerModeDataTable;                                    // 0x06C0   (0x0008)  


	/// Functions
	// Function /Script/Pal7.PaladinPlayerControllerBase.UnBindControlEvent
	// void UnBindControlEvent(class UObject* Obj);                                                                          // [0xebd6c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerControllerBase.TriggerKeyEventEX
	// void TriggerKeyEventEX(EPaladinKeyEventName Name, TEnumAsByte<EInputEvent> Event);                                    // [0xebd600] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerControllerBase.TriggerKeyEvent
	// void TriggerKeyEvent(EPaladinKeyEventName Name);                                                                      // [0xebd580] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerControllerBase.SwitchLockAction
	// void SwitchLockAction(bool bLock);                                                                                    // [0xebd4f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerControllerBase.SetLookAroundScalar
	// void SetLookAroundScalar(float Scalar);                                                                               // [0xebd1b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerControllerBase.RefreshKeySetting
	// void RefreshKeySetting();                                                                                             // [0xebce70] Final|Native|Public  
	// Function /Script/Pal7.PaladinPlayerControllerBase.OnVirtualJoystickOnCollapsed
	// void OnVirtualJoystickOnCollapsed();                                                                                  // [0xebbdd0] Final|Native|Public  
	// Function /Script/Pal7.PaladinPlayerControllerBase.IsInputKeyEventValid
	// bool IsInputKeyEventValid(EPaladinKeyEventName& InEventNameEnum);                                                     // [0xebc230] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerControllerBase.GetKeySettingByEventNameEnum
	// FPaladinDefaultKeySetting GetKeySettingByEventNameEnum(EPaladinKeyEventName EventNameEnum);                           // [0xebc090] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerControllerBase.GetCurrentControllerMode
	// EPaladinControllerMode GetCurrentControllerMode();                                                                    // [0xebbff0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerControllerBase.ConsumeControlEvent
	// void ConsumeControlEvent();                                                                                           // [0xebbdf0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerControllerBase.BindControlEvent
	// void BindControlEvent(FDelegateProperty Delegate, int32_t Priority, bool bInEnable);                                  // [0xebbcb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerControllerBase.AddMoveInput
	// void AddMoveInput(FVector2D Offset);                                                                                  // [0xebbc30] Final|Native|Public|HasDefaults|BlueprintCallable 
};

/// Struct /Script/Pal7.ForceLockActorInfo
/// Size: 0x0018 (0x000000 - 0x000018)
struct FForceLockActorInfo
{ 
	class AActor*                                      ForceLockActor;                                             // 0x0000   (0x0008)  
	float                                              ForceLockActorRadioInScreen;                                // 0x0008   (0x0004)  
	float                                              LengthXY_Affectpitch;                                       // 0x000C   (0x0004)  
	float                                              CameraRotateSpeed;                                          // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Class /Script/Pal7.PaladinPlayerController
/// Size: 0x0138 (0x0006C8 - 0x000800)
class APaladinPlayerController : public APaladinPlayerControllerBase
{ 
public:
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x06C8   (0x0008)  MISSED
	bool                                               bCanRotateCameraByMove;                                     // 0x06D0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x06D1   (0x0007)  MISSED
	SDK_UNDEFINED(16,1738) /* FMulticastInlineDelegate */ __um(OnPerfectDodge);                                    // 0x06D8   (0x0010)  
	class UPaladinInteractionTraceComponent*           InteractionTraceComponent;                                  // 0x06E8   (0x0008)  
	bool                                               bSwitchCameraModifier;                                      // 0x06F0   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x06F1   (0x0007)  MISSED
	FForceLockActorInfo                                ForceLockActorInfo;                                         // 0x06F8   (0x0018)  
	unsigned char                                      UnknownData03_5[0x10];                                      // 0x0710   (0x0010)  MISSED
	bool                                               bEnableCameraPostProcess;                                   // 0x0720   (0x0001)  
	unsigned char                                      UnknownData04_5[0x7];                                       // 0x0721   (0x0007)  MISSED
	class UFocusLostUI*                                CurFocusLostUI;                                             // 0x0728   (0x0008)  
	class UPaladinInteractionLockComponent*            InteractionEnemyComponent;                                  // 0x0730   (0x0008)  
	unsigned char                                      UnknownData05_6[0xC8];                                      // 0x0738   (0x00C8)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinPlayerController.SwitchCameraModifier
	// void SwitchCameraModifier(bool bSwitch);                                                                              // [0xebd460] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerController.SetForceLockActor
	// void SetForceLockActor(FForceLockActorInfo InForceLockActorInfo);                                                     // [0xebd100] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerController.RemoveForceLockActor
	// void RemoveForceLockActor();                                                                                          // [0xebd060] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerController.ReceiveControleEventCustom
	// void ReceiveControleEventCustom(TEnumAsByte<EInputEvent> InInputEvent, EPaladinKeyEventName InKeyEventNameEnum, float InCurTickHoldSpan, float InPreTickHoldSpan, float InKeyMappingValue); // [0xebcce0] Final|Native|Private 
	// Function /Script/Pal7.PaladinPlayerController.OnPlaymodeChanged
	// void OnPlaymodeChanged(FName NewModeName);                                                                            // [0xebc370] Final|Native|Protected 
	// Function /Script/Pal7.PaladinPlayerController.K2_OnSetPause
	// void K2_OnSetPause(bool bPause);                                                                                      // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinPlayerController.IsFocusLostUI
	// bool IsFocusLostUI(class UPaladinUIBase* FocusLostUI);                                                                // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinPlayerController.GetControlledHero
	// class APaladinHero* GetControlledHero();                                                                              // [0xebbfc0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerController.EnableCameraPostProcess
	// void EnableCameraPostProcess(bool bEnable);                                                                           // [0xebbe90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayerController.ClearInputState
	// void ClearInputState();                                                                                               // [0xebbdd0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PalPlayerKeySettings
/// Size: 0x0018 (0x000038 - 0x000050)
class UPalPlayerKeySettings : public UDeveloperSettings
{ 
public:
	int32_t                                            AxisMapSpeedScalarKeyboard;                                 // 0x0038   (0x0004)  
	int32_t                                            AxisMapSpeedScalarGamepad;                                  // 0x003C   (0x0004)  
	TArray<FPaladinPlayerCustomKeySetting>             PlayerKeysSetting;                                          // 0x0040   (0x0010)  
};

/// Class /Script/Pal7.PaladinPlayerStart
/// Size: 0x0018 (0x000250 - 0x000268)
class APaladinPlayerStart : public APlayerStart
{ 
public:
	class ATargetPoint*                                FlySequencePoint;                                           // 0x0250   (0x0008)  
	class ATargetPoint*                                LandSequencePoint;                                          // 0x0258   (0x0008)  
	bool                                               bSuggestTargetPoint;                                        // 0x0260   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0261   (0x0007)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinPlayerStart.K2_GetLandFaceingRotation
	// FRotator K2_GetLandFaceingRotation();                                                                                 // [0x15dd8c0] Event|Public|HasDefaults|BlueprintEvent 
};

/// Class /Script/Pal7.PaladinPlayerState
/// Size: 0x0060 (0x000320 - 0x000380)
class APaladinPlayerState : public APlayerState
{ 
public:
	unsigned char                                      UnknownData00_1[0x60];                                      // 0x0320   (0x0060)  MISSED
};

/// Class /Script/Pal7.PaladinPlayModeManager
/// Size: 0x00F0 (0x0000B0 - 0x0001A0)
class UPaladinPlayModeManager : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x00B0   (0x0008)  MISSED
	class UDataTable*                                  PaladinPlayModeData;                                        // 0x00B8   (0x0008)  
	FName                                              DefaultPlayMode;                                            // 0x00C0   (0x0008)  
	SDK_UNDEFINED(16,1739) /* FMulticastInlineDelegate */ __um(OnPaladinPlayModeChangedDelegate);                  // 0x00C8   (0x0010)  
	SDK_UNDEFINED(16,1740) /* FMulticastInlineDelegate */ __um(OnPaladinPlayModePushedDelegate);                   // 0x00D8   (0x0010)  
	SDK_UNDEFINED(16,1741) /* FMulticastInlineDelegate */ __um(OnPaladinPlayModePoppedDelegate);                   // 0x00E8   (0x0010)  
	unsigned char                                      UnknownData01_6[0xA8];                                      // 0x00F8   (0x00A8)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinPlayModeManager.PushPaladinPlayMode
	// void PushPaladinPlayMode(FName ModeName);                                                                             // [0xec1940] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayModeManager.PopPaladinPlayMode
	// void PopPaladinPlayMode(FName ModeName);                                                                              // [0xec18c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlayModeManager.IsModeInQueue
	// bool IsModeInQueue(FName ModeName);                                                                                   // [0xec14d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinPlayModeManager.GetPlayModeInfo
	// bool GetPlayModeInfo(FName ModeName, FPaladinPlayModeInfo& OutInfo);                                                  // [0xec1210] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinPlayModeManager.GetDefaultPlayMode
	// FName GetDefaultPlayMode();                                                                                           // [0xec11a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinPlayModeManager.GetCurrentPlayModeInfo
	// void GetCurrentPlayModeInfo(FPaladinPlayModeInfo& OutInfo);                                                           // [0xec1080] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinPlayModeManager.GetCurPlayModeName
	// FName GetCurPlayModeName();                                                                                           // [0xec1060] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Struct /Script/Pal7.PPMaterialBlendSetting
/// Size: 0x02F0 (0x000000 - 0x0002F0)
struct FPPMaterialBlendSetting
{ 
	class UMaterialInterface*                          PostProcessMaterial;                                        // 0x0000   (0x0008)  
	SDK_UNDEFINED(80,1742) /* TMap<FName, FRuntimeFloatCurve> */ __um(FloatParamCurveMap);                         // 0x0008   (0x0050)  
	SDK_UNDEFINED(80,1743) /* TMap<FName, FRuntimeCurveLinearColor> */ __um(LinearColorParamCurvemap);             // 0x0058   (0x0050)  
	bool                                               bUseSeparateBlendForPPMaterial;                             // 0x00A8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x00A9   (0x0007)  MISSED
	SDK_UNDEFINED(80,1744) /* TSet<FName> */           __um(AutoBlendInScalarParams);                              // 0x00B0   (0x0050)  
	SDK_UNDEFINED(80,1745) /* TSet<FName> */           __um(AutoBlendOutScalarParams);                             // 0x0100   (0x0050)  
	FRuntimeFloatCurve                                 AutoBlendInCurve;                                           // 0x0150   (0x0088)  
	FRuntimeFloatCurve                                 AutoBlendOutCurve;                                          // 0x01D8   (0x0088)  
	FRuntimeFloatCurve                                 PostProcessMaterialBlendWeigth;                             // 0x0260   (0x0088)  
	class UMaterialInstanceDynamic*                    CachedDynamicMaterialInstance;                              // 0x02E8   (0x0008)  
};

/// Class /Script/Pal7.PaladinPostProcess
/// Size: 0x0738 (0x000028 - 0x000760)
class UPaladinPostProcess : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x28];                                      // 0x0000   (0x0028)  MISSED
	bool                                               bSingleInstance;                                            // 0x0028   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0029   (0x0003)  MISSED
	float                                              Duraction;                                                  // 0x002C   (0x0004)  
	float                                              BlendInTime;                                                // 0x0030   (0x0004)  
	float                                              BlendOutTime;                                               // 0x0034   (0x0004)  
	FRuntimeFloatCurve                                 BlendWeight;                                                // 0x0038   (0x0088)  
	TArray<FPPMaterialBlendSetting>                    PPMaterialSettings;                                         // 0x00C0   (0x0010)  
	FPostProcessSettings                               PostProcessSettings;                                        // 0x00D0   (0x0670)  
	unsigned char                                      UnknownData02_5[0x10];                                      // 0x0740   (0x0010)  MISSED
	class APlayerCameraManager*                        CameraOwner;                                                // 0x0750   (0x0008)  
	float                                              PlayeWeightScale;                                           // 0x0758   (0x0004)  
	float                                              TimeRemaining;                                              // 0x075C   (0x0004)  


	/// Functions
	// Function /Script/Pal7.PaladinPostProcess.K2_OnFinishedBlendOut
	// void K2_OnFinishedBlendOut();                                                                                         // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinPostProcess.K2_OnFinishedBlendIn
	// void K2_OnFinishedBlendIn();                                                                                          // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinPostProcess.K2_Begine
	// void K2_Begine();                                                                                                     // [0x15dd8c0] Event|Public|BlueprintEvent 
};

/// Class /Script/Pal7.PaladinPostprocessManager
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UPaladinPostprocessManager : public UActorComponent
{ 
public:
	class UPaladinPostProcessModifier*                 CachedCameraPostProcessMod;                                 // 0x00B0   (0x0008)  
	TArray<FPostProcessSettings>                       PostProcessBlendCache;                                      // 0x00B8   (0x0010)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x00C8   (0x0010)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinPostprocessManager.StopCameraPostProcessBlend
	// void StopCameraPostProcessBlend(class UPaladinPostProcess* PPBlendInstance, bool bImmediately);                       // [0xec20a0] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPostprocessManager.StopAllPostProcessBlend
	// void StopAllPostProcessBlend(bool bImmediately);                                                                      // [0xec2010] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPostprocessManager.StopAllInstancesOfPostProcessBlend
	// void StopAllInstancesOfPostProcessBlend(class UClass* PPBlendClass, bool bImmediately);                               // [0xec1f40] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPostprocessManager.PlayCameraPostProcessBlend
	// class UPaladinPostProcess* PlayCameraPostProcessBlend(class UClass* PPBlendClass, float Scale);                       // [0xec17f0] Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinModifier
/// Size: 0x0020 (0x000028 - 0x000048)
class UPaladinModifier : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x28];                                      // 0x0000   (0x0028)  MISSED
	bool                                               bDebug : 1;                                                 // 0x0028:0 (0x0001)  
	bool                                               bExclusive : 1;                                             // 0x0028:1 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x0029   (0x0003)  MISSED
	char                                               Priority;                                                   // 0x002C   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x002D   (0x0003)  MISSED
	class UPaladinPostprocessManager*                  PalOwner;                                                   // 0x0030   (0x0008)  
	float                                              AlphaInTime;                                                // 0x0038   (0x0004)  
	float                                              AlphaOutTime;                                               // 0x003C   (0x0004)  
	float                                              Alpha;                                                      // 0x0040   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x0044   (0x0004)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinModifier.IsDisabled
	// bool IsDisabled();                                                                                                    // [0xec14a0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinModifier.EnableModifier
	// void EnableModifier();                                                                                                // [0xe2d1e0] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinModifier.DisableModifier
	// void DisableModifier(bool bImmediate);                                                                                // [0xe44a70] Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinPostProcessModifier
/// Size: 0x0018 (0x000048 - 0x000060)
class UPaladinPostProcessModifier : public UPaladinModifier
{ 
public:
	TArray<class UPaladinPostProcess*>                 ActivePPBlends;                                             // 0x0048   (0x0010)  
	float                                              SplitScreenShakeScale;                                      // 0x0058   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x005C   (0x0004)  MISSED
};

/// Class /Script/Pal7.PaladinPreloadManager
/// Size: 0x01B8 (0x000028 - 0x0001E0)
class UPaladinPreloadManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x28];                                      // 0x0000   (0x0028)  MISSED
	SDK_UNDEFINED(16,1746) /* FMulticastInlineDelegate */ __um(OnGameRuntimeResourceLoadFinish);                   // 0x0028   (0x0010)  
	SDK_UNDEFINED(16,1747) /* FMulticastInlineDelegate */ __um(OnGameRuntimeResourceLoadedStart);                  // 0x0038   (0x0010)  
	unsigned char                                      UnknownData01_6[0x198];                                     // 0x0048   (0x0198)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinPreloadManager.SetCanPerformLoadingUI
	// void SetCanPerformLoadingUI(bool bCanPerformUI);                                                                      // [0xec1d40] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPreloadManager.ReleaseCustomLifeCycleResource
	// void ReleaseCustomLifeCycleResource(FName AssetID);                                                                   // [0xec19c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPreloadManager.LoadCustomLifeCycleResourceEx
	// void LoadCustomLifeCycleResourceEx(FName AssetID, TWeakObjectPtr<UObject*> AssetTarget);                              // [0xec15e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPreloadManager.LoadCustomLifeCycleResource
	// void LoadCustomLifeCycleResource(FName AssetID);                                                                      // [0xec1560] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPreloadManager.GetPaladinPreloadManager
	// class UPaladinPreloadManager* GetPaladinPreloadManager();                                                             // [0xec11c0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinPreloadManager.CanPerfromLoadingUI
	// bool CanPerfromLoadingUI();                                                                                           // [0xec1040] Final|Native|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/Pal7.PaladinProgressBar
/// Size: 0x0000 (0x000318 - 0x000318)
class UPaladinProgressBar : public UProgressBar
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinProgressBar.SetFillImage
	// void SetFillImage(FSlateBrush& InFillImage);                                                                          // [0xec1dc0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinProgressBar.SetBackgroundImage
	// void SetBackgroundImage(FSlateBrush& InFillImage);                                                                    // [0xec1bc0] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinProjectile
/// Size: 0x0060 (0x000410 - 0x000470)
class APaladinProjectile : public APaladinGATargetActor
{ 
public:
	class UProjectileMovementComponent*                MovementComp;                                               // 0x0410   (0x0008)  
	class USphereComponent*                            CollisionComp;                                              // 0x0418   (0x0008)  
	class UParticleSystemComponent*                    ParticleComp;                                               // 0x0420   (0x0008)  
	class UParticleSystem*                             ExplosionParticle;                                          // 0x0428   (0x0008)  
	class USoundAtomCue*                               ExplosionSound;                                             // 0x0430   (0x0008)  
	class USoundAttenuation*                           AttenuationSettings;                                        // 0x0438   (0x0008)  
	float                                              MaxflyDisxy;                                                // 0x0440   (0x0004)  
	FVector                                            StartLoc;                                                   // 0x0444   (0x000C)  
	unsigned char                                      UnknownData00_5[0xC];                                       // 0x0450   (0x000C)  MISSED
	float                                              DelayTimeToDestroy;                                         // 0x045C   (0x0004)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0460   (0x0010)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinProjectile.ResetExplosionSound
	// void ResetExplosionSound(class USoundAtomCue* InExplosionSound);                                                      // [0xec1b40] Final|Native|Protected|BlueprintCallable 
	// Function /Script/Pal7.PaladinProjectile.ResetExplosionParticle
	// void ResetExplosionParticle(class UParticleSystem* InExplosionParticle);                                              // [0xec1ac0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/Pal7.PaladinProjectile.OnImpact
	// void OnImpact(FHitResult& HitResult);                                                                                 // [0xec1710] Final|Native|Public|HasOutParms 
	// Function /Script/Pal7.PaladinProjectile.OnEventImpact
	// void OnEventImpact(FHitResult& HitResult);                                                                            // [0x15dd8c0] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/Pal7.PaladinProjectile.InitVelocity
	// void InitVelocity(FVector ShootDirection);                                                                            // [0xec1410] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinProjectile.GetShootDir
	// FVector GetShootDir(float TolleranceAngle);                                                                           // [0xec1370] Final|Native|Protected|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinProjectile.GetParticleComp
	// class UParticleSystemComponent* GetParticleComp();                                                                    // [0xec11f0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Pal7.PaladinPushComponent
/// Size: 0x0020 (0x0001F0 - 0x000210)
class UPaladinPushComponent : public USceneComponent
{ 
public:
	float                                              Radius;                                                     // 0x01F0   (0x0004)  
	float                                              Impusestrength;                                             // 0x01F4   (0x0004)  
	TArray<EObjectTypeQuery>                           ObjectTypesToAffect;                                        // 0x01F8   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0208   (0x0008)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinPushComponent.RemoveObjectTypeToAffect
	// void RemoveObjectTypeToAffect(EObjectTypeQuery ObjectType);                                                           // [0xec1a40] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPushComponent.AddObjectTypeToAffect
	// void AddObjectTypeToAffect(EObjectTypeQuery ObjectType);                                                              // [0xec0fc0] Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinPuzzleInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladinPuzzleInterface : public UInterface
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinPuzzleInterface.StartPuzzle
	// void StartPuzzle(FString Options);                                                                                    // [0x15dd8c0] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinPuzzleInterface.EndPuzzle
	// void EndPuzzle(bool bIsInterrupt);                                                                                    // [0x15dd8c0] Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/Pal7.PaladinPuzzleManager
/// Size: 0x0030 (0x0000B0 - 0x0000E0)
class UPaladinPuzzleManager : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,1748) /* TScriptInterface<Class> */ __um(CurrentPuzzleObj);                                   // 0x00B0   (0x0010)  
	SDK_UNDEFINED(16,1749) /* FMulticastInlineDelegate */ __um(OnPuzzleStart);                                     // 0x00C0   (0x0010)  
	SDK_UNDEFINED(16,1750) /* FMulticastInlineDelegate */ __um(OnPuzzleEnd);                                       // 0x00D0   (0x0010)  


	/// Functions
	// Function /Script/Pal7.PaladinPuzzleManager.StartPuzzle
	// void StartPuzzle(TScriptInterface<Class>& InPuzzleActor);                                                             // [0xec6e00] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinPuzzleManager.GetCurrentPuzzleObject
	// class UObject* GetCurrentPuzzleObject();                                                                              // [0xaa1a20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinPuzzleManager.EndPuzzle
	// void EndPuzzle(bool bInterrupt);                                                                                      // [0xec59c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPuzzleManager.CanSkipPuzzle
	// bool CanSkipPuzzle();                                                                                                 // [0xec51e0] Final|Native|Public|BlueprintCallable 
};

/// Struct /Script/Pal7.QTEWaveParam
/// Size: 0x0028 (0x000000 - 0x000028)
struct FQTEWaveParam
{ 
	bool                                               bHasInputTimeOut;                                           // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              WaitInputInterval;                                          // 0x0004   (0x0004)  
	bool                                               bHasTimeDilation;                                           // 0x0008   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	float                                              WaitTimeDilation;                                           // 0x000C   (0x0004)  
	TArray<FKey>                                       ValidKeys;                                                  // 0x0010   (0x0010)  
	EQTEWaveEndType                                    WaveEndType;                                                // 0x0020   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0021   (0x0007)  MISSED
};

/// Class /Script/Pal7.PaladinQTEActor
/// Size: 0x0088 (0x000220 - 0x0002A8)
class APaladinQTEActor : public AActor
{ 
public:
	TArray<FQTEWaveParam>                              QTEWaveSettings;                                            // 0x0220   (0x0010)  
	bool                                               ForceEndIfFail;                                             // 0x0230   (0x0001)  
	bool                                               BlockGamePlayInputWhenQTE;                                  // 0x0231   (0x0001)  
	bool                                               BlockSequenceBeforeUITipsShowEnd;                           // 0x0232   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1D];                                      // 0x0233   (0x001D)  MISSED
	bool                                               AutoNextWave;                                               // 0x0250   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x0251   (0x0001)  MISSED
	EQTEUMGType                                        UIType;                                                     // 0x0252   (0x0001)  
	unsigned char                                      UnknownData02_5[0x5];                                       // 0x0253   (0x0005)  MISSED
	FQTEWaveParam                                      CurrentWaveSetting;                                         // 0x0258   (0x0028)  
	unsigned char                                      UnknownData03_6[0x28];                                      // 0x0280   (0x0028)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinQTEActor.StartQTEWave
	// void StartQTEWave();                                                                                                  // [0xec6f20] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinQTEActor.StartQTE
	// void StartQTE();                                                                                                      // [0xe92750] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinQTEActor.OnReceiveInputEvent
	// void OnReceiveInputEvent(FKey KeyPressed, TEnumAsByte<EInputEvent> KeyEvent);                                         // [0xec6b40] Final|Native|Private 
	// Function /Script/Pal7.PaladinQTEActor.K2_OnWaveStart
	// void K2_OnWaveStart(int32_t WaveIndex);                                                                               // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinQTEActor.K2_OnWaveEnd
	// void K2_OnWaveEnd(int32_t WaveIndex, bool bSuccess);                                                                  // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinQTEActor.K2_OnUserInputed
	// void K2_OnUserInputed(bool bTypeRight);                                                                               // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinQTEActor.K2_OnQTEStart
	// void K2_OnQTEStart();                                                                                                 // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinQTEActor.K2_OnQTEEnd
	// void K2_OnQTEEnd(TArray<bool>& QTEResults);                                                                           // [0x15dd8c0] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/Pal7.PaladinQTEActor.EndQTEWave
	// void EndQTEWave(bool bSuccess, bool bTimeOut);                                                                        // [0xec5b00] Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinQTEActor.EndQTE
	// void EndQTE(TArray<bool>& QTEResults);                                                                                // [0xec5a50] Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinRandomSequenceQTEActor
/// Size: 0x0000 (0x0002A8 - 0x0002A8)
class APaladinRandomSequenceQTEActor : public APaladinQTEActor
{ 
public:
};

/// Class /Script/Pal7.PaladinProgressQTEActor
/// Size: 0x0030 (0x0002A8 - 0x0002D8)
class APaladinProgressQTEActor : public APaladinQTEActor
{ 
public:
	SDK_UNDEFINED(16,1751) /* FMulticastInlineDelegate */ __um(OnQTEProgressChange);                               // 0x02A8   (0x0010)  
	float                                              SuccessAdd;                                                 // 0x02B8   (0x0004)  
	float                                              FailureDecrease;                                            // 0x02BC   (0x0004)  
	float                                              DecreassValue;                                              // 0x02C0   (0x0004)  
	float                                              DecreaseUpdateRate;                                         // 0x02C4   (0x0004)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x02C8   (0x0010)  MISSED
};

/// Struct /Script/Pal7.PalJointStrikeHeroInfo
/// Size: 0x000C (0x000000 - 0x00000C)
struct FPalJointStrikeHeroInfo
{ 
	EPaladinHeroName                                   HeroName;                                                   // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	FName                                              PaladinAbilityName;                                         // 0x0004   (0x0008)  
};

/// Struct /Script/Pal7.PalJointStrikeAdjust
/// Size: 0x0040 (0x000000 - 0x000040)
struct FPalJointStrikeAdjust
{ 
	float                                              AdjustToLockTarget;                                         // 0x0000   (0x0004)  
	FVector                                            SelfOffset;                                                 // 0x0004   (0x000C)  
	FRotator                                           SelfRotation;                                               // 0x0010   (0x000C)  
	FVector                                            PartnerOffset;                                              // 0x001C   (0x000C)  
	FRotator                                           PartnerRotation;                                            // 0x0028   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0034   (0x0004)  MISSED
	class ULevelSequence*                              CameraSeq;                                                  // 0x0038   (0x0008)  
};

/// Class /Script/Pal7.PaladinJointStrikeQTEActor
/// Size: 0x0058 (0x0002A8 - 0x000300)
class APaladinJointStrikeQTEActor : public APaladinQTEActor
{ 
public:
	FPalJointStrikeHeroInfo                            SelfJointStrikeHeroInfo;                                    // 0x02A8   (0x000C)  
	FPalJointStrikeHeroInfo                            TargetJointStrikeHeroInfo;                                  // 0x02B4   (0x000C)  
	FPalJointStrikeAdjust                              JointStrikeAdjustInfo;                                      // 0x02C0   (0x0040)  
};

/// Class /Script/Pal7.PaladinQTEManager
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UPaladinQTEManager : public UActorComponent
{ 
public:
	SDK_UNDEFINED(16,1752) /* FMulticastInlineDelegate */ __um(OnReceiveQTEEndDelegate);                           // 0x00B0   (0x0010)  
	TArray<FKey>                                       BlackListKeys;                                              // 0x00C0   (0x0010)  
	TArray<EPaladinKeyEventName>                       BlackListEvents;                                            // 0x00D0   (0x0010)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x00E0   (0x0020)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinQTEManager.TouchSuccess
	// void TouchSuccess();                                                                                                  // [0xec7030] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinQTEManager.StopCurrentQTE
	// void StopCurrentQTE();                                                                                                // [0xec7010] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinQTEManager.StartQTEWithActor
	// void StartQTEWithActor(class APaladinQTEActor* QTEAtor, bool bAutoDestroy);                                           // [0xec6f40] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinQTEManager.StartQTE
	// void StartQTE(class UClass* QTEClass);                                                                                // [0xec6ea0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinQTEManager.IsAnyQTEPlaying
	// bool IsAnyQTEPlaying();                                                                                               // [0xec67a0] Final|Native|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/Pal7.PaladinQuestActiveCondition
/// Size: 0x0000 (0x000138 - 0x000138)
class UPaladinQuestActiveCondition : public UPaladinCondition
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinQuestActiveCondition.OnQuestReload
	// void OnQuestReload(class UWorld* WorldContext);                                                                       // [0xec6ab0] Native|Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinQuestActiveCondition.GetConditionActiveText
	// FText GetConditionActiveText();                                                                                       // [0xec5dd0] Native|Event|Public|BlueprintEvent 
};

/// Class /Script/Pal7.PaladinQuestAsset
/// Size: 0x0088 (0x000030 - 0x0000B8)
class UPaladinQuestAsset : public UDataAsset
{ 
public:
	class UPaladinQuestCompositeNode*                  RootNode;                                                   // 0x0030   (0x0008)  
	class UDialogConditionBase*                        QuestPreCondition;                                          // 0x0038   (0x0008)  
	SDK_UNDEFINED(24,1753) /* FText */                 __um(ChapterName);                                          // 0x0040   (0x0018)  
	SDK_UNDEFINED(24,1754) /* FText */                 __um(SceneName);                                            // 0x0058   (0x0018)  
	SDK_UNDEFINED(24,1755) /* FText */                 __um(QuestOverview);                                        // 0x0070   (0x0018)  
	SDK_UNDEFINED(24,1756) /* FText */                 __um(QuestDetailInfo);                                      // 0x0088   (0x0018)  
	SDK_UNDEFINED(16,1757) /* FString */               __um(QuestDescription);                                     // 0x00A0   (0x0010)  
	bool                                               IsSetID;                                                    // 0x00B0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00B1   (0x0007)  MISSED
};

/// Class /Script/Pal7.PaladinQuestBlueprintLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladinQuestBlueprintLibrary : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinQuestBlueprintLibrary.TriggerTagDataTable
	// void TriggerTagDataTable(class UDataTable* TagTable, bool bAddTag);                                                   // [0xec7050] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestBlueprintLibrary.RequestQuestGameplayTag
	// FGameplayTag RequestQuestGameplayTag(FName TagName, bool& ErrorIfNotFound);                                           // [0xec6d30] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinQuestBlueprintLibrary.IsQuestTagExist
	// bool IsQuestTagExist(class UObject* WorldContextObject, FGameplayTag InTag);                                          // [0xec69c0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinQuestBlueprintLibrary.IsQuestDone
	// bool IsQuestDone(FName CurPID, FName TargetID);                                                                       // [0xec6900] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestBlueprintLibrary.IsInQuestProgress
	// bool IsInQuestProgress(class UObject* WorldContextObject, FName InQuestInstanceID, FName InMinPID, FName InMaxPID);   // [0xec67d0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinQuestBlueprintLibrary.HasQuestNodeDone
	// bool HasQuestNodeDone(FName InQuestID, FGuid InCurrentNode, FGuid InTargetNode);                                      // [0xec6680] Final|Native|Static|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestBlueprintLibrary.GetQuestSaveSlotDesc
	// bool GetQuestSaveSlotDesc(FName& InQuestID, FText& OutChapterName, FText& OutQuestOverview);                          // [0xec64c0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestBlueprintLibrary.GetQuestPublishersMap
	// TMap<FName, FName> GetQuestPublishersMap(class UObject* WorldContextObject);                                          // [0xec6370] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinQuestBlueprintLibrary.GetQuestNodeProcessID
	// FName GetQuestNodeProcessID(FName QuestID, FGuid NodeGuid);                                                           // [0xec6290] Final|Native|Static|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestBlueprintLibrary.GetInactivePickQuestConditionDetail
	// void GetInactivePickQuestConditionDetail(class UObject* WorldContextObject, FName& InQuestID, FText& OutQuestTitle, TArray<FText>& OutConditionDesc); // [0xec6080] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestBlueprintLibrary.GetInactiveNodeQuestConditionDetail
	// void GetInactiveNodeQuestConditionDetail(class UObject* WorldContextObject, FName& InQuestID, FText& OutQuestTitle, TArray<FText>& OutConditionDesc); // [0xec5e70] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestBlueprintLibrary.GetBranchQuestPublishers
	// TArray<FName> GetBranchQuestPublishers(class UObject* WorldContextObject);                                            // [0xec5d00] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinQuestBlueprintLibrary.FormatSubgoalConditionText
	// FText FormatSubgoalConditionText(FSubConditionConfigInfo& SubConfig);                                                 // [0xec5bd0] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinQuestBlueprintLibrary.CheckQuestPickableWithConditions
	// bool CheckQuestPickableWithConditions(class UObject* WorldContextObject, TArray<FPaladinQuestConditionCollection> InUnlockConditionCol, TArray<FPaladinQuestConditionCollection> InInterruptConditionCol, bool& bQuestVisible); // [0xec57d0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestBlueprintLibrary.CheckQuestNodeConditionColletion
	// bool CheckQuestNodeConditionColletion(class UObject* WorldContextObject, FPaladinQuestNodeConditionCollection InCollection); // [0xec56b0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinQuestBlueprintLibrary.CheckQuestConditionColletionVisible
	// bool CheckQuestConditionColletionVisible(class UObject* WorldContextObject, TArray<FPaladinQuestConditionCollection> InCollection, bool& bQuestVisible); // [0xec5540] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinQuestBlueprintLibrary.CheckQuestConditionColletion
	// bool CheckQuestConditionColletion(class UObject* WorldContextObject, TArray<FPaladinQuestConditionCollection> InCollection); // [0xec5420] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinQuestBlueprintLibrary.CheckQuestActiveCondition
	// bool CheckQuestActiveCondition(class UObject* WorldContextObject, FPaladinQuestActiveConditionCollection& ActiveCollection); // [0xec5330] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinQuestBlueprintLibrary.CheckPaladinConditions
	// bool CheckPaladinConditions(class UObject* WorldContextObject, TArray<UPaladinCondition*> InConditions);              // [0xec5210] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Struct /Script/Pal7.QuestTrackInfo
/// Size: 0x0024 (0x000000 - 0x000024)
struct FQuestTrackInfo
{ 
	FName                                              ActorID;                                                    // 0x0000   (0x0008)  
	bool                                               bIsRangeTrack : 1;                                          // 0x0008:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0009   (0x0003)  MISSED
	float                                              TrackRange;                                                 // 0x000C   (0x0004)  
	FGameplayTag                                       UntrackTag;                                                 // 0x0010   (0x0008)  
	FName                                              QuestID;                                                    // 0x0018   (0x0008)  
	bool                                               bQuestTracked : 1;                                          // 0x0020:0 (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0021   (0x0003)  MISSED
};

/// Struct /Script/Pal7.PaladinQuestNodeConditionCollection
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPaladinQuestNodeConditionCollection
{ 
	TArray<class UPaladinCondition*>                   Conditions;                                                 // 0x0000   (0x0010)  
};

/// Struct /Script/Pal7.PaladinQuestActiveConditionCollection
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPaladinQuestActiveConditionCollection
{ 
	TArray<class UPaladinQuestActiveCondition*>        ActiveConditions;                                           // 0x0000   (0x0010)  
};

/// Class /Script/Pal7.PaladinQuestNode
/// Size: 0x0148 (0x000028 - 0x000170)
class UPaladinQuestNode : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x30];                                      // 0x0000   (0x0030)  MISSED
	SDK_UNDEFINED(16,1758) /* FMulticastInlineDelegate */ __um(OnSubgoalChanged);                                  // 0x0030   (0x0010)  
	SDK_UNDEFINED(16,1759) /* FMulticastInlineDelegate */ __um(OnNodeCompelte);                                    // 0x0040   (0x0010)  
	SDK_UNDEFINED(16,1760) /* FMulticastInlineDelegate */ __um(OnNodeActive);                                      // 0x0050   (0x0010)  
	FGuid                                              NodeGuid;                                                   // 0x0060   (0x0010)  
	SDK_UNDEFINED(24,1761) /* FText */                 __um(NodeName);                                             // 0x0070   (0x0018)  
	FName                                              ProcessId;                                                  // 0x0088   (0x0008)  
	TArray<FQuestTrackInfo>                            TrackActors;                                                // 0x0090   (0x0010)  
	FPaladinQuestNodeConditionCollection               ConditionCollection;                                        // 0x00A0   (0x0010)  
	FPaladinQuestActiveConditionCollection             ActiveConditionCollection;                                  // 0x00B0   (0x0010)  
	bool                                               bShowInLog;                                                 // 0x00C0   (0x0001)  
	bool                                               bPostSaveGame;                                              // 0x00C1   (0x0001)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x00C2   (0x0006)  MISSED
	TArray<class UPaladinAction*>                      PreActions;                                                 // 0x00C8   (0x0010)  
	TArray<class UPaladinAction*>                      PostActions;                                                // 0x00D8   (0x0010)  
	bool                                               bIsActiving;                                                // 0x00E8   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x00E9   (0x0007)  MISSED
	TArray<class UGameplayTask*>                       ActiveTasks;                                                // 0x00F0   (0x0010)  
	FName                                              QuestID;                                                    // 0x0100   (0x0008)  
	SDK_UNDEFINED(80,1762) /* TMap<FString, FString> */ __um(SaveDataMap);                                         // 0x0108   (0x0050)  
	unsigned char                                      UnknownData03_5[0x8];                                       // 0x0158   (0x0008)  MISSED
	class UPaladinQuestCompositeNode*                  ParentNode;                                                 // 0x0160   (0x0008)  
	unsigned char                                      UnknownData04_6[0x8];                                       // 0x0168   (0x0008)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinQuestNode.RefreshNodeSubgoals
	// void RefreshNodeSubgoals(FSubConditionConfigInfo InInfo);                                                             // [0xecb390] Final|Native|Public  
	// Function /Script/Pal7.PaladinQuestNode.OnNodeConditionMeet
	// void OnNodeConditionMeet(class UPaladinCondition* ConditionInst, FName ConditionKey, int32_t ConfigIndex, bool bMeetCondition); // [0xecaf40] Final|Native|Public  
	// Function /Script/Pal7.PaladinQuestNode.OnActiveStateChanged
	// void OnActiveStateChanged(class UPaladinCondition* ConditionInst, FName ConditionKey, int32_t ConfigIndex, bool bMeetCondition); // [0xecab30] Final|Native|Public  
	// Function /Script/Pal7.PaladinQuestNode.K2_OnEnd
	// void K2_OnEnd(bool bInterrupt);                                                                                       // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinQuestNode.K2_Activite
	// void K2_Activite();                                                                                                   // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinQuestNode.GetSubgoalInfos
	// TArray<FSubConditionConfigInfo> GetSubgoalInfos();                                                                    // [0xeca120] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestNode.GetProgressSaveData
	// TMap<FString, FString> GetProgressSaveData();                                                                         // [0xec9d00] Final|Native|Public  
	// Function /Script/Pal7.PaladinQuestNode.GetNodeProgressDesc
	// FText GetNodeProgressDesc();                                                                                          // [0xec99a0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/Pal7.PaladinQuestNode.GetNextNodeGuid
	// FGuid GetNextNodeGuid();                                                                                              // [0xec9960] Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinQuestNode.CompleteNode
	// void CompleteNode();                                                                                                  // [0xe45730] Native|Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Struct /Script/Pal7.PaladinQuestCompositeChild
/// Size: 0x0008 (0x000000 - 0x000008)
struct FPaladinQuestCompositeChild
{ 
	class UPaladinQuestNode*                           ChildNode;                                                  // 0x0000   (0x0008)  
};

/// Class /Script/Pal7.PaladinQuestCompositeNode
/// Size: 0x0018 (0x000170 - 0x000188)
class UPaladinQuestCompositeNode : public UPaladinQuestNode
{ 
public:
	TArray<FPaladinQuestCompositeChild>                Children;                                                   // 0x0170   (0x0010)  
	int32_t                                            NextNodeIndex;                                              // 0x0180   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0184   (0x0004)  MISSED
};

/// Class /Script/Pal7.QuestGameplayTagComponent
/// Size: 0x0018 (0x0000B0 - 0x0000C8)
class UQuestGameplayTagComponent : public UActorComponent
{ 
public:
	FGameplayTag                                       bindTag;                                                    // 0x00B0   (0x0008)  
	SDK_UNDEFINED(16,1763) /* FMulticastInlineDelegate */ __um(OnTagTrigged);                                      // 0x00B8   (0x0010)  


	/// Functions
	// Function /Script/Pal7.QuestGameplayTagComponent.OnTrigged
	// void OnTrigged(FGameplayTag Tag, bool bAddTag);                                                                       // [0xec6c60] Final|Native|Protected 
	// Function /Script/Pal7.QuestGameplayTagComponent.IsTagExist
	// bool IsTagExist();                                                                                                    // [0xec6a80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Pal7.PaladinQuestManagerComponent
/// Size: 0x0340 (0x000120 - 0x000460)
class UPaladinQuestManagerComponent : public UGameplayTasksComponent
{ 
public:
	unsigned char                                      UnknownData00_3[0x48];                                      // 0x0120   (0x0048)  MISSED
	SDK_UNDEFINED(16,1764) /* FDelegateProperty */     __um(TrackRecentQuestEvent);                                // 0x0168   (0x0010)  
	SDK_UNDEFINED(16,1765) /* FMulticastInlineDelegate */ __um(OnQuestTagTriggedCallbacks);                        // 0x0178   (0x0010)  
	SDK_UNDEFINED(16,1766) /* FMulticastInlineDelegate */ __um(OnEnvTagTriggedCallbacks);                          // 0x0188   (0x0010)  
	SDK_UNDEFINED(16,1767) /* FMulticastInlineDelegate */ __um(OnKillMonsterCallBacks);                            // 0x0198   (0x0010)  
	SDK_UNDEFINED(16,1768) /* FMulticastInlineDelegate */ __um(OnQuestUpdate);                                     // 0x01A8   (0x0010)  
	SDK_UNDEFINED(16,1769) /* FMulticastInlineDelegate */ __um(OnQuestTrackChanged);                               // 0x01B8   (0x0010)  
	SDK_UNDEFINED(16,1770) /* FMulticastInlineDelegate */ __um(OnQuestBegin);                                      // 0x01C8   (0x0010)  
	SDK_UNDEFINED(16,1771) /* FMulticastInlineDelegate */ __um(OnQuestEnd);                                        // 0x01D8   (0x0010)  
	SDK_UNDEFINED(16,1772) /* FMulticastInlineDelegate */ __um(OnQuestNodeSubgoalsChanged);                        // 0x01E8   (0x0010)  
	SDK_UNDEFINED(16,1773) /* FMulticastInlineDelegate */ __um(OnQuestReloadSignature);                            // 0x01F8   (0x0010)  
	SDK_UNDEFINED(16,1774) /* FMulticastInlineDelegate */ __um(OnQuestTrackMessagePopSignature);                   // 0x0208   (0x0010)  
	SDK_UNDEFINED(16,1775) /* FMulticastInlineDelegate */ __um(OnTrackQuestActorChanged);                          // 0x0218   (0x0010)  
	SDK_UNDEFINED(16,1776) /* FMulticastInlineDelegate */ __um(OnQuestPubliserChanged);                            // 0x0228   (0x0010)  
	SDK_UNDEFINED(16,1777) /* FMulticastInlineDelegate */ __um(OnQuestActiveStateChanged);                         // 0x0238   (0x0010)  
	class UDataTable*                                  QuestDataTable;                                             // 0x0248   (0x0008)  
	SDK_UNDEFINED(80,1778) /* TMap<FName, FQuestAssetDataTable> */ __um(QuestDataTableMap);                        // 0x0250   (0x0050)  
	SDK_UNDEFINED(80,1779) /* TMap<FName, FPaladinQuestPublichInfo> */ __um(PickableQuestMap);                     // 0x02A0   (0x0050)  
	SDK_UNDEFINED(80,1780) /* TMap<FName, FQuestInstance> */ __um(OpenQuestInstanceMap);                           // 0x02F0   (0x0050)  
	SDK_UNDEFINED(80,1781) /* TMap<FName, FPaladinQuestInfo> */ __um(CompleteQuestMap);                            // 0x0340   (0x0050)  
	FName                                              CurrentMainQuestID;                                         // 0x0390   (0x0008)  
	SDK_UNDEFINED(24,1782) /* FText */                 __um(TrackTipsTitleTemplate);                               // 0x0398   (0x0018)  
	SDK_UNDEFINED(24,1783) /* FText */                 __um(TrackTipsContentTemplate);                             // 0x03B0   (0x0018)  
	float                                              TrackTipsShowDuration;                                      // 0x03C8   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x03CC   (0x0004)  MISSED
	TArray<class UPaladinQuestActiveCondition*>        QuestChangedConditions;                                     // 0x03D0   (0x0010)  
	unsigned char                                      UnknownData02_6[0x80];                                      // 0x03E0   (0x0080)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinQuestManagerComponent.TrackRecentQuest
	// void TrackRecentQuest();                                                                                              // [0xecb560] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestManagerComponent.TrackQuest
	// void TrackQuest(FName InQuestInstanceID);                                                                             // [0xecb4e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestManagerComponent.ShowTipsForTrackQuest
	// void ShowTipsForTrackQuest(FName InQuestID);                                                                          // [0xecb460] Final|Native|Public  
	// Function /Script/Pal7.PaladinQuestManagerComponent.OnQuestTagTriggeredInternal
	// void OnQuestTagTriggeredInternal(FGameplayTag InTag, bool bAddTag);                                                   // [0xecb200] Final|Native|Private 
	// Function /Script/Pal7.PaladinQuestManagerComponent.OnNodeSubgoalsChanged
	// void OnNodeSubgoalsChanged(FName QuestID, FGuid NodeID, FSubConditionConfigInfo Info);                                // [0xecb090] Final|Native|Public|HasDefaults 
	// Function /Script/Pal7.PaladinQuestManagerComponent.OnNodeComplete
	// void OnNodeComplete(FName QuestID, FGuid FromNodeID, FGuid ToNode);                                                   // [0xecae10] Final|Native|Public|HasDefaults 
	// Function /Script/Pal7.PaladinQuestManagerComponent.OnNodeActiveConditionChanged
	// void OnNodeActiveConditionChanged(bool bInIsActive, FName QuestID, FGuid NodeID);                                     // [0xecad00] Final|Native|Public|HasDefaults 
	// Function /Script/Pal7.PaladinQuestManagerComponent.OnLevelLoadDone
	// void OnLevelLoadDone(FName LevelID);                                                                                  // [0xecac80] Final|Native|Private 
	// Function /Script/Pal7.PaladinQuestManagerComponent.K2_PushInstance
	// void K2_PushInstance(FName QuestID);                                                                                  // [0xecaab0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestManagerComponent.IsQuestInstanceOpen
	// bool IsQuestInstanceOpen(FName InQuestInstanceID);                                                                    // [0xecaa20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestManagerComponent.IsQuestInstanceCompleted
	// bool IsQuestInstanceCompleted(FName InQuestInstanceID);                                                               // [0xeca990] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestManagerComponent.IsQuestActive
	// bool IsQuestActive(FName QuestID, EQuestInactiveReason& OutReason);                                                   // [0xeca8c0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestManagerComponent.IsOpenQuestInstanceProgress
	// void IsOpenQuestInstanceProgress(FName InQuestInstanceID, FName InMinPID, FName InMaxPID, bool& OutIsOpen);           // [0xeca760] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestManagerComponent.IsActorTrackedInactived
	// void IsActorTrackedInactived(FName& InActorID, bool& bOutInactived, FName& OutQuestID);                               // [0xeca620] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestManagerComponent.IsActorTrackedByMainQuest
	// void IsActorTrackedByMainQuest(FName& InActorID, bool& bTracked, FName& OutQuestID);                                  // [0xeca4e0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestManagerComponent.InvokeTrigQuestTag
	// void InvokeTrigQuestTag(FGameplayTag Tag, bool bAddTag);                                                              // [0xeca410] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestManagerComponent.InvokeTrigEnvTag
	// void InvokeTrigEnvTag(FGameplayTag Tag);                                                                              // [0xeca390] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestManagerComponent.InvokeKillMonsterEvent
	// void InvokeKillMonsterEvent(class AActor* ControlledPawn, FName MonsterName);                                         // [0xeca2d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestManagerComponent.GetTrackQuestInfo
	// void GetTrackQuestInfo(EQuestCategory InQuestCategory, FPaladinQuestInfo& OutQuestInfo, bool& bIsFound);              // [0xeca170] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinQuestManagerComponent.GetQuestState
	// EQuestState GetQuestState(FName InQuestID);                                                                           // [0xeca090] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestManagerComponent.GetQuestPublisherStatue
	// void GetQuestPublisherStatue(FName InActorID, bool& bOutIsAPublisher, bool& bOutIsActive, bool& bOutVisibleInactive); // [0xec9f10] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinQuestManagerComponent.GetQuestPID
	// FName GetQuestPID(FName QuestID);                                                                                     // [0xec9e80] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestManagerComponent.GetQuestInstPID
	// FName GetQuestInstPID(FName QuestInst);                                                                               // [0xec9df0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestManagerComponent.GetOpenQuestInfoByQID
	// void GetOpenQuestInfoByQID(FName QuestID, FPaladinQuestInfo& Info, bool& bIsFound);                                   // [0xec9ba0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinQuestManagerComponent.GetOpenQuestInfo
	// void GetOpenQuestInfo(FName InQuestInstanceID, FPaladinQuestInfo& Info, bool& bIsFound);                              // [0xec9a40] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinQuestManagerComponent.GetCurTrackingBranchQuestID
	// FName GetCurTrackingBranchQuestID();                                                                                  // [0xec97e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinQuestManagerComponent.GetCurrentMainQuestPID
	// FName GetCurrentMainQuestPID();                                                                                       // [0xec9920] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestManagerComponent.GetCurrentMainQuestInfo
	// void GetCurrentMainQuestInfo(FPaladinQuestInfo& Info, bool& bIsFound);                                                // [0xec9800] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinQuestManagerComponent.GetCompleteQuestInfo
	// void GetCompleteQuestInfo(FName InQuestID, FPaladinQuestInfo& OutQuestInfo, bool& bIsFound);                          // [0xec9680] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinQuestManagerComponent.GetAllOpenQuestInfos
	// void GetAllOpenQuestInfos(TArray<FPaladinQuestInfo>& RetArr);                                                         // [0xec9460] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinQuestManagerComponent.GetAllCompleteQuestInfos
	// void GetAllCompleteQuestInfos(TArray<FPaladinQuestInfo>& RetArr);                                                     // [0xec9240] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinQuestManagerComponent.BindQuestKeyEvents
	// void BindQuestKeyEvents(TEnumAsByte<EInputEvent> InputEvent, EPaladinKeyEventName EventNameEnum, float CurTickHoldSpan, float PreTickHoldSpan, float KeyMappingValue); // [0xec90b0] Final|Native|Private 
};

/// Class /Script/Pal7.PaladinQuestNode_CommitQuest
/// Size: 0x0000 (0x000170 - 0x000170)
class UPaladinQuestNode_CommitQuest : public UPaladinQuestNode
{ 
public:
};

/// Class /Script/Pal7.PaladinQuestNode_Goal
/// Size: 0x0000 (0x000188 - 0x000188)
class UPaladinQuestNode_Goal : public UPaladinQuestCompositeNode
{ 
public:
};

/// Class /Script/Pal7.PaladinQuestNode_Goal_BlueprintBase
/// Size: 0x0000 (0x000188 - 0x000188)
class UPaladinQuestNode_Goal_BlueprintBase : public UPaladinQuestNode_Goal
{ 
public:
};

/// Class /Script/Pal7.PaladinQuestNode_GoalWithBranch
/// Size: 0x0000 (0x000188 - 0x000188)
class UPaladinQuestNode_GoalWithBranch : public UPaladinQuestCompositeNode
{ 
public:
};

/// Class /Script/Pal7.PaladinQuestNode_GoalWithBranch_Bp
/// Size: 0x0000 (0x000188 - 0x000188)
class UPaladinQuestNode_GoalWithBranch_Bp : public UPaladinQuestNode_GoalWithBranch
{ 
public:
};

/// Class /Script/Pal7.PaladinQuestNode_GotoQuest
/// Size: 0x0008 (0x000170 - 0x000178)
class UPaladinQuestNode_GotoQuest : public UPaladinQuestNode
{ 
public:
	class UPaladinQuestAsset*                          NextQuestAsset;                                             // 0x0170   (0x0008)  
};

/// Class /Script/Pal7.PaladinQuestNodeCondition
/// Size: 0x0000 (0x000138 - 0x000138)
class UPaladinQuestNodeCondition : public UPaladinCondition
{ 
public:
};

/// Class /Script/Pal7.PaladinQuestProcessIDManager
/// Size: 0x0010 (0x000028 - 0x000038)
class UPaladinQuestProcessIDManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x30];                                      // 0x0000   (0x0030)  MISSED
	class UDataTable*                                  ProcessIDDataTable;                                         // 0x0030   (0x0008)  
};

/// Class /Script/Pal7.PaladinQuestProxyComponent
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UPaladinQuestProxyComponent : public UActorComponent
{ 
public:
	class UPaladinQuestManagerComponent*               QuestManager;                                               // 0x00B0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x00B8   (0x0020)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinQuestProxyComponent.OnQuestUpdate
	// void OnQuestUpdate(FName QID, FName PID);                                                                             // [0xecb2d0] Final|Native|Public  
};

/// Class /Script/Pal7.PaladinRichTextBlock
/// Size: 0x0000 (0x000668 - 0x000668)
class UPaladinRichTextBlock : public URichTextBlock
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinRichTextBlock.SetDecoratorClass
	// bool SetDecoratorClass(class UClass* DecoratorClass);                                                                 // [0xecf4c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinRichTextBlock.ClearDecoratorClass
	// void ClearDecoratorClass();                                                                                           // [0xece8a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinRichTextBlock.AddDecoratorClass
	// bool AddDecoratorClass(class UClass* DecoratorClass);                                                                 // [0xece790] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinRichTextBlockDecorator
/// Size: 0x0030 (0x000028 - 0x000058)
class UPaladinRichTextBlockDecorator : public URichTextBlockDecorator
{ 
public:
	bool                                               bDeviceChangeMode : 1;                                      // 0x0028:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x0029   (0x0007)  MISSED
	class UDataTable*                                  GamepadImageSet_PS4;                                        // 0x0030   (0x0008)  
	class UDataTable*                                  GamepadImageSet;                                            // 0x0038   (0x0008)  
	class UDataTable*                                  KeyboardImageSet;                                           // 0x0040   (0x0008)  
	class UDataTable*                                  TouchImageSet;                                              // 0x0048   (0x0008)  
	class UDataTable*                                  DefaultImageSet;                                            // 0x0050   (0x0008)  
};

/// Class /Script/Pal7.PaladinRichTextInputActionDecorator
/// Size: 0x00A0 (0x000028 - 0x0000C8)
class UPaladinRichTextInputActionDecorator : public URichTextBlockDecorator
{ 
public:
	class UDataTable*                                  KeyIconSet;                                                 // 0x0028   (0x0008)  
	class UDataTable*                                  KeyIconSet_PS4;                                             // 0x0030   (0x0008)  
	FSlateBrush                                        TextBrush;                                                  // 0x0038   (0x0088)  
	bool                                               bUseTestBrush : 1;                                          // 0x00C0:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00C1   (0x0007)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinRichTextInputActionDecorator.GetKeyEventIcon
	// bool GetKeyEventIcon(FKey InKey, FSlateBrush& OutBrush);                                                              // [0x15dd8c0] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/Pal7.PaladinRichTextInputActionDecorator.GetEventKeyByName
	// bool GetEventKeyByName(FName EventKeyName, EPaladinKeyEventName& OutEventKey);                                        // [0xece980] Final|Native|Public|HasOutParms 
};

/// Class /Script/Pal7.PaladinRoomCheckVolum
/// Size: 0x0050 (0x000228 - 0x000278)
class APaladinRoomCheckVolum : public ATriggerBox
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x0228   (0x0004)  MISSED
	float                                              ExposeExtension;                                            // 0x022C   (0x0004)  
	FName                                              PostPocessTag;                                              // 0x0230   (0x0008)  
	bool                                               ApplyDspBusSnapshot;                                        // 0x0238   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0239   (0x0003)  MISSED
	int32_t                                            MilliSeconds;                                               // 0x023C   (0x0004)  
	SDK_UNDEFINED(16,1784) /* FString */               __um(InSnapshotName);                                       // 0x0240   (0x0010)  
	SDK_UNDEFINED(16,1785) /* FString */               __um(OutSnapshotName);                                      // 0x0250   (0x0010)  
	unsigned char                                      UnknownData02_6[0x18];                                      // 0x0260   (0x0018)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinRoomCheckVolum.OnBeginOverlapOthers
	// void OnBeginOverlapOthers(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0xecf090] Final|Native|Private|HasOutParms 
};

/// Class /Script/Pal7.PaladinRuntimeActorManager
/// Size: 0x0068 (0x000028 - 0x000090)
class UPaladinRuntimeActorManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x28];                                      // 0x0000   (0x0028)  MISSED
	SDK_UNDEFINED(16,1786) /* FMulticastInlineDelegate */ __um(OnRegisterActorChangedSignature);                   // 0x0028   (0x0010)  
	class UDataTable*                                  ActorInfoDataTable;                                         // 0x0038   (0x0008)  
	SDK_UNDEFINED(80,1787) /* TMap<FName, FPaladinRTActorInfo> */ __um(ActorsInfoMap);                             // 0x0040   (0x0050)  
};

/// Class /Script/Pal7.PaladinSaveBlueprintLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladinSaveBlueprintLibrary : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinSaveBlueprintLibrary.GetPublishVersion
	// FString GetPublishVersion();                                                                                          // [0xecedf0] Final|Native|Static|Public|BlueprintCallable 
};

/// Struct /Script/Pal7.SaveQuestInfo
/// Size: 0x0060 (0x000000 - 0x000060)
struct FSaveQuestInfo
{ 
	SDK_UNDEFINED(80,1788) /* TMap<FName, FQuestSaveData> */ __um(QuestSaveDataMap);                               // 0x0000   (0x0050)  
	FName                                              CurrentMainQuestID;                                         // 0x0050   (0x0008)  
	FName                                              CurrentTrackBranch;                                         // 0x0058   (0x0008)  
};

/// Struct /Script/Pal7.SaveLevelInfo
/// Size: 0x000C (0x000000 - 0x00000C)
struct FSaveLevelInfo
{ 
	float                                              TotalPlayTimeInSeconds;                                     // 0x0000   (0x0004)  
	FName                                              LevelID;                                                    // 0x0004   (0x0008)  
};

/// Struct /Script/Pal7.SaveHeroInfo
/// Size: 0x0038 (0x000000 - 0x000038)
struct FSaveHeroInfo
{ 
	bool                                               InTeam;                                                     // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            CharacterLevel;                                             // 0x0004   (0x0004)  
	int32_t                                            ExtraExp;                                                   // 0x0008   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	TArray<FName>                                      SkillConfig;                                                // 0x0010   (0x0010)  
	TArray<FName>                                      OldUnLockSkills;                                            // 0x0020   (0x0010)  
	float                                              CurrentHP;                                                  // 0x0030   (0x0004)  
	float                                              CurrentMP;                                                  // 0x0034   (0x0004)  
};

/// Struct /Script/Pal7.SaveTeamInfo
/// Size: 0x0060 (0x000000 - 0x000060)
struct FSaveTeamInfo
{ 
	EPaladinHeroName                                   LeadingHeroName;                                            // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0xF];                                       // 0x0001   (0x000F)  MISSED
	FTransform                                         LeaderTransform;                                            // 0x0010   (0x0030)  
	TArray<FSaveHeroInfo>                              HeroInfos;                                                  // 0x0040   (0x0010)  
	int32_t                                            ReachedMaxLevel;                                            // 0x0050   (0x0004)  
	int32_t                                            MaxLevelExtraExp;                                           // 0x0054   (0x0004)  
	int32_t                                            AwakenPoint;                                                // 0x0058   (0x0004)  
	int16_t                                            HeroAppearedState;                                          // 0x005C   (0x0002)  
	bool                                               bEnalbeSwitchHero;                                          // 0x005E   (0x0001)  
	unsigned char                                      UnknownData01_6[0x1];                                       // 0x005F   (0x0001)  MISSED
};

/// Struct /Script/Pal7.SaveEquipmentInfo
/// Size: 0x0020 (0x000000 - 0x000020)
struct FSaveEquipmentInfo
{ 
	int32_t                                            EquipmentID;                                                // 0x0000   (0x0004)  
	int32_t                                            TemplateID;                                                 // 0x0004   (0x0004)  
	TArray<int32_t>                                    ModifierLevels;                                             // 0x0008   (0x0010)  
	bool                                               bIsNew : 1;                                                 // 0x0018:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0019   (0x0003)  MISSED
	int32_t                                            EnhanceLevel;                                               // 0x001C   (0x0004)  
};

/// Struct /Script/Pal7.SaveEquipmentCategory
/// Size: 0x0010 (0x000000 - 0x000010)
struct FSaveEquipmentCategory
{ 
	TArray<FSaveEquipmentInfo>                         OneTypeEquipmentList;                                       // 0x0000   (0x0010)  
};

/// Struct /Script/Pal7.SaveHeroEquipmentList
/// Size: 0x0010 (0x000000 - 0x000010)
struct FSaveHeroEquipmentList
{ 
	TArray<int32_t>                                    OneHeroEquipmentList;                                       // 0x0000   (0x0010)  
};

/// Struct /Script/Pal7.SaveItemInfo
/// Size: 0x0148 (0x000000 - 0x000148)
struct FSaveItemInfo
{ 
	SDK_UNDEFINED(80,1789) /* TMap<int32_t, int32_t> */ __um(ItemMap);                                             // 0x0000   (0x0050)  
	TArray<int32_t>                                    CustomHotSlot;                                              // 0x0050   (0x0010)  
	SDK_UNDEFINED(80,1790) /* TMap<int32_t, bool> */   __um(ItemIsNew);                                            // 0x0060   (0x0050)  
	TArray<FSaveEquipmentCategory>                     TotalEquipmentList;                                         // 0x00B0   (0x0010)  
	TArray<FSaveHeroEquipmentList>                     EachHeroGearedList;                                         // 0x00C0   (0x0010)  
	TArray<int32_t>                                    RecipesKnown;                                               // 0x00D0   (0x0010)  
	TArray<int32_t>                                    EquipIDCountByCategory;                                     // 0x00E0   (0x0010)  
	SDK_UNDEFINED(80,1791) /* TMap<FName, FSaveLimitItem> */ __um(NpcLimitGoodsRecord);                            // 0x00F0   (0x0050)  
	int32_t                                            Money;                                                      // 0x0140   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0144   (0x0004)  MISSED
};

/// Struct /Script/Pal7.SaveCardCategory
/// Size: 0x0050 (0x000000 - 0x000050)
struct FSaveCardCategory
{ 
	SDK_UNDEFINED(80,1792) /* TMap<int32_t, bool> */   __um(OneTypeCardList);                                      // 0x0000   (0x0050)  
};

/// Struct /Script/Pal7.SaveBattleDeckList
/// Size: 0x0018 (0x000000 - 0x000018)
struct FSaveBattleDeckList
{ 
	bool                                               bIsBattleDeck;                                              // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            AdvCardNum;                                                 // 0x0004   (0x0004)  
	TArray<int32_t>                                    OneBattleDeckList;                                          // 0x0008   (0x0010)  
};

/// Struct /Script/Pal7.SaveICardInfo
/// Size: 0x0020 (0x000000 - 0x000020)
struct FSaveICardInfo
{ 
	TArray<FSaveCardCategory>                          PlayerCardMap;                                              // 0x0000   (0x0010)  
	TArray<FSaveBattleDeckList>                        EachBattleDeckList;                                         // 0x0010   (0x0010)  
};

/// Struct /Script/Pal7.SavePetInfo
/// Size: 0x0058 (0x000000 - 0x000058)
struct FSavePetInfo
{ 
	SDK_UNDEFINED(80,1793) /* TMap<FName, FPetInfo> */ __um(Pets);                                                 // 0x0000   (0x0050)  
	FName                                              SelectedPet;                                                // 0x0050   (0x0008)  
};

/// Struct /Script/Pal7.FoodEffectData
/// Size: 0x0028 (0x000000 - 0x000028)
struct FFoodEffectData
{ 
	class UClass*                                      EffectClass;                                                // 0x0000   (0x0008)  
	SDK_UNDEFINED(24,1794) /* FText */                 __um(EffectName);                                           // 0x0008   (0x0018)  
	float                                              EffectMagnitude;                                            // 0x0020   (0x0004)  
	bool                                               NeedMinusOne;                                               // 0x0024   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0025   (0x0003)  MISSED
};

/// Struct /Script/Pal7.SaveCookData
/// Size: 0x0028 (0x000000 - 0x000028)
struct FSaveCookData
{ 
	int32_t                                            BuffingRecipeID;                                            // 0x0000   (0x0004)  
	int32_t                                            BuffingWineID;                                              // 0x0004   (0x0004)  
	EPaladinCookSurroundType                           SurroundType;                                               // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	TArray<FFoodEffectData>                            BuffList;                                                   // 0x0010   (0x0010)  
	int32_t                                            BuffStartTime;                                              // 0x0020   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/Pal7.WorldMapArchiveData
/// Size: 0x0078 (0x000000 - 0x000078)
struct FWorldMapArchiveData
{ 
	TArray<FGameplayTag>                               MapTags;                                                    // 0x0000   (0x0010)  
	TArray<FGameplayTag>                               BlockedMapTags;                                             // 0x0010   (0x0010)  
	FName                                              DisableLandSQMapID;                                         // 0x0020   (0x0008)  
	SDK_UNDEFINED(80,1795) /* TMap<FName, bool> */     __um(NeedUnlockDisplayTags);                                // 0x0028   (0x0050)  
};

/// Struct /Script/Pal7.MuseumSaveData
/// Size: 0x0050 (0x000000 - 0x000050)
struct FMuseumSaveData
{ 
	SDK_UNDEFINED(80,1796) /* TSet<FGameplayTag> */    __um(InheritTags);                                          // 0x0000   (0x0050)  
};

/// Struct /Script/Pal7.Pal7GameStats_HardwareInfo
/// Size: 0x0028 (0x000000 - 0x000028)
struct FPal7GameStats_HardwareInfo
{ 
	unsigned char                                      UnknownData00_2[0x28];                                      // 0x0000   (0x0028)  MISSED
};

/// Class /Script/Pal7.PaladinSaveGame
/// Size: 0x0568 (0x000028 - 0x000590)
class UPaladinSaveGame : public USaveGame
{ 
public:
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x0028   (0x0008)  MISSED
	SDK_UNDEFINED(16,1797) /* FString */               __um(PublishVersion);                                       // 0x0030   (0x0010)  
	FSaveQuestInfo                                     QuestInfo;                                                  // 0x0040   (0x0060)  
	FSaveLevelInfo                                     LevelInfo;                                                  // 0x00A0   (0x000C)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x00AC   (0x0004)  MISSED
	FSaveTeamInfo                                      TeamInfo;                                                   // 0x00B0   (0x0060)  
	FSaveItemInfo                                      ItemInfo;                                                   // 0x0110   (0x0148)  
	FSaveICardInfo                                     CardInfo;                                                   // 0x0258   (0x0020)  
	FSavePetInfo                                       PetInfo;                                                    // 0x0278   (0x0058)  
	FSaveCookData                                      CookData;                                                   // 0x02D0   (0x0028)  
	EPaladinGameDifficulty                             GameDifficulty;                                             // 0x02F8   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x02F9   (0x0007)  MISSED
	FWorldMapArchiveData                               GameWorldMapArchive;                                        // 0x0300   (0x0078)  
	int32_t                                            FunctionOpenState;                                          // 0x0378   (0x0004)  
	bool                                               IsInheritArchive;                                           // 0x037C   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x037D   (0x0003)  MISSED
	FMuseumSaveData                                    MuseumInfo;                                                 // 0x0380   (0x0050)  
	EPaladinSaveGameFileVersion                        SaveVersion;                                                // 0x03D0   (0x0001)  
	unsigned char                                      UnknownData04_5[0x1];                                       // 0x03D1   (0x0001)  MISSED
	FPal7GameStats_HardwareInfo                        HwInfo;                                                     // 0x03D2   (0x0028)  
	unsigned char                                      UnknownData05_5[0x6];                                       // 0x03FA   (0x0006)  MISSED
	SDK_UNDEFINED(80,1798) /* TMap<EBossBattleName, float> */ __um(BossBattleBestTime);                            // 0x0400   (0x0050)  
	SDK_UNDEFINED(80,1799) /* TSet<FName> */           __um(ActivatedStartTags);                                   // 0x0450   (0x0050)  
	SDK_UNDEFINED(80,1800) /* TSet<FGameplayTag> */    __um(LevelTags);                                            // 0x04A0   (0x0050)  
	SDK_UNDEFINED(80,1801) /* TSet<FGuid> */           __um(PickUpItemActorID);                                    // 0x04F0   (0x0050)  
	SDK_UNDEFINED(80,1802) /* TSet<FGameplayTag> */    __um(GlobalTagContainer);                                   // 0x0540   (0x0050)  


	/// Functions
	// Function /Script/Pal7.PaladinSaveGame.UpdateBossTime
	// void UpdateBossTime(EBossBattleName Name, float Time);                                                                // [0xecf950] Final|Native|Public  
	// Function /Script/Pal7.PaladinSaveGame.TriggerQuestTag
	// void TriggerQuestTag(FGameplayTag Tag, bool bAddTag, bool bQuiet);                                                    // [0xecf550] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSaveGame.RecoveryItem
	// void RecoveryItem(int32_t TemplateID, int32_t Count);                                                                 // [0xecf400] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSaveGame.RecoveryFunctionOpenState
	// void RecoveryFunctionOpenState(EOpenFunctionID ID, bool bOpen);                                                       // [0xecf330] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSaveGame.QuestTagExist
	// bool QuestTagExist(FGameplayTag Tag);                                                                                 // [0xecf2a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinSaveGame.IsActivatedStartTag
	// bool IsActivatedStartTag(FName Tag);                                                                                  // [0xecefb0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinSaveGame.GetValidTimeCount
	// int32_t GetValidTimeCount();                                                                                          // [0xecef60] Final|Native|Public  
	// Function /Script/Pal7.PaladinSaveGame.GetGlobalTagContainer
	// TSet<FGameplayTag> GetGlobalTagContainer();                                                                           // [0xeceb50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinSaveGame.GetBossTime
	// float GetBossTime(EBossBattleName Name);                                                                              // [0xece8c0] Final|Native|Public  
	// Function /Script/Pal7.PaladinSaveGame.ActivateStartTags
	// void ActivateStartTags(TSet<FName> Tags);                                                                             // [0xece5d0] Final|Native|Public|BlueprintCallable 
};

/// Struct /Script/Pal7.PaladinSaveMetaCollection
/// Size: 0x00C0 (0x000000 - 0x0000C0)
struct FPaladinSaveMetaCollection
{ 
	SDK_UNDEFINED(16,1803) /* FString */               __um(PublishVersion);                                       // 0x0000   (0x0010)  
	SDK_UNDEFINED(80,1804) /* TMap<int32_t, FPaladinSlotMetaData> */ __um(SlotMetaMap);                            // 0x0010   (0x0050)  
	int32_t                                            LastSaveSlotIndex;                                          // 0x0060   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0064   (0x0004)  MISSED
	SDK_UNDEFINED(80,1805) /* TSet<int32_t> */         __um(FinishGameIndexs);                                     // 0x0068   (0x0050)  
	int32_t                                            LastAutoSaveIndex;                                          // 0x00B8   (0x0004)  
	int32_t                                            LastAccessIndex;                                            // 0x00BC   (0x0004)  
};

/// Class /Script/Pal7.PaladinSaveGameManager
/// Size: 0x01B8 (0x000028 - 0x0001E0)
class UPaladinSaveGameManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x30];                                      // 0x0000   (0x0030)  MISSED
	SDK_UNDEFINED(16,1806) /* FMulticastInlineDelegate */ __um(OnSaveGameStateChangedSignature);                   // 0x0030   (0x0010)  
	SDK_UNDEFINED(16,1807) /* FMulticastInlineDelegate */ __um(OnLoadGameFailedSignature);                         // 0x0040   (0x0010)  
	SDK_UNDEFINED(16,1808) /* FMulticastInlineDelegate */ __um(OnSaveGameFailedSignature);                         // 0x0050   (0x0010)  
	unsigned char                                      UnknownData01_5[0x28];                                      // 0x0060   (0x0028)  MISSED
	class UTexture2D*                                  AuotSaveImage;                                              // 0x0088   (0x0008)  
	FPaladinSaveMetaCollection                         MetaCollection;                                             // 0x0090   (0x00C0)  
	SDK_UNDEFINED(80,1809) /* TMap<int32_t, FPaladinSlotScreenShotData> */ __um(ScreenShotMap);                    // 0x0150   (0x0050)  
	unsigned char                                      UnknownData02_5[0x10];                                      // 0x01A0   (0x0010)  MISSED
	class UPaladinSaveGame*                            CurrentSaveGame;                                            // 0x01B0   (0x0008)  
	class UPaladinGlobalSaveGame*                      GlobalSaveGame;                                             // 0x01B8   (0x0008)  
	unsigned char                                      UnknownData03_6[0x20];                                      // 0x01C0   (0x0020)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinSaveGameManager.TryLoadSlotData
	// bool TryLoadSlotData(int32_t SlotIndex, class UPaladinSaveGame*& OutLoadedSave);                                      // [0xecf880] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinSaveGameManager.TryGetSlotMeta
	// bool TryGetSlotMeta(int32_t& SlotIndex, FPaladinSlotMetaData& OutSlotData);                                           // [0xecf660] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinSaveGameManager.IsSavingSlotData
	// bool IsSavingSlotData();                                                                                              // [0xecf070] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinSaveGameManager.IsExistFinishGameSlot
	// bool IsExistFinishGameSlot();                                                                                         // [0xecf040] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSaveGameManager.HoldSaveCacheForBroadCast
	// void HoldSaveCacheForBroadCast();                                                                                     // [0xecef90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSaveGameManager.GetSlotScreenShot
	// bool GetSlotScreenShot(int32_t& InSlotIndex, class UTexture2D*& OutImage);                                            // [0xecee70] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinSaveGameManager.GetMinManualSaveIndex
	// int32_t GetMinManualSaveIndex();                                                                                      // [0xecedd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinSaveGameManager.GetMinAutoSaveIndex
	// int32_t GetMinAutoSaveIndex();                                                                                        // [0xecedb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinSaveGameManager.GetMetaTime
	// FDateTime GetMetaTime();                                                                                              // [0xeced70] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinSaveGameManager.GetMaxManualSaveIndex
	// int32_t GetMaxManualSaveIndex();                                                                                      // [0xeced50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinSaveGameManager.GetMaxAutoSaveIndex
	// int32_t GetMaxAutoSaveIndex();                                                                                        // [0xeced30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinSaveGameManager.GetLastAutoSaveSlotIndex
	// int32_t GetLastAutoSaveSlotIndex();                                                                                   // [0xeced00] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSaveGameManager.GetLastAccessIndex
	// int32_t GetLastAccessIndex();                                                                                         // [0xe7f6f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinSaveGameManager.GetFinishGameIndexes
	// TSet<int32_t> GetFinishGameIndexes();                                                                                 // [0xecea50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinSaveGameManager.GetCurrentSaveGame
	// class UPaladinSaveGame* GetCurrentSaveGame();                                                                         // [0xece950] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSaveGameManager.ApplyLoadSaveData
	// void ApplyLoadSaveData(class UPaladinSaveGame* InNewSaveObj);                                                         // [0xece820] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinSaveItemBase
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladinSaveItemBase : public UObject
{ 
public:
};

/// Class /Script/Pal7.SaveSlotMeta
/// Size: 0x00C0 (0x000028 - 0x0000E8)
class USaveSlotMeta : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x28];                                      // 0x0000   (0x0028)  MISSED
	EPaladinSaveGameFileVersion                        SlotVer;                                                    // 0x0028   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0029   (0x0007)  MISSED
	SDK_UNDEFINED(16,1810) /* FString */               __um(SlotName);                                             // 0x0030   (0x0010)  
	int32_t                                            SlotIndex;                                                  // 0x0040   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0044   (0x0004)  MISSED
	SDK_UNDEFINED(16,1811) /* FString */               __um(LevelID);                                              // 0x0048   (0x0010)  
	SDK_UNDEFINED(24,1812) /* FText */                 __um(AreaName);                                             // 0x0058   (0x0018)  
	int32_t                                            TeamQueueIndex;                                             // 0x0070   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x0074   (0x0004)  MISSED
	FDateTime                                          CreateTime;                                                 // 0x0078   (0x0008)  
	int32_t                                            ElapsedTime;                                                // 0x0080   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x0084   (0x0004)  MISSED
	TArray<char>                                       TmpCompressedScreenShot;                                    // 0x0088   (0x0010)  
	TArray<FColor>                                     ScreenShot;                                                 // 0x0098   (0x0010)  
	int32_t                                            LeadingLevel;                                               // 0x00A8   (0x0004)  
	int32_t                                            WidthHeightRatio;                                           // 0x00AC   (0x0004)  
	SDK_UNDEFINED(24,1813) /* FText */                 __um(MainQuestChapterName);                                 // 0x00B0   (0x0018)  
	SDK_UNDEFINED(24,1814) /* FText */                 __um(MainQuestOverview);                                    // 0x00C8   (0x0018)  
	bool                                               FinishGame;                                                 // 0x00E0   (0x0001)  
	EPaladinGameDifficulty                             GameDifficulty;                                             // 0x00E1   (0x0001)  
	unsigned char                                      UnknownData05_6[0x6];                                       // 0x00E2   (0x0006)  MISSED
};

/// Class /Script/Pal7.PaladinSceneAtmosphereManager
/// Size: 0x0020 (0x0000B0 - 0x0000D0)
class UPaladinSceneAtmosphereManager : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x00B0   (0x0008)  MISSED
	class UBaseSceneAtmosphereModifier*                CurrentModify;                                              // 0x00B8   (0x0008)  
	TArray<class UBaseSceneAtmosphereModifier*>        ModifyHistory;                                              // 0x00C0   (0x0010)  


	/// Functions
	// Function /Script/Pal7.PaladinSceneAtmosphereManager.RevertModify
	// bool RevertModify();                                                                                                  // [0xed4920] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSceneAtmosphereManager.ApplyModify
	// bool ApplyModify(class UClass* ModifyClass);                                                                          // [0xed47e0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinScrollBox
/// Size: 0x0778 (0x000140 - 0x0008B8)
class UPaladinScrollBox : public UPanelWidget
{ 
public:
	unsigned char                                      UnknownData00_3[0x18];                                      // 0x0140   (0x0018)  MISSED
	FScrollBoxStyle                                    WidgetStyle;                                                // 0x0158   (0x0228)  
	FScrollBarStyle                                    WidgetBarStyle;                                             // 0x0380   (0x04D0)  
	class USlateWidgetStyleAsset*                      Style;                                                      // 0x0850   (0x0008)  
	class USlateWidgetStyleAsset*                      BarStyle;                                                   // 0x0858   (0x0008)  
	SDK_UNDEFINED(1,1815) /* TEnumAsByte<EOrientation> */ __um(Orientation);                                       // 0x0860   (0x0001)  
	ESlateVisibility                                   ScrollBarVisibility;                                        // 0x0861   (0x0001)  
	EConsumeMouseWheel                                 ConsumeMouseWheel;                                          // 0x0862   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x0863   (0x0001)  MISSED
	FVector2D                                          ScrollbarThickness;                                         // 0x0864   (0x0008)  
	FMargin                                            ScrollbarPadding;                                           // 0x086C   (0x0010)  
	bool                                               AlwaysShowScrollbar;                                        // 0x087C   (0x0001)  
	bool                                               AlwaysShowScrollbarTrack;                                   // 0x087D   (0x0001)  
	bool                                               AllowOverscroll;                                            // 0x087E   (0x0001)  
	bool                                               bAnimateWheelScrolling;                                     // 0x087F   (0x0001)  
	EDescendantScrollDestination                       NavigationDestination;                                      // 0x0880   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0881   (0x0003)  MISSED
	float                                              NavigationScrollPadding;                                    // 0x0884   (0x0004)  
	EScrollWhenFocusChanges                            ScrollWhenFocusChanges;                                     // 0x0888   (0x0001)  
	bool                                               bAllowRightClickDragScrolling;                              // 0x0889   (0x0001)  
	unsigned char                                      UnknownData03_5[0x2];                                       // 0x088A   (0x0002)  MISSED
	float                                              WheelScrollMultiplier;                                      // 0x088C   (0x0004)  
	SDK_UNDEFINED(16,1816) /* FMulticastInlineDelegate */ __um(OnUserScrolled);                                    // 0x0890   (0x0010)  
	EPaladinUIKeyControlType                           ControlType;                                                // 0x08A0   (0x0001)  
	unsigned char                                      UnknownData04_6[0x17];                                      // 0x08A1   (0x0017)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinScrollBox.SetWheelScrollMultiplier
	// void SetWheelScrollMultiplier(float NewWheelScrollMultiplier);                                                        // [0xed4f70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinScrollBox.SetScrollOffset
	// void SetScrollOffset(float NewScrollOffset);                                                                          // [0xed4dc0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinScrollBox.SetScrollBarVisibility
	// void SetScrollBarVisibility(ESlateVisibility NewScrollBarVisibility);                                                 // [0xed4d40] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinScrollBox.SetScrollbarThickness
	// void SetScrollbarThickness(FVector2D& NewScrollbarThickness);                                                         // [0xed4ee0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinScrollBox.SetScrollbarPadding
	// void SetScrollbarPadding(FMargin& NewScrollbarPadding);                                                               // [0xed4e40] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinScrollBox.SetOrientation
	// void SetOrientation(TEnumAsByte<EOrientation> NewOrientation);                                                        // [0xed4cc0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinScrollBox.SetConsumeMouseWheel
	// void SetConsumeMouseWheel(EConsumeMouseWheel NewConsumeMouseWheel);                                                   // [0xed4c40] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinScrollBox.SetAnimateWheelScrolling
	// void SetAnimateWheelScrolling(bool bShouldAnimateWheelScrolling);                                                     // [0xed4bb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinScrollBox.SetAlwaysShowScrollbar
	// void SetAlwaysShowScrollbar(bool NewAlwaysShowScrollbar);                                                             // [0xed4b20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinScrollBox.SetAllowOverscroll
	// void SetAllowOverscroll(bool NewAllowOverscroll);                                                                     // [0xed4a90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinScrollBox.ScrollWidgetIntoView
	// void ScrollWidgetIntoView(class UWidget* WidgetToFind, bool AnimateScroll, EDescendantScrollDestination InScrollDestination); // [0xed4990] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinScrollBox.ScrollToStart
	// void ScrollToStart();                                                                                                 // [0xed4970] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinScrollBox.ScrollToEnd
	// void ScrollToEnd();                                                                                                   // [0xed4950] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinScrollBox.GetViewOffsetFraction
	// float GetViewOffsetFraction();                                                                                        // [0xed48f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinScrollBox.GetScrollOffsetOfEnd
	// float GetScrollOffsetOfEnd();                                                                                         // [0xed48c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinScrollBox.GetScrollOffset
	// float GetScrollOffset();                                                                                              // [0xed4890] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinScrollBox.EndInertialScrolling
	// void EndInertialScrolling();                                                                                          // [0xed4870] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinScrollBoxSlot
/// Size: 0x0020 (0x000038 - 0x000058)
class UPaladinScrollBoxSlot : public UPanelSlot
{ 
public:
	FMargin                                            Padding;                                                    // 0x0038   (0x0010)  
	SDK_UNDEFINED(1,1817) /* TEnumAsByte<EHorizontalAlignment> */ __um(HorizontalAlignment);                       // 0x0048   (0x0001)  
	SDK_UNDEFINED(1,1818) /* TEnumAsByte<EVerticalAlignment> */ __um(VerticalAlignment);                           // 0x0049   (0x0001)  
	unsigned char                                      UnknownData00_6[0xE];                                       // 0x004A   (0x000E)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinScrollBoxSlot.SetVerticalAlignment
	// void SetVerticalAlignment(TEnumAsByte<EVerticalAlignment> InVerticalAlignment);                                       // [0xed97c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinScrollBoxSlot.SetPadding
	// void SetPadding(FMargin InPadding);                                                                                   // [0xed96b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinScrollBoxSlot.SetHorizontalAlignment
	// void SetHorizontalAlignment(TEnumAsByte<EHorizontalAlignment> InHorizontalAlignment);                                 // [0xed94d0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinSecondaryAttrSet
/// Size: 0x0280 (0x000030 - 0x0002B0)
class UPaladinSecondaryAttrSet : public UPaladinASBase
{ 
public:
	FGameplayAttributeData                             CritChance;                                                 // 0x0030   (0x0010)  
	FGameplayAttributeData                             CritDamageRate;                                             // 0x0040   (0x0010)  
	FGameplayAttributeData                             CritBreakDamageRate;                                        // 0x0050   (0x0010)  
	FGameplayAttributeData                             JointDamageRate;                                            // 0x0060   (0x0010)  
	FGameplayAttributeData                             PhysicalDamageTakenRatio;                                   // 0x0070   (0x0010)  
	FGameplayAttributeData                             SpellDamageTakenRatio;                                      // 0x0080   (0x0010)  
	FGameplayAttributeData                             EarthDamageTakenRatio;                                      // 0x0090   (0x0010)  
	FGameplayAttributeData                             WaterDamageTakenRatio;                                      // 0x00A0   (0x0010)  
	FGameplayAttributeData                             FireDamageTakenRatio;                                       // 0x00B0   (0x0010)  
	FGameplayAttributeData                             WindDamageTakenRatio;                                       // 0x00C0   (0x0010)  
	FGameplayAttributeData                             LightningDamageTakenRatio;                                  // 0x00D0   (0x0010)  
	FGameplayAttributeData                             MeleeDamageTakenRatio;                                      // 0x00E0   (0x0010)  
	FGameplayAttributeData                             RangedDamageTakenRatio;                                     // 0x00F0   (0x0010)  
	FGameplayAttributeData                             ReduceTargetPhysicalDefRatio;                               // 0x0100   (0x0010)  
	FGameplayAttributeData                             ReduceTargetSpellDefRatio;                                  // 0x0110   (0x0010)  
	FGameplayAttributeData                             PhysicalDamageRatio;                                        // 0x0120   (0x0010)  
	FGameplayAttributeData                             SpellDamageRatio;                                           // 0x0130   (0x0010)  
	FGameplayAttributeData                             EarthDamageRatio;                                           // 0x0140   (0x0010)  
	FGameplayAttributeData                             WaterDamageRatio;                                           // 0x0150   (0x0010)  
	FGameplayAttributeData                             FireDamageRatio;                                            // 0x0160   (0x0010)  
	FGameplayAttributeData                             WindDamageRatio;                                            // 0x0170   (0x0010)  
	FGameplayAttributeData                             LightningDamageRatio;                                       // 0x0180   (0x0010)  
	FGameplayAttributeData                             MeleeDamageRatio;                                           // 0x0190   (0x0010)  
	FGameplayAttributeData                             RangedDamageRatio;                                          // 0x01A0   (0x0010)  
	FGameplayAttributeData                             BreakSpeedRatio;                                            // 0x01B0   (0x0010)  
	FGameplayAttributeData                             BreakDamageRatio;                                           // 0x01C0   (0x0010)  
	FGameplayAttributeData                             JumpDamageRatio;                                            // 0x01D0   (0x0010)  
	FGameplayAttributeData                             BodyDamageTakenRatio;                                       // 0x01E0   (0x0010)  
	FGameplayAttributeData                             LegDamageTakenRatio;                                        // 0x01F0   (0x0010)  
	FGameplayAttributeData                             HeadDamageTakenRatio;                                       // 0x0200   (0x0010)  
	FGameplayAttributeData                             PersonalShield;                                             // 0x0210   (0x0010)  
	FGameplayAttributeData                             DebuffResistChance;                                         // 0x0220   (0x0010)  
	FGameplayAttributeData                             AntiPoison;                                                 // 0x0230   (0x0010)  
	FGameplayAttributeData                             AntiFrozen;                                                 // 0x0240   (0x0010)  
	FGameplayAttributeData                             AntiStun;                                                   // 0x0250   (0x0010)  
	FGameplayAttributeData                             AntiBurn;                                                   // 0x0260   (0x0010)  
	FGameplayAttributeData                             AntiParalysis;                                              // 0x0270   (0x0010)  
	FGameplayAttributeData                             AbnormalStateDamageRatio;                                   // 0x0280   (0x0010)  
	FGameplayAttributeData                             DebuffApplyChanceAppend;                                    // 0x0290   (0x0010)  
	FGameplayAttributeData                             AgainstHitNotDieRatio;                                      // 0x02A0   (0x0010)  
};

/// Class /Script/Pal7.SequenceExecuteActionWithConfirm
/// Size: 0x0018 (0x000028 - 0x000040)
class USequenceExecuteActionWithConfirm : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x40];                                      // 0x0000   (0x0040)  MISSED


	/// Functions
	// Function /Script/Pal7.SequenceExecuteActionWithConfirm.K2_Exec
	// void K2_Exec();                                                                                                       // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.SequenceExecuteActionWithConfirm.FinishExec
	// void FinishExec();                                                                                                    // [0xe32f90] Native|Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/Pal7.PaladinSequenceActor
/// Size: 0x0010 (0x000220 - 0x000230)
class APaladinSequenceActor : public AActor
{ 
public:
	FPaladinLevelSequence                              SequenceInfo;                                               // 0x0220   (0x0008)  
	FName                                              SequenceName;                                               // 0x0228   (0x0008)  
};

/// Class /Script/Pal7.PaladinSequenceBlueprintLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladinSequenceBlueprintLibrary : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinSequenceBlueprintLibrary.UnlockMemorySequence
	// void UnlockMemorySequence(class UObject* WorldContextObject, FName& InCGName);                                        // [0xeda250] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceBlueprintLibrary.SetNextSequenceCameraLocation
	// void SetNextSequenceCameraLocation(FVector InLoc, float BoostFactor, bool bOverrideLocation, float OverrideDuration); // [0xed9550] Final|Native|Static|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceBlueprintLibrary.GetUnlockMemorySequences
	// void GetUnlockMemorySequences(class UObject* WorldContextObject, TArray<FName>& OutCGNames);                          // [0xed80f0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceBlueprintLibrary.GetSequenceManagerWithoutWorld
	// class UPaladinSequenceManager* GetSequenceManagerWithoutWorld();                                                      // [0xed8030] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinSequenceBlueprintLibrary.GetSequenceManager
	// class UPaladinSequenceManager* GetSequenceManager(class UObject* WorldContextObject);                                 // [0xed7fb0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinSequenceBlueprintLibrary.GetActorRandomFaceAnimation
	// TWeakObjectPtr<UAnimSequenceBase*> GetActorRandomFaceAnimation(FName InActorID);                                      // [0xed7a40] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceBlueprintLibrary.ForceShowActorMaterials
	// void ForceShowActorMaterials(class AActor* InActor, float ForceDuration);                                             // [0xed7980] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinSequenceCharacter
/// Size: 0x0000 (0x0004C0 - 0x0004C0)
class APaladinSequenceCharacter : public ACharacter
{ 
public:
};

/// Class /Script/Pal7.PaladinSequenceConditionPlayer
/// Size: 0x0048 (0x000220 - 0x000268)
class APaladinSequenceConditionPlayer : public AActor
{ 
public:
	class UPaladinDynamicMonitorComponent*             DynamicMontitorComponent;                                   // 0x0220   (0x0008)  
	class APaladinSequenceActor*                       TargetSequenceActor;                                        // 0x0228   (0x0008)  
	bool                                               bEnvironmentTagOption : 1;                                  // 0x0230:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0231   (0x0003)  MISSED
	FGameplayTag                                       EnvironmentTag;                                             // 0x0234   (0x0008)  
	bool                                               bQuestTagOption : 1;                                        // 0x023C:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x023D   (0x0003)  MISSED
	FGameplayTag                                       QuestTag;                                                   // 0x0240   (0x0008)  
	bool                                               bQuestOption : 1;                                           // 0x0248:0 (0x0001)  
	EPaladinQuestCheckWay                              QuestCheckWay;                                              // 0x0249   (0x0001)  
	unsigned char                                      UnknownData02_5[0x2];                                       // 0x024A   (0x0002)  MISSED
	FName                                              QuestInstanceID;                                            // 0x024C   (0x0008)  
	FName                                              MinPID;                                                     // 0x0254   (0x0008)  
	FName                                              MaxPID;                                                     // 0x025C   (0x0008)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x0264   (0x0004)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinSequenceConditionPlayer.OnReceiveQuest
	// void OnReceiveQuest();                                                                                                // [0xed89f0] Final|Native|Protected 
	// Function /Script/Pal7.PaladinSequenceConditionPlayer.OnPIDChanged
	// void OnPIDChanged(int32_t PIDJudge, FName InQuestInstanceID, FName InQuestID, EQuestCategory InCategory);             // [0xed8890] Final|Native|Protected 
	// Function /Script/Pal7.PaladinSequenceConditionPlayer.OnPaladinQuestTagChanged
	// void OnPaladinQuestTagChanged();                                                                                      // [0xed89d0] Final|Native|Protected 
	// Function /Script/Pal7.PaladinSequenceConditionPlayer.OnMontitorInit
	// void OnMontitorInit(bool EnvTagExist, bool QuestTagExist, bool QuestInvalidTagExist, int32_t PIDJudge, bool ReceiveQuest, bool CompleteQuest); // [0xed86b0] Final|Native|Protected 
	// Function /Script/Pal7.PaladinSequenceConditionPlayer.OnGameStartPostEvent
	// void OnGameStartPostEvent();                                                                                          // [0xed8600] Final|Native|Private 
	// Function /Script/Pal7.PaladinSequenceConditionPlayer.OnEnvironmentTagChanged
	// void OnEnvironmentTagChanged();                                                                                       // [0xed85e0] Final|Native|Protected 
	// Function /Script/Pal7.PaladinSequenceConditionPlayer.OnCompleteQuest
	// void OnCompleteQuest(FName InQuestInstanceID, FName InQuestID, EQuestCategory InCategory);                            // [0xed84e0] Final|Native|Protected 
};

/// Class /Script/Pal7.PaladinSequenceDataComponent
/// Size: 0x0020 (0x0000B0 - 0x0000D0)
class UPaladinSequenceDataComponent : public UActorComponent
{ 
public:
	bool                                               SequenceIsPlaying;                                          // 0x00B0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x00B1   (0x0003)  MISSED
	FVector2D                                          CharacterLookat;                                            // 0x00B4   (0x0008)  
	FVector2D                                          HeadLookat;                                                 // 0x00BC   (0x0008)  
	FVector2D                                          EyesLookat;                                                 // 0x00C4   (0x0008)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x00CC   (0x0004)  MISSED
};

/// Struct /Script/Pal7.PaladinAfterSequenceActionInfo
/// Size: 0x0048 (0x000000 - 0x000048)
struct FPaladinAfterSequenceActionInfo
{ 
	EPaladinAfterSequenceActionType                    ActionType;                                                 // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	FName                                              QuestID;                                                    // 0x0004   (0x0008)  
	FGameplayTag                                       Tag;                                                        // 0x000C   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	class APaladinSequenceActor*                       NextSequence;                                               // 0x0018   (0x0008)  
	class AActor*                                      CustomActor;                                                // 0x0020   (0x0008)  
	FName                                              CustomFunction;                                             // 0x0028   (0x0008)  
	class AActor*                                      TargetActor;                                                // 0x0030   (0x0008)  
	FName                                              ArchiveHelperRowID;                                         // 0x0038   (0x0008)  
	class USequenceExecuteActionWithConfirm*           BlockExecuteAction;                                         // 0x0040   (0x0008)  
};

/// Struct /Script/Pal7.PaladinAfterSequenceAction
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPaladinAfterSequenceAction
{ 
	TArray<FPaladinAfterSequenceActionInfo>            Actions;                                                    // 0x0000   (0x0010)  
};

/// Class /Script/Pal7.PaladinSequenceInfo
/// Size: 0x0138 (0x000028 - 0x000160)
class UPaladinSequenceInfo : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x28];                                      // 0x0000   (0x0028)  MISSED
	SDK_UNDEFINED(40,1819) /* TWeakObjectPtr<ULevelSequence*> */ __um(Sequence);                                   // 0x0028   (0x0028)  
	FPaladinMoveSceneSequencePlaybackSettings          PaladinPlaybackSettings;                                    // 0x0050   (0x00D0)  
	TArray<FName>                                      HidingActors;                                               // 0x0120   (0x0010)  
	FPaladinAfterSequenceAction                        BeforeSequenceAction;                                       // 0x0130   (0x0010)  
	FPaladinAfterSequenceAction                        AfterSequenceAction;                                        // 0x0140   (0x0010)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0150   (0x0010)  MISSED
};

/// Class /Script/Pal7.PaladinPlaySequenceNode
/// Size: 0x0180 (0x000030 - 0x0001B0)
class UPaladinPlaySequenceNode : public UBlueprintAsyncActionBase
{ 
public:
	unsigned char                                      UnknownData00_3[0x150];                                     // 0x0030   (0x0150)  MISSED
	SDK_UNDEFINED(16,1820) /* FMulticastInlineDelegate */ __um(OnInstanceStart);                                   // 0x0180   (0x0010)  
	SDK_UNDEFINED(16,1821) /* FMulticastInlineDelegate */ __um(OnInstanceStop);                                    // 0x0190   (0x0010)  
	SDK_UNDEFINED(16,1822) /* FMulticastInlineDelegate */ __um(OnIntstaceInterrupt);                               // 0x01A0   (0x0010)  


	/// Functions
	// Function /Script/Pal7.PaladinPlaySequenceNode.PlayPaladinSequenceInfoInBlueprint
	// class UPaladinPlaySequenceNode* PlayPaladinSequenceInfoInBlueprint(class UObject* WorldContextObject, class UPaladinSequenceInfo* Info, class AActor* InSpecifyOuter, bool bInAsyncLoad); // [0xed9000] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinPlaySequenceNode.PlayPaladinSequenceInBlueprint
	// class UPaladinPlaySequenceNode* PlayPaladinSequenceInBlueprint(class UObject* WorldContextObject, TWeakObjectPtr<ULevelSequence*> InSequenceSoft, FPaladinMoveSceneSequencePlaybackSettings& InPaladinPlaybackSettings, class AActor* InSpecifyOuter, bool bInAsyncLoad); // [0xed8cc0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
};

/// Struct /Script/Pal7.PaladinSequenceInstance
/// Size: 0x01C0 (0x000000 - 0x0001C0)
struct FPaladinSequenceInstance
{ 
	SDK_UNDEFINED(16,1823) /* FMulticastInlineDelegate */ __um(OnInstanceStart);                                   // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,1824) /* FMulticastInlineDelegate */ __um(OnInstanceStop);                                    // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,1825) /* FMulticastInlineDelegate */ __um(OnIntstaceInterrupt);                               // 0x0020   (0x0010)  
	FGuid                                              InstanceID;                                                 // 0x0030   (0x0010)  
	FPaladinMoveSceneSequencePlaybackSettings          PlayBackSettings;                                           // 0x0040   (0x00D0)  
	class UPaladinSequencePresetAsset*                 PresetAsset;                                                // 0x0110   (0x0008)  
	int32_t                                            QueueNumber;                                                // 0x0118   (0x0004)  
	ESequenceInstanceState                             InstanceState;                                              // 0x011C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x011D   (0x0003)  MISSED
	class UPaladinSequenceInfo*                        SequenceInfo;                                               // 0x0120   (0x0008)  
	SDK_UNDEFINED(40,1826) /* TWeakObjectPtr<ULevelSequence*> */ __um(SequenceSoftPtr);                            // 0x0128   (0x0028)  
	class AActor*                                      SpecifyOuter;                                               // 0x0150   (0x0008)  
	bool                                               bCustomOuter;                                               // 0x0158   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0159   (0x0007)  MISSED
	class ULevelSequence*                              LevelSequence;                                              // 0x0160   (0x0008)  
	class UPaladinLevelSequencePlayer*                 SeqPlayer;                                                  // 0x0168   (0x0008)  
	class APaladinLevelSequenceActor*                  LevelSequenceActor;                                         // 0x0170   (0x0008)  
	FGuid                                              NextLoadInstance;                                           // 0x0178   (0x0010)  
	bool                                               bInterrupted;                                               // 0x0188   (0x0001)  
	ESequencePauseInitiator                            PauseInitiator;                                             // 0x0189   (0x0001)  
	bool                                               bAsyncLoad;                                                 // 0x018A   (0x0001)  
	unsigned char                                      UnknownData02_5[0x5];                                       // 0x018B   (0x0005)  MISSED
	TArray<FPaladinAfterSequenceActionInfo>            BeforeActions;                                              // 0x0190   (0x0010)  
	TArray<FPaladinAfterSequenceActionInfo>            AfterActions;                                               // 0x01A0   (0x0010)  
	bool                                               bIgnoreAfterAction : 1;                                     // 0x01B0:0 (0x0001)  
	unsigned char                                      UnknownData03_6[0xF];                                       // 0x01B1   (0x000F)  MISSED
};

/// Class /Script/Pal7.PaladinSequenceManager
/// Size: 0x02F0 (0x0000B0 - 0x0003A0)
class UPaladinSequenceManager : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x00B0   (0x0008)  MISSED
	class UClass*                                      LoadingUIClass;                                             // 0x00B8   (0x0008)  
	class UUserWidget*                                 LoadingUI;                                                  // 0x00C0   (0x0008)  
	unsigned char                                      UnknownData01_5[0x128];                                     // 0x00C8   (0x0128)  MISSED
	FPaladinAfterSequenceAction                        BeforeSequenceActions;                                      // 0x01F0   (0x0010)  
	FPaladinAfterSequenceAction                        AfterSequenceActions;                                       // 0x0200   (0x0010)  
	class ULevelSequencePlayer*                        LocalSequencePlayer;                                        // 0x0210   (0x0008)  
	class APaladinLevelSequenceActor*                  LocalSequenceActor;                                         // 0x0218   (0x0008)  
	unsigned char                                      UnknownData02_5[0x58];                                      // 0x0220   (0x0058)  MISSED
	TArray<FPaladinSequenceInstance>                   SequenceInstances;                                          // 0x0278   (0x0010)  
	TArray<class UPaladinSequencePresetAsset*>         PresetAssets;                                               // 0x0288   (0x0010)  
	SDK_UNDEFINED(80,1827) /* TMap<FSoftObjectPath, ULevelSequence*> */ __um(LoadedSequenceMap);                   // 0x0298   (0x0050)  
	SDK_UNDEFINED(16,1828) /* FMulticastInlineDelegate */ __um(OnSubtitleShowSignature);                           // 0x02E8   (0x0010)  
	SDK_UNDEFINED(16,1829) /* FMulticastInlineDelegate */ __um(OnSubtitleHideSignature);                           // 0x02F8   (0x0010)  
	SDK_UNDEFINED(16,1830) /* FMulticastInlineDelegate */ __um(OnSequencePauseSignature);                          // 0x0308   (0x0010)  
	SDK_UNDEFINED(16,1831) /* FMulticastInlineDelegate */ __um(OnSequenceSkipStateSignature);                      // 0x0318   (0x0010)  
	SDK_UNDEFINED(16,1832) /* FMulticastInlineDelegate */ __um(OnSequenceStartSignature);                          // 0x0328   (0x0010)  
	SDK_UNDEFINED(16,1833) /* FMulticastInlineDelegate */ __um(OnSequenceStopSignature);                           // 0x0338   (0x0010)  
	unsigned char                                      UnknownData03_5[0x30];                                      // 0x0348   (0x0030)  MISSED
	class UPaladinSequencePresetAsset*                 DefaultPresetAsset;                                         // 0x0378   (0x0008)  
	class UPaladinAction*                              SkipAction;                                                 // 0x0380   (0x0008)  
	class UDataTable*                                  SequenceConfigTable;                                        // 0x0388   (0x0008)  
	ESequencePlaySpeed                                 SequencePlaySpeed;                                          // 0x0390   (0x0001)  
	unsigned char                                      UnknownData04_6[0xF];                                       // 0x0391   (0x000F)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinSequenceManager.StopTargetSequence
	// bool StopTargetSequence(FGuid SQInsID, bool bIgnoreAfterActions);                                                     // [0xeda170] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.StopCurSequence
	// void StopCurSequence();                                                                                               // [0xeda150] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.SkipSequenceInstances
	// void SkipSequenceInstances(class UPaladinSequencePresetAsset* Preset);                                                // [0xeda0d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.SkipSequeceInputEvent
	// void SkipSequeceInputEvent(TEnumAsByte<EInputEvent> InputEvent, EPaladinKeyEventName EventNameEnum, float CurTickHoldSpan, float PreTickHoldSpan, float KeyMappingValue); // [0xed9f40] Final|Native|Private 
	// Function /Script/Pal7.PaladinSequenceManager.SkipCurSequence
	// void SkipCurSequence(bool bByPlayer);                                                                                 // [0xed9eb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.SimplePlayPaladinSoftSequence
	// FGuid SimplePlayPaladinSoftSequence(TWeakObjectPtr<ULevelSequence*> Sequence, FPaladinMoveSceneSequencePlaybackSettings& PaladinPlaybackSettings, class AActor* SpecifyOuter, bool bAsyncLoad); // [0xed9ba0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.SimplePlayPaladinSequence
	// FGuid SimplePlayPaladinSequence(class ULevelSequence* Sequence, FPaladinMoveSceneSequencePlaybackSettings& PaladinPlaybackSettings, class AActor* SpecifyOuter); // [0xed9950] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.ShowSubtitile
	// void ShowSubtitile(FPaladinSequenceSubtitleInfo SubtitleInfo);                                                        // [0xed9840] Final|Native|Public  
	// Function /Script/Pal7.PaladinSequenceManager.SetSequencePlaySpeed
	// void SetSequencePlaySpeed(ESequencePlaySpeed Speed);                                                                  // [0xed9740] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.SequenceIsPlaying
	// bool SequenceIsPlaying();                                                                                             // [0xed94b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.SequenceIsPausing
	// bool SequenceIsPausing();                                                                                             // [0xed9490] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.ResumeStartWithLastDialogue
	// void ResumeStartWithLastDialogue();                                                                                   // [0xed9470] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.ResumeSequenceInstances
	// void ResumeSequenceInstances(class UPaladinSequencePresetAsset* Preset);                                              // [0xed93f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.ResumeSequenceInstance
	// void ResumeSequenceInstance(FGuid InstanceID);                                                                        // [0xed9360] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.ResumeCurSequence
	// void ResumeCurSequence(bool byUser);                                                                                  // [0xed92d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.ReleaseRayTracingRenderGC
	// void ReleaseRayTracingRenderGC(FName LockKey);                                                                        // [0xed9250] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.ReleaseLoadedSequence
	// void ReleaseLoadedSequence(TWeakObjectPtr<ULevelSequence*> InSoftSequence);                                           // [0xed9150] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.RefreshRayTracingRenderGC
	// void RefreshRayTracingRenderGC();                                                                                     // [0xed9130] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.PlayPaladinSequence
	// FGuid PlayPaladinSequence(class UPaladinSequenceInfo* Info, class AActor* SpecifyOuter, bool bAsyncLoad);             // [0xed8bb0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.PauseSequenceInstances
	// void PauseSequenceInstances(class UPaladinSequencePresetAsset* Preset);                                               // [0xed8b30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.PauseSequenceInstance
	// void PauseSequenceInstance(FGuid InstanceID);                                                                         // [0xed8aa0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.PauseCurSequence
	// void PauseCurSequence(bool byUser);                                                                                   // [0xed8a10] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.OnInstanceStopped
	// void OnInstanceStopped(FGuid InInstID);                                                                               // [0xed8620] Final|Native|Private|HasDefaults 
	// Function /Script/Pal7.PaladinSequenceManager.LockRayTracingRenderGC
	// void LockRayTracingRenderGC(FName LockKey);                                                                           // [0xed8460] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.LoadSequenceAsync
	// void LoadSequenceAsync(TWeakObjectPtr<ULevelSequence*> InSoftSequence);                                               // [0xed8360] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.LoadInstSequenceAsync
	// void LoadInstSequenceAsync(FPaladinSequenceInstance& Inst, bool bCallback);                                           // [0xed81f0] Final|Native|Private|HasOutParms 
	// Function /Script/Pal7.PaladinSequenceManager.HideSubtitile
	// void HideSubtitile();                                                                                                 // [0xed81d0] Final|Native|Public  
	// Function /Script/Pal7.PaladinSequenceManager.GetSQPlayed
	// void GetSQPlayed(TSet<FName>& SQPlayed);                                                                              // [0xed7ca0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinSequenceManager.GetSequencePlayer
	// class UPaladinLevelSequencePlayer* GetSequencePlayer(class UPaladinSequencePresetAsset* Preset);                      // [0xed8060] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinSequenceManager.GetSequenceInstance
	// void GetSequenceInstance(FGuid InstID, FPaladinSequenceInstance& OutInstance);                                        // [0xed7e30] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.GetQuestSequencePlayer
	// class UPaladinLevelSequencePlayer* GetQuestSequencePlayer();                                                          // [0xed7c70] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinSequenceManager.GetMainChannelSequencePlayer
	// class UPaladinLevelSequencePlayer* GetMainChannelSequencePlayer();                                                    // [0xed7c70] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinSequenceManager.GetMainChannelPlayingSequencePlayer
	// class UPaladinLevelSequencePlayer* GetMainChannelPlayingSequencePlayer();                                             // [0xed7c40] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinSequenceManager.GetIsSkiping
	// bool GetIsSkiping();                                                                                                  // [0xed7c10] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinSequenceManager.GetFadeTime
	// float GetFadeTime();                                                                                                  // [0xed7be0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinSequenceManager.GetCurrentSQState
	// void GetCurrentSQState(bool& bCanSkip, bool& bByMemory);                                                              // [0xed7b00] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinSequenceManager.CanShowSkipUI
	// bool CanShowSkipUI();                                                                                                 // [0xed7950] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.CanShowResumeUI
	// bool CanShowResumeUI();                                                                                               // [0xed7920] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.CanShowPauseUI
	// bool CanShowPauseUI();                                                                                                // [0xed78f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSequenceManager.CanChangeSpeed
	// bool CanChangeSpeed();                                                                                                // [0xed78c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Pal7.PaladinSequenceNearClipPlaneActor
/// Size: 0x0008 (0x000220 - 0x000228)
class APaladinSequenceNearClipPlaneActor : public AActor
{ 
public:
	float                                              NearClipPlane;                                              // 0x0220   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0224   (0x0004)  MISSED
};

/// Class /Script/Pal7.PaladinSequencePlayerInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladinSequencePlayerInterface : public UInterface
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinSequencePlayerInterface.GetInstanceID
	// FGuid GetInstanceID();                                                                                                // [0xede710] Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Script/Pal7.PaladinSequencePlayerInterface.EnableFadeOutCamera
	// void EnableFadeOutCamera(bool bInEnable);                                                                             // [0xeddff0] Native|Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/Pal7.PaladinSequencePresetAsset
/// Size: 0x0020 (0x000030 - 0x000050)
class UPaladinSequencePresetAsset : public UPrimaryDataAsset
{ 
public:
	FName                                              PresetName;                                                 // 0x0030   (0x0008)  
	int32_t                                            Priority;                                                   // 0x0038   (0x0004)  
	bool                                               bInMainChannel;                                             // 0x003C   (0x0001)  
	bool                                               bCanSkip;                                                   // 0x003D   (0x0001)  
	bool                                               bCanPause;                                                  // 0x003E   (0x0001)  
	bool                                               bCanChangeSlomo;                                            // 0x003F   (0x0001)  
	int32_t                                            InterruptPriority;                                          // 0x0040   (0x0004)  
	int32_t                                            PausePriority;                                              // 0x0044   (0x0004)  
	ESequencePresetHandleType                          HandleType;                                                 // 0x0048   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0049   (0x0007)  MISSED
};

/// Class /Script/Pal7.PaladinSettingsManager
/// Size: 0x0170 (0x000028 - 0x000198)
class UPaladinSettingsManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x198];                                     // 0x0000   (0x0198)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinSettingsManager.OnControllerInputEvent
	// void OnControllerInputEvent(TEnumAsByte<EInputEvent> InputEvent, EPaladinKeyEventName EventNameEnum, float CurTickHoldSpan, float PreTickHoldSpan, float KeyMappingValue); // [0xedee20] Final|Native|Public  
};

/// Class /Script/Pal7.PaladinSkillAttrSet
/// Size: 0x0020 (0x000030 - 0x000050)
class UPaladinSkillAttrSet : public UPaladinASBase
{ 
public:
	FGameplayAttributeData                             SkillDamageRate;                                            // 0x0030   (0x0010)  
	FGameplayAttributeData                             SkillCritExtraRate;                                         // 0x0040   (0x0010)  
};

/// Class /Script/Pal7.PaladinSlider
/// Size: 0x0010 (0x0004F8 - 0x000508)
class UPaladinSlider : public USlider
{ 
public:
	bool                                               bPlayValueChangeSound;                                      // 0x04F8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x04F9   (0x0007)  MISSED
	class USoundAtomCue*                               CustomValueChangedSound;                                    // 0x0500   (0x0008)  


	/// Functions
	// Function /Script/Pal7.PaladinSlider.SetValue
	// void SetValue(float InValue, bool bWithSound);                                                                        // [0xedf9d0] Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinSnapshotAudioVolume
/// Size: 0x0028 (0x000258 - 0x000280)
class APaladinSnapshotAudioVolume : public AVolume
{ 
public:
	int32_t                                            MilliSeconds;                                               // 0x0258   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x025C   (0x0004)  MISSED
	SDK_UNDEFINED(16,1834) /* FString */               __um(InSnapshotName);                                       // 0x0260   (0x0010)  
	SDK_UNDEFINED(16,1835) /* FString */               __um(OutSnapshotName);                                      // 0x0270   (0x0010)  


	/// Functions
	// Function /Script/Pal7.PaladinSnapshotAudioVolume.ReceiveSwitchHeroEvent
	// void ReceiveSwitchHeroEvent(class APaladinHero* From, class APaladinHero* to);                                        // [0xedf1b0] Final|Native|Public  
};

/// Class /Script/Pal7.PaladinSpawnerBase
/// Size: 0x0018 (0x000220 - 0x000238)
class APaladinSpawnerBase : public AActor
{ 
public:
	class UDynamicSpawnActorComponent*                 SpawnerComponent;                                           // 0x0220   (0x0008)  
	class UPaladinDynamicMonitorComponent*             MonitorComponent;                                           // 0x0228   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0230   (0x0008)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinSpawnerBase.OnGotItem
	// void OnGotItem();                                                                                                     // [0xedefd0] Final|Native|Private 
	// Function /Script/Pal7.PaladinSpawnerBase.Monitor_QuestTagExist
	// void Monitor_QuestTagExist();                                                                                         // [0xedeae0] Final|Native|Private 
	// Function /Script/Pal7.PaladinSpawnerBase.Monitor_QuestPIDChanged
	// void Monitor_QuestPIDChanged(int32_t PIDJudge, FName InQuestInstanceID, FName InQuestID, EQuestCategory InCategory);  // [0xedece0] Final|Native|Private 
	// Function /Script/Pal7.PaladinSpawnerBase.Monitor_QuestInvalidTagExist
	// void Monitor_QuestInvalidTagExist();                                                                                  // [0xedeae0] Final|Native|Private 
	// Function /Script/Pal7.PaladinSpawnerBase.Monitor_QuestBegin
	// void Monitor_QuestBegin();                                                                                            // [0xedeae0] Final|Native|Private 
	// Function /Script/Pal7.PaladinSpawnerBase.Monitor_Init
	// void Monitor_Init(bool EnvTagExist, bool QuestTagExist, bool QuestInvalidTagExist, int32_t PIDJudge, bool ReceiveQuest, bool CompleteQuest); // [0xedeb00] Final|Native|Private 
	// Function /Script/Pal7.PaladinSpawnerBase.Monitor_EnvTagExist
	// void Monitor_EnvTagExist();                                                                                           // [0xedeae0] Final|Native|Private 
};

/// Class /Script/Pal7.PaladinSphereAudioVolume
/// Size: 0x0048 (0x000228 - 0x000270)
class APaladinSphereAudioVolume : public ATriggerSphere
{ 
public:
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x0228   (0x0008)  MISSED
	class APaladinAtomSound*                           AgentSound;                                                 // 0x0230   (0x0008)  
	bool                                               bIsLevelBGMVolume;                                          // 0x0238   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0239   (0x0007)  MISSED
	FAtomSelectorLabel                                 AgentSelectorLabel;                                         // 0x0240   (0x0020)  
	SDK_UNDEFINED(16,1836) /* FString */               __um(AudioVolumeCategory);                                  // 0x0260   (0x0010)  


	/// Functions
	// Function /Script/Pal7.PaladinSphereAudioVolume.EndOverlap
	// void EndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // [0xe61820] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSphereAudioVolume.BeginOverlap
	// void BeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0xe612b0] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinSpringArmComponent
/// Size: 0x0030 (0x000280 - 0x0002B0)
class UPaladinSpringArmComponent : public USpringArmComponent
{ 
public:
	unsigned char                                      UnknownData00_3[0xC];                                       // 0x0280   (0x000C)  MISSED
	float                                              BaseTargetArmLength;                                        // 0x028C   (0x0004)  
	FVector                                            BaseSocketOffset;                                           // 0x0290   (0x000C)  
	float                                              CollisionAdjustZ;                                           // 0x029C   (0x0004)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x02A0   (0x0010)  MISSED
};

/// Class /Script/Pal7.PaladinLeveStreamingManagerComponent
/// Size: 0x0218 (0x0000B0 - 0x0002C8)
class UPaladinLeveStreamingManagerComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_3[0x28];                                      // 0x00B0   (0x0028)  MISSED
	FName                                              AlwaysLoadedLevelID;                                        // 0x00D8   (0x0008)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x00E0   (0x0010)  MISSED
	class UDataTable*                                  AsyncLooadingLimitTable;                                    // 0x00F0   (0x0008)  
	float                                              ReleaseLevelMaxPercent;                                     // 0x00F8   (0x0004)  
	float                                              LoadLevelMaxPercent;                                        // 0x00FC   (0x0004)  
	float                                              TriggerLoadLevelMaxPercent;                                 // 0x0100   (0x0004)  
	float                                              LastLoadLevelMaxPercent;                                    // 0x0104   (0x0004)  
	FGameplayTag                                       LastLoadTag;                                                // 0x0108   (0x0008)  
	unsigned char                                      UnknownData02_5[0x80];                                      // 0x0110   (0x0080)  MISSED
	SDK_UNDEFINED(16,1837) /* FMulticastInlineDelegate */ __um(OnStreamingLevelWaitInitHerosDelegate);             // 0x0190   (0x0010)  
	SDK_UNDEFINED(16,1838) /* FMulticastInlineDelegate */ __um(OnLevelLoadingDone);                                // 0x01A0   (0x0010)  
	SDK_UNDEFINED(16,1839) /* FMulticastInlineDelegate */ __um(OnBeforeLevelLoading);                              // 0x01B0   (0x0010)  
	SDK_UNDEFINED(16,1840) /* FMulticastInlineDelegate */ __um(OnCurrentLevelReady);                               // 0x01C0   (0x0010)  
	SDK_UNDEFINED(16,1841) /* FMulticastInlineDelegate */ __um(OnLevePrepareLevelReady);                           // 0x01D0   (0x0010)  
	unsigned char                                      UnknownData03_6[0xE8];                                      // 0x01E0   (0x00E8)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.ToggleInAlwaysLoadLevel
	// void ToggleInAlwaysLoadLevel(bool bin);                                                                               // [0xedfaa0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.SetStartTag
	// void SetStartTag(FName InStartTag);                                                                                   // [0xedf950] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.SetMapVisibleByTags
	// void SetMapVisibleByTags(EPaladinLevelType LevelType, FGameplayTagContainer Tags, bool bShouldBeVisible, bool bConsiderCondition, bool bShouldUnload); // [0xedf760] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.SetMapLoadedByTags
	// void SetMapLoadedByTags(EPaladinLevelType LevelType, FGameplayTagContainer Tags, bool bShouldBeLoaded);               // [0xedf610] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.SetCanDisplayLoadingWidget
	// void SetCanDisplayLoadingWidget(bool IsDisplay);                                                                      // [0xedf580] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.RestoreAllStreamingVolume
	// void RestoreAllStreamingVolume();                                                                                     // [0xedf560] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.ResetBossChallengeLevel
	// bool ResetBossChallengeLevel();                                                                                       // [0xedf530] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.ReleasePreparaeLevel
	// void ReleasePreparaeLevel();                                                                                          // [0xedf510] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.ReleaseCurrentLevel
	// void ReleaseCurrentLevel();                                                                                           // [0xedf4f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.RegisterMapReadyCallback
	// bool RegisterMapReadyCallback(FGameplayTagContainer Tags, EPaladinLevelType LevelType, FDelegateProperty& Callback);  // [0xedf370] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.RegisterLevelReadyCallback
	// bool RegisterLevelReadyCallback(EPaladinLevelType LevelType, FDelegateProperty& Callback);                            // [0xedf270] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.PrepareLevel
	// bool PrepareLevel(FName ID, FName InStartTag);                                                                        // [0xedf0f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.OnQuestEnd
	// void OnQuestEnd(FName QuestInstanceID, FName QuestID, EQuestCategory InQuestCategory);                                // [0xedeff0] Final|Native|Public  
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.OnEnterBossChanllengeFinish
	// void OnEnterBossChanllengeFinish();                                                                                   // [0xedefb0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.LoadAlwaysLevel
	// void LoadAlwaysLevel();                                                                                               // [0xedeac0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.IsWaitingLeveloading
	// bool IsWaitingLeveloading();                                                                                          // [0xedea90] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.IsInTimeBackLevel
	// bool IsInTimeBackLevel();                                                                                             // [0xedea70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.IsInBossChallengeLevel
	// bool IsInBossChallengeLevel();                                                                                        // [0xedea50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.IsAllLevelsWithTagEqual
	// bool IsAllLevelsWithTagEqual(EPaladinLevelType LevelType, FGameplayTagContainer Tags, bool bIsVisibled);              // [0xede900] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.GetStartTag
	// FName GetStartTag();                                                                                                  // [0xede8e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.GetPrepareLevelIsReady
	// bool GetPrepareLevelIsReady();                                                                                        // [0xede8b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.GetPrepareLevelID
	// FName GetPrepareLevelID();                                                                                            // [0xe9bd40] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.GetMapLoadedAndVisible
	// void GetMapLoadedAndVisible(EPaladinLevelType LevelType, FGameplayTag TagToCheck, bool& IsLoaded, bool& IsVisible);   // [0xede750] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.GetLevelID
	// FName GetLevelID();                                                                                                   // [0xea6630] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.GetCurrentLoadingPercent
	// float GetCurrentLoadingPercent();                                                                                     // [0xede6e0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.GetCurrentLevelIsReady
	// bool GetCurrentLevelIsReady(bool bCareaboutSubLevelstreaming);                                                        // [0xede650] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.GetCleanMapsFinish
	// bool GetCleanMapsFinish();                                                                                            // [0xede620] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.GetCanDisplayLoadingWidget
	// bool GetCanDisplayLoadingWidget();                                                                                    // [0xede5f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.ForceOverrideStreamingVolumesByPoint
	// void ForceOverrideStreamingVolumesByPoint(FVector Point, bool bVisible);                                              // [0xede510] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.ForceOverrideStreamingVolume
	// void ForceOverrideStreamingVolume(class ALevelStreamingVolume* Volume, bool bVisible);                                // [0xede440] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.ExitTimeBackLevel
	// bool ExitTimeBackLevel();                                                                                             // [0xede410] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.ExitBossChallengeLevel
	// bool ExitBossChallengeLevel();                                                                                        // [0xede3e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.EnterTimeBackLevel
	// bool EnterTimeBackLevel(FName ID, FName InStartTag);                                                                  // [0xede320] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.EnterLevel
	// bool EnterLevel(FName ID, bool PrepareCurrent, FName InStartTag, bool bShouldDisplayLoadingWidget, bool bFromLoadGame, bool bNewGame); // [0xede140] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.EnterBossChallengeLevel
	// bool EnterBossChallengeLevel(FName ID, bool bFromBossTestTrans);                                                      // [0xede080] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinLeveStreamingManagerComponent.DisplayReLoadChildMapWidget
	// void DisplayReLoadChildMapWidget(bool IsDisplay, float Duration);                                                     // [0xeddf20] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinSuit
/// Size: 0x0008 (0x000290 - 0x000298)
class APaladinSuit : public APaladinEquipment
{ 
public:
	class USkeletalMesh*                               SuitSKMesh;                                                 // 0x0290   (0x0008)  
};

/// Class /Script/Pal7.PaladinSuperHeroManagerComponent
/// Size: 0x0040 (0x0000B0 - 0x0000F0)
class UPaladinSuperHeroManagerComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x40];                                      // 0x00B0   (0x0040)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinSuperHeroManagerComponent.SummonSuperHero
	// void SummonSuperHero();                                                                                               // [0xee5030] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSuperHeroManagerComponent.SummonEnd
	// void SummonEnd();                                                                                                     // [0xee5010] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSuperHeroManagerComponent.InitSummon
	// void InitSummon(class UPaladinLevelSequencePlayer* Player, class UClass* SuperHeroClass);                             // [0xee4710] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSuperHeroManagerComponent.HeroBack
	// void HeroBack();                                                                                                      // [0xee46f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSuperHeroManagerComponent.GetPaladinSuperHeroState
	// EPaladinSuperHeroState GetPaladinSuperHeroState();                                                                    // [0xee4580] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSuperHeroManagerComponent.ChangeLevelSequencePlayer
	// void ChangeLevelSequencePlayer(class UPaladinLevelSequencePlayer* Player);                                            // [0xee43e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinSuperHeroManagerComponent.AppearanceShowEndAndBeginFight
	// void AppearanceShowEndAndBeginFight();                                                                                // [0xee4340] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinTargetActor_MultiOverlapBase
/// Size: 0x0010 (0x000340 - 0x000350)
class APaladinTargetActor_MultiOverlapBase : public AGameplayAbilityTargetActor
{ 
public:
	ETraceTypeQuery                                    TraceChannel;                                               // 0x0340   (0x0001)  
	unsigned char                                      UnknownData00_6[0xF];                                       // 0x0341   (0x000F)  MISSED
};

/// Class /Script/Pal7.PaladinTargetActor_MultiCapsuleOverlap
/// Size: 0x0020 (0x000350 - 0x000370)
class APaladinTargetActor_MultiCapsuleOverlap : public APaladinTargetActor_MultiOverlapBase
{ 
public:
	float                                              CapsuleRadius;                                              // 0x0350   (0x0004)  
	float                                              CapsuleHalfHeight;                                          // 0x0354   (0x0004)  
	FRotator                                           Rotation;                                                   // 0x0358   (0x000C)  
	bool                                               bTraceComplex;                                              // 0x0364   (0x0001)  
	unsigned char                                      UnknownData00_6[0xB];                                       // 0x0365   (0x000B)  MISSED
};

/// Class /Script/Pal7.PaladinTargetActor_MultiSphereOverlap
/// Size: 0x0010 (0x000350 - 0x000360)
class APaladinTargetActor_MultiSphereOverlap : public APaladinTargetActor_MultiOverlapBase
{ 
public:
	float                                              Radius;                                                     // 0x0350   (0x0004)  
	bool                                               bTraceComplex;                                              // 0x0354   (0x0001)  
	unsigned char                                      UnknownData00_6[0xB];                                       // 0x0355   (0x000B)  MISSED
};

/// Class /Script/Pal7.PaladinTargetActor_TraceBase
/// Size: 0x00A0 (0x000340 - 0x0003E0)
#pragma pack(push, 0x1)
class alignas(0x10) APaladinTargetActor_TraceBase : public AGameplayAbilityTargetActor
{ 
public:
	ETraceTypeQuery                                    TraceChannel;                                               // 0x0340   (0x0001)  
	unsigned char                                      UnknownData00_5[0xF];                                       // 0x0341   (0x000F)  MISSED
	FGameplayAbilityTargetingLocationInfo              TraceEnd;                                                   // 0x0350   (0x0070)  
	bool                                               bTraceComplex;                                              // 0x03C0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x03C1   (0x0003)  MISSED
	FRotator                                           Orientation;                                                // 0x03C4   (0x000C)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x03D0   (0x0008)  MISSED
};
#pragma pack(pop)

/// Class /Script/Pal7.PaladinTargetActor_BoxMultiTrace
/// Size: 0x0010 (0x0003E0 - 0x0003F0)
class APaladinTargetActor_BoxMultiTrace : public APaladinTargetActor_TraceBase
{ 
public:
	FVector                                            HalfSize;                                                   // 0x03D8   (0x000C)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x03E4   (0x000C)  MISSED
};

/// Class /Script/Pal7.PaladinTargetActor_SphereMultiTrace
/// Size: 0x0000 (0x0003E0 - 0x0003E0)
class APaladinTargetActor_SphereMultiTrace : public APaladinTargetActor_TraceBase
{ 
public:
};

/// Class /Script/Pal7.PaladinTeamAttributeAvatar
/// Size: 0x0020 (0x000F00 - 0x000F20)
class APaladinTeamAttributeAvatar : public APaladinHero
{ 
public:
	class UPaladinTeamAttributeSet*                    TeamAttributeSet;                                           // 0x0F00   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0F08   (0x0018)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinTeamAttributeAvatar.ToggleEntryTeamAbilityUIMode
	// void ToggleEntryTeamAbilityUIMode(bool bInEntryTeamAbilityUIMode);                                                    // [0xee5250] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinTeamAttributeAvatar.GetTeamAttributeAvatar
	// class APaladinTeamAttributeAvatar* GetTeamAttributeAvatar();                                                          // [0xee45a0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinTeamAttributeAvatar.GetEntryTeamAbilityUIMode
	// bool GetEntryTeamAbilityUIMode();                                                                                     // [0xee4520] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinTeamAttributeSet
/// Size: 0x0070 (0x000030 - 0x0000A0)
class UPaladinTeamAttributeSet : public UPaladinASBase
{ 
public:
	FGameplayAttributeData                             MoneyRate;                                                  // 0x0030   (0x0010)  
	FGameplayAttributeData                             AwakenTimeUpRate;                                           // 0x0040   (0x0010)  
	FGameplayAttributeData                             DropRate;                                                   // 0x0050   (0x0010)  
	FGameplayAttributeData                             DropNumPlusRate;                                            // 0x0060   (0x0010)  
	FGameplayAttributeData                             CookingEffectRate;                                          // 0x0070   (0x0010)  
	FGameplayAttributeData                             AwakenBuffGetRate;                                          // 0x0080   (0x0010)  
	FGameplayAttributeData                             AwakenDamageRate;                                           // 0x0090   (0x0010)  
};

/// Class /Script/Pal7.PaladinTextRenderActor
/// Size: 0x0008 (0x000228 - 0x000230)
class APaladinTextRenderActor : public ATextRenderActor
{ 
public:
	class UStaticMeshComponent*                        StaticMeshComponent;                                        // 0x0228   (0x0008)  
};

/// Class /Script/Pal7.PaladinTipsManagerComponent
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UPaladinTipsManagerComponent : public UActorComponent
{ 
public:
};

/// Class /Script/Pal7.PaladinTriggerBox
/// Size: 0x0028 (0x000228 - 0x000250)
class APaladinTriggerBox : public ATriggerBox
{ 
public:
	TArray<class UPaladinAction*>                      BeginOverlapActions;                                        // 0x0228   (0x0010)  
	TArray<class UPaladinAction*>                      EndOverlapActions;                                          // 0x0238   (0x0010)  
	class UPaladinActorInfoComponent*                  ActorInfoComponent;                                         // 0x0248   (0x0008)  


	/// Functions
	// Function /Script/Pal7.PaladinTriggerBox.RunEndOverlapActions
	// void RunEndOverlapActions();                                                                                          // [0xee4c00] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinTriggerBox.RunBeginOverlapActions
	// void RunBeginOverlapActions();                                                                                        // [0xee4be0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinUIAnimInstance
/// Size: 0x0050 (0x000270 - 0x0002C0)
#pragma pack(push, 0x1)
class alignas(0x10) UPaladinUIAnimInstance : public UAnimInstance
{ 
public:
	unsigned char                                      UnknownData00_3[0x18];                                      // 0x0268   (0x0018)  MISSED
	bool                                               bPlayIdle;                                                  // 0x0280   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0281   (0x0007)  MISSED
	class UAnimSequenceBase*                           Normal_Stand;                                               // 0x0288   (0x0008)  
	class UAnimSequenceBase*                           Normal_Idle;                                                // 0x0290   (0x0008)  
	class UAnimSequenceBase*                           Equipment_Stand;                                            // 0x0298   (0x0008)  
	class UAnimSequenceBase*                           Equipment_Loop;                                             // 0x02A0   (0x0008)  
	class UAnimSequenceBase*                           Equipment_Start;                                            // 0x02A8   (0x0008)  
	class UAnimSequenceBase*                           Equipment_Stop;                                             // 0x02B0   (0x0008)  
};
#pragma pack(pop)

/// Class /Script/Pal7.PaladinUIPetAnimInstance
/// Size: 0x0030 (0x0002C0 - 0x0002F0)
class UPaladinUIPetAnimInstance : public UPaladinUIAnimInstance
{ 
public:
	FName                                              PetName;                                                    // 0x02B8   (0x0008)  
	bool                                               bIsTouchMode;                                               // 0x02C0   (0x0001)  
	bool                                               bIsTouchTrigger;                                            // 0x02C1   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x02C2   (0x0006)  MISSED
	class UAnimSequenceBase*                           CameraSwitch;                                               // 0x02C8   (0x0008)  
	class UAnimSequenceBase*                           Touch_Stand;                                                // 0x02D0   (0x0008)  
	class UAnimSequenceBase*                           Touch_Trigger;                                              // 0x02D8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x02E0   (0x0010)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinUIPetAnimInstance.TouchTrigger
	// void TouchTrigger(FName TriggerPet, bool bIsTouch);                                                                   // [0xee52e0] Final|Native|Private 
	// Function /Script/Pal7.PaladinUIPetAnimInstance.SwitchTouchTrigger
	// void SwitchTouchTrigger();                                                                                            // [0xee5120] Final|Native|Private 
	// Function /Script/Pal7.PaladinUIPetAnimInstance.SwitchTouchMode
	// void SwitchTouchMode(FName NewPetName, bool bIsTouch);                                                                // [0xee5050] Final|Native|Private 
};

/// Class /Script/Pal7.PaladinUIHeroAnimInstance
/// Size: 0x0020 (0x0002C0 - 0x0002E0)
class UPaladinUIHeroAnimInstance : public UPaladinUIAnimInstance
{ 
public:
	unsigned char                                      UnknownData00_3[0x18];                                      // 0x02B8   (0x0018)  MISSED
	EPaladinHeroName                                   UIHeroName;                                                 // 0x02D0   (0x0001)  
	bool                                               bIsViewMode;                                                // 0x02D1   (0x0001)  
	unsigned char                                      UnknownData01_6[0xE];                                       // 0x02D2   (0x000E)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinUIHeroAnimInstance.SwitchViewMode
	// void SwitchViewMode(FName HeroName);                                                                                  // [0xee5140] Final|Native|Private 
};

/// Class /Script/Pal7.PaladinUIFlipbook
/// Size: 0x0060 (0x000108 - 0x000168)
class UPaladinUIFlipbook : public UWidget
{ 
public:
	float                                              Duration;                                                   // 0x0108   (0x0004)  
	float                                              LoopInterval;                                               // 0x010C   (0x0004)  
	int32_t                                            ColumnCount;                                                // 0x0110   (0x0004)  
	int32_t                                            RowCount;                                                   // 0x0114   (0x0004)  
	int32_t                                            CutFrameCount;                                              // 0x0118   (0x0004)  
	bool                                               bAutoPlayLoop;                                              // 0x011C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x011D   (0x0003)  MISSED
	class UTexture2D*                                  FlipbookImage;                                              // 0x0120   (0x0008)  
	SDK_UNDEFINED(16,1842) /* FMulticastInlineDelegate */ __um(OnAnimationEnd);                                    // 0x0128   (0x0010)  
	FLinearColor                                       ColorAndOpacity;                                            // 0x0138   (0x0010)  
	SDK_UNDEFINED(16,1843) /* FDelegateProperty */     __um(ColorAndOpacityDelegate);                              // 0x0148   (0x0010)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0158   (0x0010)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinUIFlipbook.StopAnimation
	// void StopAnimation(bool ShouldnotifyAnimationEndEvent);                                                               // [0xee4f80] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinUIFlipbook.SetFlipbookImage
	// void SetFlipbookImage(class UTexture2D* NewFlipbookImage);                                                            // [0xee4d20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinUIFlipbook.SetCurrentFramIndex
	// void SetCurrentFramIndex(int32_t FrameIndex);                                                                         // [0xee4c20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinUIFlipbook.ResumeAnimation
	// void ResumeAnimation();                                                                                               // [0xee4bc0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinUIFlipbook.PlayAnimation
	// void PlayAnimation(bool ShouldLoop, bool InShouldNotifyAtEnd, bool bRevertPlay);                                      // [0xee4a80] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinUIFlipbook.PauseAnimation
	// void PauseAnimation();                                                                                                // [0xee4a60] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinUIFlipbook.IsAnimationPlaying
	// bool IsAnimationPlaying();                                                                                            // [0xee4800] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinUIFlipbook.IsAnimationPaused
	// bool IsAnimationPaused();                                                                                             // [0xee47d0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinUIManager
/// Size: 0x0118 (0x000028 - 0x000140)
class UPaladinUIManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x30];                                      // 0x0000   (0x0030)  MISSED
	SDK_UNDEFINED(16,1844) /* FMulticastInlineDelegate */ __um(OnPreOpenUI);                                       // 0x0030   (0x0010)  
	SDK_UNDEFINED(16,1845) /* FMulticastInlineDelegate */ __um(OnEnterOrQuitUIMode);                               // 0x0040   (0x0010)  
	bool                                               bEnterUIMode;                                               // 0x0050   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0051   (0x0007)  MISSED
	class UDataTable*                                  HeroUIDataTable;                                            // 0x0058   (0x0008)  
	SDK_UNDEFINED(80,1846) /* TMap<FName, UPaladinUIBase*> */ __um(UICache);                                       // 0x0060   (0x0050)  
	class UDataTable*                                  UIDataTable;                                                // 0x00B0   (0x0008)  
	unsigned char                                      UnknownData02_6[0x88];                                      // 0x00B8   (0x0088)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinUIManager.ToggleAnalogCursor
	// void ToggleAnalogCursor(bool B);                                                                                      // [0xee51c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinUIManager.PrintDebug
	// void PrintDebug();                                                                                                    // [0xee4ba0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinUIManager.OpenUI
	// void OpenUI(FName UIID, EPaladinUIOpenWay OpenWay, FLatentActionInfo LatentInfo, FString Options);                    // [0xee48a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinUIManager.IsPS4ControlDevice
	// bool IsPS4ControlDevice();                                                                                            // [0xee4830] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinUIManager.GetLastControlDeviceIsGamepad
	// bool GetLastControlDeviceIsGamepad();                                                                                 // [0xee4550] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinUIManager.GetCurrentUI
	// class UPaladinUIBase* GetCurrentUI();                                                                                 // [0xee44c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinUIManager.Clear
	// void Clear();                                                                                                         // [0xee4460] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinUIShowAndPopAnim
/// Size: 0x0010 (0x000230 - 0x000240)
class UPaladinUIShowAndPopAnim : public UUserWidget
{ 
public:
	class UWidgetAnimation*                            OpenUIAnim;                                                 // 0x0230   (0x0008)  
	class UWidgetAnimation*                            CloseUIAnim;                                                // 0x0238   (0x0008)  
};

/// Class /Script/Pal7.PaladinUniformGridPanel
/// Size: 0x0020 (0x000168 - 0x000188)
class UPaladinUniformGridPanel : public UUniformGridPanel
{ 
public:
	unsigned char                                      UnknownData00_3[0x18];                                      // 0x0168   (0x0018)  MISSED
	int32_t                                            ColumnNum;                                                  // 0x0180   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0184   (0x0004)  MISSED
};

/// Struct /Script/Pal7.WeaponEnhanceMaterial
/// Size: 0x0030 (0x000000 - 0x000030)
struct FWeaponEnhanceMaterial
{ 
	int32_t                                            ElementID;                                                  // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	SDK_UNDEFINED(40,1847) /* TWeakObjectPtr<UMaterialInterface*> */ __um(Mat);                                    // 0x0008   (0x0028)  
};

/// Struct /Script/Pal7.WeaponEnhanceParticleEffect
/// Size: 0x0030 (0x000000 - 0x000030)
struct FWeaponEnhanceParticleEffect
{ 
	FName                                              SocketName;                                                 // 0x0000   (0x0008)  
	SDK_UNDEFINED(40,1848) /* TWeakObjectPtr<UParticleSystem*> */ __um(ParticleTemplate);                          // 0x0008   (0x0028)  
};

/// Struct /Script/Pal7.WeaponEnhanceMaterialParamEffect
/// Size: 0x000C (0x000000 - 0x00000C)
struct FWeaponEnhanceMaterialParamEffect
{ 
	FName                                              ParamName;                                                  // 0x0000   (0x0008)  
	float                                              paramValue;                                                 // 0x0008   (0x0004)  
};

/// Struct /Script/Pal7.WeaponEnhanceEffectGroup
/// Size: 0x0058 (0x000000 - 0x000058)
struct FWeaponEnhanceEffectGroup
{ 
	TArray<FWeaponEnhanceMaterial>                     MaterialList;                                               // 0x0000   (0x0010)  
	TArray<FWeaponEnhanceParticleEffect>               ParticleList;                                               // 0x0010   (0x0010)  
	TArray<FWeaponEnhanceMaterialParamEffect>          MaterialParamList;                                          // 0x0020   (0x0010)  
	SDK_UNDEFINED(40,1849) /* TWeakObjectPtr<UAnimationAsset*> */ __um(Animation);                                 // 0x0030   (0x0028)  
};

/// Class /Script/Pal7.PaladinWeapon
/// Size: 0x00E0 (0x000290 - 0x000370)
class APaladinWeapon : public APaladinEquipment
{ 
public:
	EPaladinHeroWeaponState                            WeaponState;                                                // 0x0290   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0291   (0x0003)  MISSED
	bool                                               bHaveWeaponCover : 1;                                       // 0x0294:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x0295   (0x0003)  MISSED
	FName                                              WeaponOnBodyAttachName;                                     // 0x0298   (0x0008)  
	FName                                              WeaponInHandAttachName;                                     // 0x02A0   (0x0008)  
	FName                                              WeaponCoverAttachName;                                      // 0x02A8   (0x0008)  
	float                                              AttackRange;                                                // 0x02B0   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x02B4   (0x0004)  MISSED
	TArray<FWeaponEnhanceEffectGroup>                  EnhanceEffectGroups;                                        // 0x02B8   (0x0010)  
	SDK_UNDEFINED(80,1850) /* TMap<int32_t, int32_t> */ __um(EnhanceEffectList);                                   // 0x02C8   (0x0050)  
	bool                                               EnhanceEffectAnimation : 1;                                 // 0x0318:0 (0x0001)  
	unsigned char                                      UnknownData03_4[0x7];                                       // 0x0319   (0x0007)  MISSED
	class USkeletalMeshComponent*                      SKCom;                                                      // 0x0320   (0x0008)  
	class USkeletalMeshComponent*                      CoverSkCom;                                                 // 0x0328   (0x0008)  
	TArray<class UParticleSystemComponent*>            EnhanceComs;                                                // 0x0330   (0x0010)  
	TArray<class UMaterialInstanceDynamic*>            WeaponMeshDynamicMaterials;                                 // 0x0340   (0x0010)  
	TArray<class UMaterialInstanceDynamic*>            WeaponCoverMeshDynamicMaterials;                            // 0x0350   (0x0010)  
	unsigned char                                      UnknownData04_6[0x10];                                      // 0x0360   (0x0010)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinWeapon.SetWeaponState
	// void SetWeaponState(EPaladinHeroWeaponState S);                                                                       // [0xee4f00] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinWeapon.SetHeroName
	// void SetHeroName(EPaladinHeroName Name);                                                                              // [0xee4da0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinWeapon.SetEnhanceLevel
	// void SetEnhanceLevel(int32_t Level);                                                                                  // [0xee4ca0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinWeapon.OnWeaponUnEquip
	// void OnWeaponUnEquip();                                                                                               // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinWeapon.OnWeaponSkinEquip
	// void OnWeaponSkinEquip();                                                                                             // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinWeapon.OnWeaponEquip
	// void OnWeaponEquip();                                                                                                 // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinWeapon.OnSetWeaponState
	// void OnSetWeaponState(EPaladinHeroWeaponState S);                                                                     // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinWeapon.GetWeaponSkCom
	// class USkeletalMeshComponent* GetWeaponSkCom();                                                                       // [0xee46c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinWeapon.GetWeaponCoverSkCom
	// class USkeletalMeshComponent* GetWeaponCoverSkCom();                                                                  // [0xee4690] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinWeapon.GetEnhanceLevel
	// int32_t GetEnhanceLevel();                                                                                            // [0xee44f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinWeapon.ChangeEnhanceEffectByGroupID
	// void ChangeEnhanceEffectByGroupID(int32_t ID);                                                                        // [0xee4360] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinWeiShuHealingExecution
/// Size: 0x0060 (0x000040 - 0x0000A0)
class UPaladinWeiShuHealingExecution : public UGameplayEffectExecutionCalculation
{ 
public:
	class UClass*                                      EffectClass;                                                // 0x0040   (0x0008)  
	float                                              FullHealMagnitude;                                          // 0x0048   (0x0004)  
	float                                              MinHealingPercentMagnitude;                                 // 0x004C   (0x0004)  
	SDK_UNDEFINED(80,1851) /* TMap<EPaladinGameDifficulty, float> */ __um(HealingRateByDifficult);                 // 0x0050   (0x0050)  


	/// Functions
	// Function /Script/Pal7.PaladinWeiShuHealingExecution.GetWeiShuPoisonPercent
	// float GetWeiShuPoisonPercent(class AActor* TargetCharacter);                                                          // [0xee88c0] Native|Event|Protected|BlueprintEvent|Const 
};

/// Class /Script/Pal7.PaladinWidgetLayoutLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UPaladinWidgetLayoutLibrary : public UWidgetLayoutLibrary
{ 
public:


	/// Functions
	// Function /Script/Pal7.PaladinWidgetLayoutLibrary.SlotAsPaladinScrollBoxSlot
	// class UPaladinScrollBoxSlot* SlotAsPaladinScrollBoxSlot(class UWidget* Widget);                                       // [0xee98c0] Final|Native|Static|Private|BlueprintCallable|BlueprintPure 
};

/// Class /Script/Pal7.PaladinWorldMapManagerComponent
/// Size: 0x01F0 (0x0000B0 - 0x0002A0)
class UPaladinWorldMapManagerComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_3[0x48];                                      // 0x00B0   (0x0048)  MISSED
	class UDataTable*                                  PalDistrictTable;                                           // 0x00F8   (0x0008)  
	class UClass*                                      PalJumpSequenceDataClass;                                   // 0x0100   (0x0008)  
	FName                                              CruiseLevelID_Renjie;                                       // 0x0108   (0x0008)  
	FName                                              CruiseLevelID_Mojie;                                        // 0x0110   (0x0008)  
	SDK_UNDEFINED(16,1852) /* FMulticastInlineDelegate */ __um(OnGamePlayStateChange);                             // 0x0118   (0x0010)  
	SDK_UNDEFINED(16,1853) /* FMulticastInlineDelegate */ __um(OnSelectedMapItemChange);                           // 0x0128   (0x0010)  
	float                                              SwitchToHeroFinishWaitDelay;                                // 0x0138   (0x0004)  
	FGameplayTag                                       CruiseDisableSaveTag;                                       // 0x013C   (0x0008)  
	unsigned char                                      UnknownData01_5[0xC4];                                      // 0x0144   (0x00C4)  MISSED
	class UJumpMapSequenceData*                        JumpMapSequenceDataIns;                                     // 0x0208   (0x0008)  
	unsigned char                                      UnknownData02_6[0x90];                                      // 0x0210   (0x0090)  MISSED


	/// Functions
	// Function /Script/Pal7.PaladinWorldMapManagerComponent.SetMapDisplayed
	// void SetMapDisplayed(FName MapID);                                                                                    // [0xee9720] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinWorldMapManagerComponent.SetEnableCruise
	// void SetEnableCruise(bool bEnable);                                                                                   // [0xee9610] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinWorldMapManagerComponent.QuitCruiseGameAndGoNextMap
	// void QuitCruiseGameAndGoNextMap();                                                                                    // [0xee9530] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinWorldMapManagerComponent.OnPrePareLevelReady
	// void OnPrePareLevelReady();                                                                                           // [0xee9210] Final|Native|Private 
	// Function /Script/Pal7.PaladinWorldMapManagerComponent.OnMapChangeEnd
	// void OnMapChangeEnd(FName LevelID);                                                                                   // [0xee8e40] Final|Native|Private 
	// Function /Script/Pal7.PaladinWorldMapManagerComponent.OnJumpSeuquenceEnd
	// void OnJumpSeuquenceEnd(FGuid InstanceID);                                                                            // [0xee8db0] Final|Native|Private|HasDefaults 
	// Function /Script/Pal7.PaladinWorldMapManagerComponent.JumpTo
	// bool JumpTo(FName TargetMapID, FName TargetPlayerStart);                                                              // [0xee8b40] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinWorldMapManagerComponent.IsMapNeedUnlockDisplay
	// bool IsMapNeedUnlockDisplay(FName MapID);                                                                             // [0xee8ab0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinWorldMapManagerComponent.IsMapHasUnlockDistrict
	// bool IsMapHasUnlockDistrict(FName MapID);                                                                             // [0xee8a20] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinWorldMapManagerComponent.IsEnableCruise
	// bool IsEnableCruise();                                                                                                // [0xee89f0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinWorldMapManagerComponent.GetLandDownLoc
	// void GetLandDownLoc(FVector& Out);                                                                                    // [0xee8650] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinWorldMapManagerComponent.GetFlyUpLoc
	// void GetFlyUpLoc(FVector& Out);                                                                                       // [0xee8650] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinWorldMapManagerComponent.GetDistrictUnLockState
	// EDistrictUnLockState GetDistrictUnLockState(FName MapID, FName LandPointID);                                          // [0xee8590] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinWorldMapManagerComponent.GetDisTrictInfo
	// bool GetDisTrictInfo(FName MapSrcID, FPaladinDistrictInfo& OutInfo);                                                  // [0xee83b0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PaladinWorldMapManagerComponent.DisableLandSequence
	// void DisableLandSequence(FName TargetMapID);                                                                          // [0xebd080] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinWorldMapManagerComponent.ChangeDistrictStateEx
	// void ChangeDistrictStateEx(EDistrictOperate Op, FGameplayTag DistrictType);                                           // [0xee8110] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinWorldMapManagerComponent.ChangeDistrictState
	// void ChangeDistrictState(EDistrictOperate Op, FName MapID, FName TargetLandID);                                       // [0xee8010] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PaladinZone
/// Size: 0x0068 (0x000220 - 0x000288)
class APaladinZone : public AActor
{ 
public:
	FGameplayTag                                       ZoneNameTag;                                                // 0x0220   (0x0008)  
	EZoneType                                          ZoneType;                                                   // 0x0228   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0229   (0x0003)  MISSED
	FGameplayTag                                       SequenceNameTag;                                            // 0x022C   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0234   (0x0004)  MISSED
	class UPaladinQuestAsset*                          QuestAsset;                                                 // 0x0238   (0x0008)  
	bool                                               IsZoneActive;                                               // 0x0240   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x0241   (0x0007)  MISSED
	class UBoxComponent*                               ZoneCollision;                                              // 0x0248   (0x0008)  
	class UBillboardComponent*                         ZoneIcon;                                                   // 0x0250   (0x0008)  
	class ULevelSequencePlayer*                        SequencePlayer;                                             // 0x0258   (0x0008)  
	class ULevelSequence*                              SequenceAsset;                                              // 0x0260   (0x0008)  
	unsigned char                                      UnknownData03_5[0x8];                                       // 0x0268   (0x0008)  MISSED
	FMovieSceneSequencePlaybackSettings                PlayBackSettings;                                           // 0x0270   (0x0018)  


	/// Functions
	// Function /Script/Pal7.PaladinZone.PlaySequence
	// void PlaySequence();                                                                                                  // [0xee9510] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PaladinZone.OnSequenceStop
	// void OnSequenceStop();                                                                                                // [0xee9350] Final|Native|Public  
	// Function /Script/Pal7.PaladinZone.OnSequenceEnd
	// void OnSequenceEnd();                                                                                                 // [0xee9330] Final|Native|Public  
	// Function /Script/Pal7.PaladinZone.OnPlayerLeave
	// void OnPlayerLeave(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // [0xee90d0] Final|Native|Public  
	// Function /Script/Pal7.PaladinZone.OnPlayerEnter
	// void OnPlayerEnter(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0xee8ec0] Final|Native|Public|HasOutParms 
	// Function /Script/Pal7.PaladinZone.K2_CheckCondition
	// bool K2_CheckCondition();                                                                                             // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PaladinZone.ActiveZone
	// void ActiveZone(class ULevelSequence* InSequenceAsset);                                                               // [0x7e0040] Native|Public        
};

/// Class /Script/Pal7.PalCharacterCapsuleComponent
/// Size: 0x0000 (0x000430 - 0x000430)
class UPalCharacterCapsuleComponent : public UCapsuleComponent
{ 
public:
};

/// Class /Script/Pal7.PartnerFightingManager
/// Size: 0x0138 (0x000028 - 0x000160)
class UPartnerFightingManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x160];                                     // 0x0000   (0x0160)  MISSED


	/// Functions
	// Function /Script/Pal7.PartnerFightingManager.UpdateFightManager
	// void UpdateFightManager();                                                                                            // [0xee9c10] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PartnerFightingManager.TogglEnablePartnerEscape
	// void TogglEnablePartnerEscape(bool bEnableEscape);                                                                    // [0xee9ab0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PartnerFightingManager.StopGroupFighting
	// void StopGroupFighting();                                                                                             // [0xee9a70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PartnerFightingManager.StartGroupFighting
	// void StartGroupFighting();                                                                                            // [0xee9a30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PartnerFightingManager.SetGroupForceAttackTarget
	// void SetGroupForceAttackTarget(class APaladinEnemy* FoceAttackTarget);                                                // [0xee96a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PartnerFightingManager.ReceiveEnemyDie
	// void ReceiveEnemyDie(class APaladinHero* Killer, class APaladinEnemy* Target);                                        // [0xee9550] Final|Native|Private 
	// Function /Script/Pal7.PartnerFightingManager.GetHealingTarget
	// bool GetHealingTarget(class APaladinHero* QueryHero, class APaladinHero*& TryToHealingHero);                          // [0xee86e0] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Pal7.PartnerFollowManager
/// Size: 0x0080 (0x000028 - 0x0000A8)
class UPartnerFollowManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_3[0x30];                                      // 0x0000   (0x0030)  MISSED
	SDK_UNDEFINED(16,1854) /* FMulticastInlineDelegate */ __um(OnStartFollowing);                                  // 0x0030   (0x0010)  
	unsigned char                                      UnknownData01_5[0x60];                                      // 0x0040   (0x0060)  MISSED
	float                                              PartnerFollowDisScale;                                      // 0x00A0   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x00A4   (0x0004)  MISSED


	/// Functions
	// Function /Script/Pal7.PartnerFollowManager.TogglePartnerFollowDisScale
	// void TogglePartnerFollowDisScale(bool bEnable, float DisValue);                                                       // [0xee9b40] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PartnerFollowManager.StopGroupFollow
	// void StopGroupFollow();                                                                                               // [0xee9a90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PartnerFollowManager.StartGroupFollow
	// void StartGroupFollow();                                                                                              // [0xee9a50] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.PartnerFollowManager.GroupFollowing
	// void GroupFollowing(bool& IsAllFollowing);                                                                            // [0xee8960] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PartnerFollowManager.AIPartnerStateDelegate__DelegateSignature
	// void AIPartnerStateDelegate__DelegateSignature();                                                                     // [0x15dd8c0] MulticastDelegate|Public|Delegate 
};

/// Class /Script/Pal7.PatrolNode
/// Size: 0x0000 (0x000220 - 0x000220)
class APatrolNode : public AActor
{ 
public:
};

/// Class /Script/Pal7.PerfectDodge
/// Size: 0x0018 (0x000220 - 0x000238)
class APerfectDodge : public AActor
{ 
public:
	class UCapsuleComponent*                           CollisionComponent;                                         // 0x0220   (0x0008)  
	FVector                                            DodgeLocation;                                              // 0x0228   (0x000C)  
	bool                                               bDodging;                                                   // 0x0234   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0235   (0x0003)  MISSED


	/// Functions
	// Function /Script/Pal7.PerfectDodge.HeroSuccessMakePerfectDodge
	// void HeroSuccessMakePerfectDodge(bool bHitedCharacter);                                                               // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.PerfectDodge.GetOwnerHero
	// class APaladinHero* GetOwnerHero();                                                                                   // [0xee87b0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PetShowCameraActor
/// Size: 0x0050 (0x000220 - 0x000270)
class APetShowCameraActor : public AActor
{ 
public:
	class UCameraComponent*                            Camera;                                                     // 0x0220   (0x0008)  
	class UArrowComponent*                             Arrow;                                                      // 0x0228   (0x0008)  
	TArray<EObjectTypeQuery>                           RepulsionQuery;                                             // 0x0230   (0x0010)  
	float                                              RepulsionRadius;                                            // 0x0240   (0x0004)  
	float                                              MoveSpeed;                                                  // 0x0244   (0x0004)  
	float                                              MoveToTargetSpeedWeight;                                    // 0x0248   (0x0004)  
	float                                              RepulsionSpeedWeight;                                       // 0x024C   (0x0004)  
	float                                              RotSpeed;                                                   // 0x0250   (0x0004)  
	float                                              Tolerance;                                                  // 0x0254   (0x0004)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0258   (0x0018)  MISSED


	/// Functions
	// Function /Script/Pal7.PetShowCameraActor.SetTarget
	// void SetTarget(class AActor* InTarget, TArray<AActor*> IgnoreRepuslionActors);                                        // [0xee97a0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.PlacementActor
/// Size: 0x0018 (0x000220 - 0x000238)
class APlacementActor : public AActor
{ 
public:
	class UDialogue*                                   DialogueData;                                               // 0x0220   (0x0008)  
	class UClass*                                      MyNPCClass;                                                 // 0x0228   (0x0008)  
	class APaladinNPC*                                 MyNPC;                                                      // 0x0230   (0x0008)  


	/// Functions
	// Function /Script/Pal7.PlacementActor.SpawnNPCActorAtWorldPostion
	// void SpawnNPCActorAtWorldPostion(FTransform InTransform);                                                             // [0xee9940] Final|Native|Public|HasDefaults|BlueprintCallable 
};

/// Class /Script/Pal7.PoisonDamageCalculation
/// Size: 0x0000 (0x000040 - 0x000040)
class UPoisonDamageCalculation : public UGameplayModMagnitudeCalculation
{ 
public:
};

/// Class /Script/Pal7.PositionTempleteBaseActor
/// Size: 0x0000 (0x000220 - 0x000220)
class APositionTempleteBaseActor : public AActor
{ 
public:


	/// Functions
	// Function /Script/Pal7.PositionTempleteBaseActor.GetTransforms
	// void GetTransforms(class UClass* ObjectClass, TArray<FTransform>& OutArr);                                            // [0xee87e0] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Pal7.PositionTempleteBaseActor.GetTempleteTransforms
	// TArray<FTransform> GetTempleteTransforms();                                                                           // [0x15dd8c0] Event|Public|BlueprintEvent|Const 
};

/// Class /Script/Pal7.QuestTask
/// Size: 0x0010 (0x000068 - 0x000078)
class UQuestTask : public UGameplayTask
{ 
public:
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x0068   (0x0008)  MISSED
	class UPaladinQuestNode*                           OwnerQuestNode;                                             // 0x0070   (0x0008)  
};

/// Class /Script/Pal7.QuestTask_NoviceTeaching
/// Size: 0x0018 (0x000078 - 0x000090)
class UQuestTask_NoviceTeaching : public UQuestTask
{ 
public:
	SDK_UNDEFINED(16,1855) /* FMulticastInlineDelegate */ __um(OnProgressChangedDelegate);                         // 0x0078   (0x0010)  
	EPaladinGuidProgress                               ListeningProgressType;                                      // 0x0088   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0089   (0x0007)  MISSED


	/// Functions
	// Function /Script/Pal7.QuestTask_NoviceTeaching.OnProgressChanged
	// void OnProgressChanged(EPaladinGuidProgress GuidProgressType, int32_t CurrPro, int32_t MaxPro);                       // [0xee9230] Final|Native|Protected 
	// Function /Script/Pal7.QuestTask_NoviceTeaching.ListenTeachingProgress
	// class UQuestTask_NoviceTeaching* ListenTeachingProgress(class UPaladinQuestNode* OwningNode, EPaladinGuidProgress InProgressType, FName InInstanceName); // [0xee8c00] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/Pal7.QuestTask_WaitAnyGameplayTagFromArr
/// Size: 0x0020 (0x000078 - 0x000098)
class UQuestTask_WaitAnyGameplayTagFromArr : public UQuestTask
{ 
public:
	unsigned char                                      UnknownData00_3[0x10];                                      // 0x0078   (0x0010)  MISSED
	SDK_UNDEFINED(16,1856) /* FMulticastInlineDelegate */ __um(OnTriggedDelegate);                                 // 0x0088   (0x0010)  


	/// Functions
	// Function /Script/Pal7.QuestTask_WaitAnyGameplayTagFromArr.WaitAnyGameplayTagTrigged
	// class UQuestTask_WaitAnyGameplayTagFromArr* WaitAnyGameplayTagTrigged(class UPaladinQuestNode* OwningNode, TArray<FGameplayTag>& TagArr, FName InInstanceName); // [0xee9c30] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.QuestTask_WaitAnyGameplayTagFromArr.OnTrigged
	// void OnTrigged(FGameplayTag NPCNameTag, bool bAddTag);                                                                // [0xee9370] Final|Native|Protected 
};

/// Class /Script/Pal7.QuestTask_WaitGameplayTag
/// Size: 0x0030 (0x000078 - 0x0000A8)
class UQuestTask_WaitGameplayTag : public UQuestTask
{ 
public:
	unsigned char                                      UnknownData00_3[0x20];                                      // 0x0078   (0x0020)  MISSED
	SDK_UNDEFINED(16,1857) /* FMulticastInlineDelegate */ __um(OnTriggedDelegate);                                 // 0x0098   (0x0010)  


	/// Functions
	// Function /Script/Pal7.QuestTask_WaitGameplayTag.WaitGameplayTagTrigged
	// class UQuestTask_WaitGameplayTag* WaitGameplayTagTrigged(class UPaladinQuestNode* OwningNode, TArray<FGameplayTag> NPC_NameTag, FName InInstanceName); // [0xee9d50] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.QuestTask_WaitGameplayTag.OnTrigged
	// void OnTrigged(FGameplayTag NPCNameTag, bool bAddTag);                                                                // [0xee9440] Final|Native|Protected 
};

/// Class /Script/Pal7.QuestTask_WaitItemCountEvent
/// Size: 0x0060 (0x000078 - 0x0000D8)
class UQuestTask_WaitItemCountEvent : public UQuestTask
{ 
public:
	SDK_UNDEFINED(16,1858) /* FMulticastInlineDelegate */ __um(OnItemsEnough);                                     // 0x0078   (0x0010)  
	SDK_UNDEFINED(80,1859) /* TMap<int32_t, int32_t> */ __um(ItemCountMap);                                        // 0x0088   (0x0050)  


	/// Functions
	// Function /Script/Pal7.QuestTask_WaitItemCountEvent.WaitItemCountEvent
	// class UQuestTask_WaitItemCountEvent* WaitItemCountEvent(class UPaladinQuestNode* OwningNode, TMap<int32_t, int32_t>& InData, FName InInstanceName); // [0xee9ea0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Pal7.QuestTask_WaitItemCountEvent.OnAddItemCount
	// void OnAddItemCount(int32_t ItemId, int32_t ItemCount);                                                               // [0xee8cf0] Final|Native|Protected 
	// Function /Script/Pal7.QuestTask_WaitItemCountEvent.CheckPlayerItemCountEnough
	// bool CheckPlayerItemCountEnough(TMap<int32_t, int32_t>& ItemCount, class UObject* WorldContextObject);                // [0xee81d0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Pal7.RestoreHpEvery5Seconds
/// Size: 0x0000 (0x000040 - 0x000040)
class URestoreHpEvery5Seconds : public UGameplayModMagnitudeCalculation
{ 
public:
};

/// Class /Script/Pal7.RestoreManaEvery5Seconds
/// Size: 0x0000 (0x000040 - 0x000040)
class URestoreManaEvery5Seconds : public UGameplayModMagnitudeCalculation
{ 
public:
};

/// Class /Script/Pal7.SequenceStopWidget
/// Size: 0x0010 (0x000230 - 0x000240)
class USequenceStopWidget : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0230   (0x0010)  MISSED


	/// Functions
	// Function /Script/Pal7.SequenceStopWidget.K2_SetCDPercent
	// void K2_SetCDPercent(float InCDPercent);                                                                              // [0x15dd8c0] Event|Public|BlueprintEvent 
};

/// Class /Script/Pal7.SoundDistanceControlActor
/// Size: 0x0008 (0x000220 - 0x000228)
class ASoundDistanceControlActor : public AActor
{ 
public:
	class UAtomSoundDistanceControl*                   SoundDistanceControlComp;                                   // 0x0220   (0x0008)  
};

/// Class /Script/Pal7.SpawnItemComponent
/// Size: 0x0050 (0x0000B0 - 0x000100)
class USpawnItemComponent : public UActorComponent
{ 
public:
	SDK_UNDEFINED(80,1860) /* TMap<int32_t, int32_t> */ __um(SpawnItems);                                          // 0x00B0   (0x0050)  


	/// Functions
	// Function /Script/Pal7.SpawnItemComponent.NotifySpawnItems
	// void NotifySpawnItems();                                                                                              // [0xbf6f60] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Pal7.StoryBlueprintLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UStoryBlueprintLibrary : public UBlueprintFunctionLibrary
{ 
public:


	/// Functions
	// Function /Script/Pal7.StoryBlueprintLibrary.SaveLoadTest
	// void SaveLoadTest(class UObject* WorldContextObject, FGameplayTag InTag, FGameplayTag AddToValueTag);                 // [0xeebb90] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Pal7.StoryBlueprintLibrary.GetQuestSaveDataByQuestAsset
	// bool GetQuestSaveDataByQuestAsset(class UObject* WorldContextObject, class UPaladinQuestAsset* InQuestAsset, FQuestSaveData& OutProgressData); // [0xeeb560] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Pal7.UMG_Lock_Base
/// Size: 0x0040 (0x000230 - 0x000270)
class UUMG_Lock_Base : public UUserWidget
{ 
public:
	class UImage*                                      PassiveOuter;                                               // 0x0230   (0x0008)  
	class UImage*                                      PassiveInner;                                               // 0x0238   (0x0008)  
	FLockTargetSet                                     CacheLockTarget;                                            // 0x0240   (0x001C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x025C   (0x0004)  MISSED
	class UCanvasPanel*                                CanvasPanelWidget;                                          // 0x0260   (0x0008)  
	ETraceTypeQuery                                    LineTraceChannel;                                           // 0x0268   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0269   (0x0003)  MISSED
	float                                              SprintDistanceUpThreshold;                                  // 0x026C   (0x0004)  


	/// Functions
	// Function /Script/Pal7.UMG_Lock_Base.K2_ShowInnerImage
	// void K2_ShowInnerImage(bool bShow);                                                                                   // [0x15dd8c0] Event|Public|BlueprintEvent 
};

/// Class /Script/Pal7.UMG_Lock_ContainerBase
/// Size: 0x0008 (0x000230 - 0x000238)
class UUMG_Lock_ContainerBase : public UUserWidget
{ 
public:
	class UUMG_Lock_Base*                              LockBase;                                                   // 0x0230   (0x0008)  
};

/// Class /Script/Pal7.UMG_UseSkillIcon_Base
/// Size: 0x0018 (0x000230 - 0x000248)
class UUMG_UseSkillIcon_Base : public UUserWidget
{ 
public:
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x0230   (0x0008)  MISSED
	class UPaladinComboAbility*                        AbilityPointer;                                             // 0x0238   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0240   (0x0008)  MISSED


	/// Functions
	// Function /Script/Pal7.UMG_UseSkillIcon_Base.OnControllerInputEvent
	// void OnControllerInputEvent(TEnumAsByte<EInputEvent> InputEvent, EPaladinKeyEventName EventNameEnum, float CurTickHoldSpan, float PreTickHoldSpan, float KeyMappingValue); // [0xeeb790] Final|Native|Public  
	// Function /Script/Pal7.UMG_UseSkillIcon_Base.K2_SetCDPercent
	// void K2_SetCDPercent(float CDPercent);                                                                                // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.UMG_UseSkillIcon_Base.K2_PlayPressedAnimation
	// void K2_PlayPressedAnimation();                                                                                       // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.UMG_UseSkillIcon_Base.K2_PlayCoolDownAnim
	// void K2_PlayCoolDownAnim();                                                                                           // [0x15dd8c0] Event|Public|BlueprintEvent 
};

/// Class /Script/Pal7.UMG_UseSkillPanel_Base
/// Size: 0x0060 (0x000230 - 0x000290)
class UUMG_UseSkillPanel_Base : public UUserWidget
{ 
public:
	bool                                               ShowSkill;                                                  // 0x0230   (0x0001)  
	bool                                               bEntryTeamAbilityUIMode;                                    // 0x0231   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0232   (0x0006)  MISSED
	class APaladinHero*                                HeroPoint;                                                  // 0x0238   (0x0008)  
	SDK_UNDEFINED(80,1861) /* TMap<EPaladinKeyEventName, FUseSkillPanelWidget> */ __um(SkillWidgetMap);            // 0x0240   (0x0050)  


	/// Functions
	// Function /Script/Pal7.UMG_UseSkillPanel_Base.SetOneSkillShowState
	// void SetOneSkillShowState(bool Show, FPaladinAbilityDataRow& AbilityDataRow, EPaladinKeyEventName EventNameEnum, class APaladinHero* InPaladinHero); // [0x15dd8c0] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/Pal7.UMG_UseSkillPanel_Base.RefreshPage
	// void RefreshPage();                                                                                                   // [0xeebb70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Pal7.UMG_UseSkillPanel_Base.RefreshOneSkill
	// void RefreshOneSkill(EPaladinKeyEventName Key, class APaladinHero* Hero);                                             // [0xeebab0] Final|Native|Public  
	// Function /Script/Pal7.UMG_UseSkillPanel_Base.OnControllerInputEvent
	// void OnControllerInputEvent(TEnumAsByte<EInputEvent> InputEvent, EPaladinKeyEventName EventNameEnum, float CurTickHoldSpan, float PreTickHoldSpan, float KeyMappingValue); // [0xeeb920] Final|Native|Public  
	// Function /Script/Pal7.UMG_UseSkillPanel_Base.K2_SetKeyTipShow
	// void K2_SetKeyTipShow(bool Condition);                                                                                // [0x15dd8c0] Event|Public|BlueprintEvent 
	// Function /Script/Pal7.UMG_UseSkillPanel_Base.DeciseHero
	// class APaladinHero* DeciseHero();                                                                                     // [0xeeb530] Final|Native|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/Pal7.PaladinUpLoadPSOManager
/// Size: 0x0040 (0x000028 - 0x000068)
class UPaladinUpLoadPSOManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x68];                                      // 0x0000   (0x0068)  MISSED
};

/// Class /Script/Pal7.VerticalBoxWithNavigation
/// Size: 0x0020 (0x000150 - 0x000170)
class UVerticalBoxWithNavigation : public UVerticalBox
{ 
public:
	unsigned char                                      UnknownData00_3[0x18];                                      // 0x0150   (0x0018)  MISSED
	EPaladinUIKeyControlType                           ControlType;                                                // 0x0168   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0169   (0x0007)  MISSED
};

/// Struct /Script/Pal7.QTEUIInfo
/// Size: 0x0028 (0x000000 - 0x000028)
struct FQTEUIInfo
{ 
	EQTEUMGType                                        UIType;                                                     // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	FKey                                               ValidKey;                                                   // 0x0008   (0x0018)  
	bool                                               bSuccessEnd;                                                // 0x0020   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0021   (0x0007)  MISSED
};

/// Struct /Script/Pal7.PaladinModelViewCameraInfo
/// Size: 0x0018 (0x000000 - 0x000018)
struct FPaladinModelViewCameraInfo
{ 
	FVector                                            CameraLocation;                                             // 0x0000   (0x000C)  
	ECameraTemplate                                    CameraPitch;                                                // 0x000C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x000D   (0x0003)  MISSED
	float                                              CustomPitch;                                                // 0x0010   (0x0004)  
	float                                              CameraYawValue;                                             // 0x0014   (0x0004)  
};

/// Struct /Script/Pal7.MaterialSetForUI
/// Size: 0x0030 (0x000000 - 0x000030)
struct FMaterialSetForUI
{ 
	int32_t                                            ElementIndex;                                               // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	SDK_UNDEFINED(40,1862) /* TWeakObjectPtr<UMaterialInstance*> */ __um(Material);                                // 0x0008   (0x0028)  
};

/// Struct /Script/Pal7.ModelViewStruct
/// Size: 0x0098 (0x000000 - 0x000098)
struct FModelViewStruct
{ 
	FGameplayTag                                       UnlockTag;                                                  // 0x0000   (0x0008)  
	SDK_UNDEFINED(40,1863) /* TWeakObjectPtr<USkeletalMesh*> */ __um(SkeletalMesh);                                // 0x0008   (0x0028)  
	SDK_UNDEFINED(40,1864) /* TWeakObjectPtr<UAnimSequence*> */ __um(AnimSeqence);                                 // 0x0030   (0x0028)  
	TArray<FMaterialSetForUI>                          replaceMaterial;                                            // 0x0058   (0x0010)  
	EPaladinHeroWeaponState                            WeaponState;                                                // 0x0068   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0069   (0x0003)  MISSED
	FName                                              SocketName;                                                 // 0x006C   (0x0008)  
	bool                                               bSetCamera;                                                 // 0x0074   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0075   (0x0003)  MISSED
	FPaladinModelViewCameraInfo                        CameraInfo;                                                 // 0x0078   (0x0018)  
	bool                                               bIsOpenCloth;                                               // 0x0090   (0x0001)  
	ELightIntensity                                    LightIntensity;                                             // 0x0091   (0x0001)  
	unsigned char                                      UnknownData02_6[0x6];                                       // 0x0092   (0x0006)  MISSED
};

/// Struct /Script/Pal7.PaladinBossDebuffState
/// Size: 0x0018 (0x000000 - 0x000018)
struct FPaladinBossDebuffState
{ 
	EPaladinBossDebuffType                             Debuff;                                                     // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	TArray<float>                                      QueueMaxHP;                                                 // 0x0008   (0x0010)  
};

/// Struct /Script/Pal7.InteractionTargetData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FInteractionTargetData
{ 
	class UInteractionComponent*                       TraceInteractioComp;                                        // 0x0000   (0x0008)  
	bool                                               bIsCanInteract;                                             // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
};

/// Struct /Script/Pal7.PetInfo
/// Size: 0x0028 (0x000000 - 0x000028)
struct FPetInfo
{ 
	int32_t                                            Experience;                                                 // 0x0000   (0x0004)  
	int32_t                                            Level;                                                      // 0x0004   (0x0004)  
	int32_t                                            SkillPoints;                                                // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	TArray<int32_t>                                    SkillLevels;                                                // 0x0010   (0x0010)  
	bool                                               isBlocked;                                                  // 0x0020   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0021   (0x0007)  MISSED
};

/// Struct /Script/Pal7.PaladinSequenceSubtitleInfo
/// Size: 0x0048 (0x000000 - 0x000048)
struct FPaladinSequenceSubtitleInfo
{ 
	SDK_UNDEFINED(24,1865) /* FText */                 __um(TitleContent);                                         // 0x0000   (0x0018)  
	SDK_UNDEFINED(24,1866) /* FText */                 __um(SpeakerName);                                          // 0x0018   (0x0018)  
	SDK_UNDEFINED(24,1867) /* FText */                 __um(SubtitleContent);                                      // 0x0030   (0x0018)  
};

/// Struct /Script/Pal7.AchievementCacheInfo
/// Size: 0x0070 (0x000000 - 0x000070)
struct FAchievementCacheInfo
{ 
	SDK_UNDEFINED(16,1868) /* FString */               __um(PlayerID);                                             // 0x0000   (0x0010)  
	TArray<FName>                                      UnlockAchievements;                                         // 0x0010   (0x0010)  
	SDK_UNDEFINED(80,1869) /* TMap<FName, FAchievemntInProgress> */ __um(InProgressAchievementsCache);             // 0x0020   (0x0050)  
};

/// Struct /Script/Pal7.AchievemntInProgress
/// Size: 0x0020 (0x000000 - 0x000020)
struct FAchievemntInProgress
{ 
	FName                                              APIName;                                                    // 0x0000   (0x0008)  
	bool                                               Unlocked;                                                   // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	int32_t                                            CurrentValue;                                               // 0x000C   (0x0004)  
	SDK_UNDEFINED(16,1870) /* TArray<FString> */       __um(FinishedCache);                                        // 0x0010   (0x0010)  
};

/// Struct /Script/Pal7.AchievementInfo
/// Size: 0x0048 (0x000008 - 0x000050)
struct FAchievementInfo : FTableRowBase
{ 
	FGameplayTag                                       AchiventAPIName;                                            // 0x0008   (0x0008)  
	SDK_UNDEFINED(24,1871) /* FText */                 __um(Title);                                                // 0x0010   (0x0018)  
	SDK_UNDEFINED(24,1872) /* FText */                 __um(Describe);                                             // 0x0028   (0x0018)  
	EAchievementType                                   AchievementType;                                            // 0x0040   (0x0001)  
	EMedalType                                         MedalType;                                                  // 0x0041   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0042   (0x0002)  MISSED
	int32_t                                            CurrentValue;                                               // 0x0044   (0x0004)  
	bool                                               bHasProgress;                                               // 0x0048   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0049   (0x0003)  MISSED
	int32_t                                            UnlockValue;                                                // 0x004C   (0x0004)  
};

/// Struct /Script/Pal7.SoundBySurfaceType
/// Size: 0x0018 (0x000008 - 0x000020)
struct FSoundBySurfaceType : FTableRowBase
{ 
	EPhysicalSurface                                   SurfaceType;                                                // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	SDK_UNDEFINED(16,1873) /* FString */               __um(SoundLable);                                           // 0x0010   (0x0010)  
};

/// Struct /Script/Pal7.ParticleBySurfaceType
/// Size: 0x0030 (0x000008 - 0x000038)
struct FParticleBySurfaceType : FTableRowBase
{ 
	EPhysicalSurface                                   SurfaceType;                                                // 0x0008   (0x0001)  
	EMovementState                                     MovementState;                                              // 0x0009   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x000A   (0x0006)  MISSED
	SDK_UNDEFINED(40,1874) /* TWeakObjectPtr<UParticleSystem*> */ __um(Particle);                                  // 0x0010   (0x0028)  
};

/// Struct /Script/Pal7.CustomnSoundItem
/// Size: 0x0010 (0x000000 - 0x000010)
struct FCustomnSoundItem
{ 
	class USoundAtomCue*                               SoundSrc;                                                   // 0x0000   (0x0008)  
	float                                              Volume;                                                     // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/Pal7.MonsterInBattleVoice
/// Size: 0x0020 (0x000008 - 0x000028)
struct FMonsterInBattleVoice : FTableRowBase
{ 
	EMonsterKind                                       MonsterKind;                                                // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	int32_t                                            Property;                                                   // 0x000C   (0x0004)  
	class USoundAttenuation*                           AttenuationSettings;                                        // 0x0010   (0x0008)  
	TArray<FCustomnSoundItem>                          SoundRandomMap;                                             // 0x0018   (0x0010)  
};

/// Struct /Script/Pal7.PartnerRndVoiceSQItem
/// Size: 0x0068 (0x000000 - 0x000068)
struct FPartnerRndVoiceSQItem
{ 
	float                                              TriggerWeight;                                              // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	SDK_UNDEFINED(80,1875) /* TMap<ULevelSequence*, float> */ __um(SoundRandMap);                                  // 0x0008   (0x0050)  
	TArray<EPaladinHeroName>                           RequreHerosInQueue;                                         // 0x0058   (0x0010)  
};

/// Struct /Script/Pal7.BattleEndPartnerVoice
/// Size: 0x0018 (0x000008 - 0x000020)
struct FBattleEndPartnerVoice : FTableRowBase
{ 
	EBattleEndGrade                                    BattleGrade;                                                // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	TArray<FPartnerRndVoiceSQItem>                     SoundRandomMap;                                             // 0x0010   (0x0010)  
};

/// Struct /Script/Pal7.PartnerRndVoiceItem
/// Size: 0x0058 (0x000000 - 0x000058)
struct FPartnerRndVoiceItem
{ 
	float                                              TriggerWeight;                                              // 0x0000   (0x0004)  
	EPaladinHeroName                                   TargetHeroName;                                             // 0x0004   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0005   (0x0003)  MISSED
	SDK_UNDEFINED(80,1876) /* TMap<FCustomnSoundItem, float> */ __um(SoundRandMap);                                // 0x0008   (0x0050)  
};

/// Struct /Script/Pal7.PartnerVoiceToLeaderInFighting
/// Size: 0x0020 (0x000008 - 0x000028)
struct FPartnerVoiceToLeaderInFighting : FTableRowBase
{ 
	EPaladinHeroName                                   HeroType;                                                   // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	float                                              ActiveProbability;                                          // 0x000C   (0x0004)  
	class USoundAttenuation*                           AttenuationSettings;                                        // 0x0010   (0x0008)  
	TArray<FPartnerRndVoiceItem>                       SoundRandomMap;                                             // 0x0018   (0x0010)  
};

/// Struct /Script/Pal7.PlayerRespawnOrDeadVoiceSetting
/// Size: 0x00B0 (0x000008 - 0x0000B8)
struct FPlayerRespawnOrDeadVoiceSetting : FTableRowBase
{ 
	EPaladinHeroName                                   HeroType;                                                   // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	float                                              ActiveProbability;                                          // 0x000C   (0x0004)  
	class USoundAttenuation*                           AttenuationSettings;                                        // 0x0010   (0x0008)  
	SDK_UNDEFINED(80,1877) /* TMap<FCustomnSoundItem, float> */ __um(SoundRandMap_Respawn);                        // 0x0018   (0x0050)  
	SDK_UNDEFINED(80,1878) /* TMap<FCustomnSoundItem, float> */ __um(SoundRandMap_Death);                          // 0x0068   (0x0050)  
};

/// Struct /Script/Pal7.ChangePlayerVoiceSetting
/// Size: 0x0060 (0x000008 - 0x000068)
struct FChangePlayerVoiceSetting : FTableRowBase
{ 
	EPaladinHeroName                                   HeroType;                                                   // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	float                                              ActiveProbability;                                          // 0x000C   (0x0004)  
	class USoundAttenuation*                           AttenuationSettings;                                        // 0x0010   (0x0008)  
	SDK_UNDEFINED(80,1879) /* TMap<FCustomnSoundItem, float> */ __um(SoundRandMap);                                // 0x0018   (0x0050)  
};

/// Struct /Script/Pal7.CrossSkillData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FCrossSkillData
{ 
	FVector                                            Position;                                                   // 0x0000   (0x000C)  
	bool                                               PairFlag;                                                   // 0x000C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x000D   (0x0003)  MISSED
};

/// Struct /Script/Pal7.PitfallArea
/// Size: 0x0008 (0x000000 - 0x000008)
struct FPitfallArea
{ 
	float                                              Width;                                                      // 0x0000   (0x0004)  
	float                                              Height;                                                     // 0x0004   (0x0004)  
};

/// Struct /Script/Pal7.StageProperty
/// Size: 0x0010 (0x000000 - 0x000010)
struct FStageProperty
{ 
	TArray<int32_t>                                    StageProbility;                                             // 0x0000   (0x0010)  
};

/// Struct /Script/Pal7.BossChallengeSuccessRecords
/// Size: 0x0018 (0x000000 - 0x000018)
struct FBossChallengeSuccessRecords
{ 
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0000   (0x0018)  MISSED
};

/// Struct /Script/Pal7.PlayerPlatformMisc
/// Size: 0x0078 (0x000000 - 0x000078)
struct FPlayerPlatformMisc
{ 
	SDK_UNDEFINED(16,1880) /* FString */               __um(PlatformName);                                         // 0x0000   (0x0010)  
	SDK_UNDEFINED(16,1881) /* FString */               __um(OSLable);                                              // 0x0010   (0x0010)  
	SDK_UNDEFINED(16,1882) /* FString */               __um(CPUBrand);                                             // 0x0020   (0x0010)  
	SDK_UNDEFINED(16,1883) /* FString */               __um(GPUBrand);                                             // 0x0030   (0x0010)  
	SDK_UNDEFINED(16,1884) /* FString */               __um(GPUUserDriverVersion);                                 // 0x0040   (0x0010)  
	int32_t                                            MemerySizeGB;                                               // 0x0050   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0054   (0x0004)  MISSED
	SDK_UNDEFINED(16,1885) /* FString */               __um(PCName);                                               // 0x0058   (0x0010)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0068   (0x0010)  MISSED
};

/// Struct /Script/Pal7.VolumSetting
/// Size: 0x0010 (0x000000 - 0x000010)
struct FVolumSetting
{ 
	int32_t                                            MasterVolume;                                               // 0x0000   (0x0004)  
	int32_t                                            BackgroundVolume;                                           // 0x0004   (0x0004)  
	int32_t                                            CharacterVolume;                                            // 0x0008   (0x0004)  
	int32_t                                            EnvironmentVolume;                                          // 0x000C   (0x0004)  
};

/// Struct /Script/Pal7.DataCollectInfo
/// Size: 0x0520 (0x000000 - 0x000520)
struct FDataCollectInfo
{ 
	SDK_UNDEFINED(16,1886) /* FString */               __um(UserID);                                               // 0x0000   (0x0010)  
	EDataCollectFileVersion                            FileVersion;                                                // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0011   (0x0007)  MISSED
	FPlayerPlatformMisc                                PlateFormInfo;                                              // 0x0018   (0x0078)  
	FName                                              MainQuestID;                                                // 0x0090   (0x0008)  
	bool                                               bAcomplished;                                               // 0x0098   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0099   (0x0007)  MISSED
	FDateTime                                          AcomplishTime;                                              // 0x00A0   (0x0008)  
	FDateTime                                          GameTime;                                                   // 0x00A8   (0x0008)  
	int32_t                                            HeroLevel;                                                  // 0x00B0   (0x0004)  
	float                                              AchievementFinishProgress;                                  // 0x00B4   (0x0004)  
	float                                              MusemProgress;                                              // 0x00B8   (0x0004)  
	EPaladinGameDifficulty                             StartGameDifficulty;                                        // 0x00BC   (0x0001)  
	bool                                               bChoosenEasier;                                             // 0x00BD   (0x0001)  
	unsigned char                                      UnknownData02_5[0x2];                                       // 0x00BE   (0x0002)  MISSED
	SDK_UNDEFINED(80,1887) /* TMap<EBossBattleName, FBossBattaleRecord> */ __um(BossBattleInfo);                   // 0x00C0   (0x0050)  
	TArray<FName>                                      SkipedSQ;                                                   // 0x0110   (0x0010)  
	SDK_UNDEFINED(80,1888) /* TMap<FName, int32_t> */  __um(SkillUseTimes);                                        // 0x0120   (0x0050)  
	SDK_UNDEFINED(80,1889) /* TMap<FName, FLevelChallengeRecord> */ __um(LevelChallengeRecords);                   // 0x0170   (0x0050)  
	SDK_UNDEFINED(80,1890) /* TMap<FName, bool> */     __um(QuestedTiaoTiaoLe);                                    // 0x01C0   (0x0050)  
	SDK_UNDEFINED(80,1891) /* TMap<int32_t, FWeaponEnhance> */ __um(WeaponUpperLevel);                             // 0x0210   (0x0050)  
	TArray<int32_t>                                    BoughtWeapons;                                              // 0x0260   (0x0010)  
	SDK_UNDEFINED(80,1892) /* TMap<int32_t, int32_t> */ __um(EaternFoods);                                         // 0x0270   (0x0050)  
	SDK_UNDEFINED(80,1893) /* TMap<int32_t, int32_t> */ __um(MedicineUseTimes);                                    // 0x02C0   (0x0050)  
	SDK_UNDEFINED(80,1894) /* TMap<FName, FPetRuntimeData> */ __um(PetRuntimeData);                                // 0x0310   (0x0050)  
	float                                              CardGameCollectProgress;                                    // 0x0360   (0x0004)  
	int32_t                                            CardGamePlayTimes;                                          // 0x0364   (0x0004)  
	int32_t                                            GainedTotalMoney;                                           // 0x0368   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x036C   (0x0004)  MISSED
	SDK_UNDEFINED(80,1895) /* TMap<int32_t, int32_t> */ __um(SoldItems);                                           // 0x0370   (0x0050)  
	SDK_UNDEFINED(80,1896) /* TMap<FName, FPickupItems> */ __um(LevelPickupItems);                                 // 0x03C0   (0x0050)  
	SDK_UNDEFINED(80,1897) /* TMap<FName, FMiniGameRecord> */ __um(MiniGameRecords);                               // 0x0410   (0x0050)  
	SDK_UNDEFINED(80,1898) /* TMap<FName, FChapterResultData> */ __um(ChapterRecords);                             // 0x0460   (0x0050)  
	FVolumSetting                                      VolumSetting;                                               // 0x04B0   (0x0010)  
	int32_t                                            TouchPetNum;                                                // 0x04C0   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x04C4   (0x0004)  MISSED
	SDK_UNDEFINED(80,1899) /* TMap<EBossBattleName, int32_t> */ __um(BossChallengeRecords);                        // 0x04C8   (0x0050)  
	FDateTime                                          LastUploadTime;                                             // 0x0518   (0x0008)  
};

/// Struct /Script/Pal7.ChapterResultData
/// Size: 0x0060 (0x000000 - 0x000060)
struct FChapterResultData
{ 
	FName                                              ChapterID;                                                  // 0x0000   (0x0008)  
	SDK_UNDEFINED(24,1900) /* FText */                 __um(CurrentTitle);                                         // 0x0008   (0x0018)  
	FDateTime                                          ChapterFinishTime;                                          // 0x0020   (0x0008)  
	TArray<FName>                                      FinishedBranchQuestInChapter;                               // 0x0028   (0x0010)  
	TArray<FName>                                      TackenBranchQuestInChapter;                                 // 0x0038   (0x0010)  
	int32_t                                            KilledMonsterNum;                                           // 0x0048   (0x0004)  
	int32_t                                            LevelInChapterEnd;                                          // 0x004C   (0x0004)  
	int32_t                                            LastMoneyInChapterEnd;                                      // 0x0050   (0x0004)  
	float                                              ChapterFreeWalkTime;                                        // 0x0054   (0x0004)  
	int32_t                                            NPCDiallogTimesInChapter;                                   // 0x0058   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x005C   (0x0004)  MISSED
};

/// Struct /Script/Pal7.MiniGameRecord
/// Size: 0x0008 (0x000000 - 0x000008)
struct FMiniGameRecord
{ 
	int32_t                                            SuccessCount;                                               // 0x0000   (0x0004)  
	int32_t                                            FailCount;                                                  // 0x0004   (0x0004)  
};

/// Struct /Script/Pal7.PickupItems
/// Size: 0x0050 (0x000000 - 0x000050)
struct FPickupItems
{ 
	SDK_UNDEFINED(80,1901) /* TMap<int32_t, int32_t> */ __um(Items);                                               // 0x0000   (0x0050)  
};

/// Struct /Script/Pal7.PetRuntimeData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FPetRuntimeData
{ 
	TArray<int32_t>                                    SkillLevels;                                                // 0x0000   (0x0010)  
	FTimespan                                          UseTimes;                                                   // 0x0010   (0x0008)  
};

/// Struct /Script/Pal7.WeaponEnhance
/// Size: 0x0050 (0x000000 - 0x000050)
struct FWeaponEnhance
{ 
	SDK_UNDEFINED(80,1902) /* TMap<int32_t, int32_t> */ __um(WeaponEnhanceItem);                                   // 0x0000   (0x0050)  
};

/// Struct /Script/Pal7.LevelChallengeRecord
/// Size: 0x0010 (0x000000 - 0x000010)
struct FLevelChallengeRecord
{ 
	int32_t                                            LevelChallengeWastTime;                                     // 0x0000   (0x0004)  
	int32_t                                            LevelChallengeFailTimes;                                    // 0x0004   (0x0004)  
	EPaladinGameDifficulty                             Difficulty;                                                 // 0x0008   (0x0001)  
	bool                                               Finished;                                                   // 0x0009   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x000A   (0x0006)  MISSED
};

/// Struct /Script/Pal7.BossBattaleRecord
/// Size: 0x0068 (0x000000 - 0x000068)
struct FBossBattaleRecord
{ 
	int32_t                                            BossPassTime;                                               // 0x0000   (0x0004)  
	int32_t                                            BossReChallengeTime;                                        // 0x0004   (0x0004)  
	SDK_UNDEFINED(80,1903) /* TMap<EPaladinHeroName, int32_t> */ __um(HeroControlledTime);                         // 0x0008   (0x0050)  
	TArray<EPaladinGameDifficulty>                     BossBattleDifficulty;                                       // 0x0058   (0x0010)  
};

/// Struct /Script/Pal7.DialogueQuestCondition
/// Size: 0x0028 (0x000000 - 0x000028)
struct FDialogueQuestCondition
{ 
	FName                                              QuestID;                                                    // 0x0000   (0x0008)  
	TArray<int32_t>                                    NodeIDs;                                                    // 0x0008   (0x0010)  
	FDialogueConditions                                Conditions;                                                 // 0x0018   (0x0010)  
};

/// Struct /Script/Pal7.DialogueQuestConditions
/// Size: 0x0018 (0x000000 - 0x000018)
struct FDialogueQuestConditions
{ 
	FName                                              QuestID;                                                    // 0x0000   (0x0008)  
	TArray<FDialogueQuestCondition>                    QuestConditions;                                            // 0x0008   (0x0010)  
};

/// Struct /Script/Pal7.DialogueEvents
/// Size: 0x0040 (0x000000 - 0x000040)
struct FDialogueEvents
{ 
	class UAnimMontage*                                AnimationMontage;                                           // 0x0000   (0x0008)  
	SDK_UNDEFINED(16,1904) /* FString */               __um(EventName);                                            // 0x0008   (0x0010)  
	bool                                               bNeedAdditionalMessage;                                     // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0019   (0x0007)  MISSED
	SDK_UNDEFINED(16,1905) /* FString */               __um(AMEventName);                                          // 0x0020   (0x0010)  
	TArray<FAdditionalMessage>                         AdditionMessage;                                            // 0x0030   (0x0010)  
};

/// Struct /Script/Pal7.DLCInfoRow
/// Size: 0x0040 (0x000008 - 0x000048)
struct FDLCInfoRow : FTableRowBase
{ 
	int32_t                                            SteamDLCID;                                                 // 0x0008   (0x0004)  
	int32_t                                            CubeDLCID;                                                  // 0x000C   (0x0004)  
	SDK_UNDEFINED(24,1906) /* FText */                 __um(DLCName);                                              // 0x0010   (0x0018)  
	SDK_UNDEFINED(24,1907) /* FText */                 __um(ExtraDesc);                                            // 0x0028   (0x0018)  
	FName                                              Comments;                                                   // 0x0040   (0x0008)  
};

/// Struct /Script/Pal7.DLCItemRow
/// Size: 0x0010 (0x000008 - 0x000018)
struct FDLCItemRow : FTableRowBase
{ 
	FName                                              DLCID;                                                      // 0x0008   (0x0008)  
	FName                                              Comments;                                                   // 0x0010   (0x0008)  
};

/// Struct /Script/Pal7.MinimapTileInfo
/// Size: 0x0028 (0x000000 - 0x000028)
struct FMinimapTileInfo
{ 
	class UTexture2D*                                  MapTexture;                                                 // 0x0000   (0x0008)  
	FVector2D                                          ScreenPosition;                                             // 0x0008   (0x0008)  
	FVector2D                                          ScreenSize;                                                 // 0x0010   (0x0008)  
	FVector2D                                          CoordinatePosition;                                         // 0x0018   (0x0008)  
	FVector2D                                          CoordinateSize;                                             // 0x0020   (0x0008)  
};

/// Struct /Script/Pal7.MinimapInfo
/// Size: 0x0028 (0x000000 - 0x000028)
struct FMinimapInfo
{ 
	float                                              leftbottomX;                                                // 0x0000   (0x0004)  
	float                                              leftbottomY;                                                // 0x0004   (0x0004)  
	float                                              mapZoom;                                                    // 0x0008   (0x0004)  
	int32_t                                            textureSize;                                                // 0x000C   (0x0004)  
	TArray<class UTexture2D*>                          MapTextureArray;                                            // 0x0010   (0x0010)  
	int32_t                                            arrayLenthSqrt;                                             // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/Pal7.FightingBossGroupTable
/// Size: 0x0018 (0x000008 - 0x000020)
struct FFightingBossGroupTable : FTableRowBase
{ 
	EBossBattleName                                    BossBattleName;                                             // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	TArray<EMonsterKind>                               GroupTypes;                                                 // 0x0010   (0x0010)  
};

/// Struct /Script/Pal7.MonsterDifficultyOverrideData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FMonsterDifficultyOverrideData
{ 
	float                                              AttackInterval_Override;                                    // 0x0000   (0x0004)  
	float                                              AttackDistance_Override;                                    // 0x0004   (0x0004)  
	SDK_UNDEFINED(40,1908) /* TWeakObjectPtr<UBehaviorTree*> */ __um(BotBehavior_Override);                        // 0x0008   (0x0028)  
};

/// Struct /Script/Pal7.Range_Angle
/// Size: 0x0008 (0x000000 - 0x000008)
struct FRange_Angle
{ 
	float                                              Min;                                                        // 0x0000   (0x0004)  
	float                                              Max;                                                        // 0x0004   (0x0004)  
};

/// Struct /Script/Pal7.MovieSceneDialogueSharedTrack
/// Size: 0x0001 (0x000000 - 0x000001)
struct FMovieSceneDialogueSharedTrack
{ 
	unsigned char                                      UnknownData00_2[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Pal7.MovieSceneDialogueSectionTemplate
/// Size: 0x0060 (0x000020 - 0x000080)
struct FMovieSceneDialogueSectionTemplate : FMovieSceneEvalTemplate
{ 
	SDK_UNDEFINED(24,1909) /* FText */                 __um(TitleInfo);                                            // 0x0020   (0x0018)  
	SDK_UNDEFINED(24,1910) /* FText */                 __um(DialogueInfo);                                         // 0x0038   (0x0018)  
	SDK_UNDEFINED(24,1911) /* FText */                 __um(SpeakerName);                                          // 0x0050   (0x0018)  
	FName                                              ActorID;                                                    // 0x0068   (0x0008)  
	class UAnimSequenceBase*                           FaceAnim;                                                   // 0x0070   (0x0008)  
	bool                                               bLoopFaceAnim;                                              // 0x0078   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0079   (0x0007)  MISSED
};

/// Struct /Script/Pal7.MovieSceneHandleShakeSharedTrack
/// Size: 0x0001 (0x000000 - 0x000001)
struct FMovieSceneHandleShakeSharedTrack
{ 
	unsigned char                                      UnknownData00_2[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Pal7.MovieSceneHandleShakeSectionTemplate
/// Size: 0x0010 (0x000020 - 0x000030)
struct FMovieSceneHandleShakeSectionTemplate : FMovieSceneEvalTemplate
{ 
	class UForceFeedbackEffect*                        HandleForceFeedbackEffect;                                  // 0x0020   (0x0008)  
	float                                              DurationScale;                                              // 0x0028   (0x0004)  
	float                                              VerticalScale;                                              // 0x002C   (0x0004)  
};

/// Struct /Script/Pal7.PaladinAttributesInSet
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPaladinAttributesInSet
{ 
	TArray<FGameplayAttribute>                         AttributeList;                                              // 0x0000   (0x0010)  
};

/// Struct /Script/Pal7.PaladinChangeAttributeEffectConfigRow
/// Size: 0x0010 (0x000008 - 0x000018)
struct FPaladinChangeAttributeEffectConfigRow : FTableRowBase
{ 
	class UClass*                                      AddGE;                                                      // 0x0008   (0x0008)  
	class UClass*                                      MulGE;                                                      // 0x0010   (0x0008)  
};

/// Struct /Script/Pal7.PaladinActionCollections
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPaladinActionCollections
{ 
	TArray<class UPaladinAction*>                      Actions;                                                    // 0x0000   (0x0010)  
};

/// Struct /Script/Pal7.AISleepConfig
/// Size: 0x0010 (0x000000 - 0x000010)
struct FAISleepConfig
{ 
	float                                              DistanceStartToSleep;                                       // 0x0000   (0x0004)  
	float                                              WakeUpDistanceRatio;                                        // 0x0004   (0x0004)  
	float                                              CheckIntervalWhenSleep;                                     // 0x0008   (0x0004)  
	float                                              CheckIntervalWhenWakeUp;                                    // 0x000C   (0x0004)  
};

/// Struct /Script/Pal7.CategoryNames
/// Size: 0x0010 (0x000000 - 0x000010)
struct FCategoryNames
{ 
	SDK_UNDEFINED(16,1912) /* TArray<FString> */       __um(Names);                                                // 0x0000   (0x0010)  
};

/// Struct /Script/Pal7.PaladinAnimSequenceInfo
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPaladinAnimSequenceInfo
{ 
	class UAnimSequence*                               AnimSequence;                                               // 0x0000   (0x0008)  
	float                                              BlendInTime;                                                // 0x0008   (0x0004)  
	float                                              BlendOutTime;                                               // 0x000C   (0x0004)  
};

/// Struct /Script/Pal7.PaladinGPUInfo
/// Size: 0x000C (0x000000 - 0x00000C)
struct FPaladinGPUInfo
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
	EGraphicsCardBrand                                 Brand;                                                      // 0x0008   (0x0001)  
	bool                                               IsLaptop;                                                   // 0x0009   (0x0001)  
	bool                                               IsTi;                                                       // 0x000A   (0x0001)  
	bool                                               IsSuper;                                                    // 0x000B   (0x0001)  
};

/// Struct /Script/Pal7.MergeSKMeshOverrideMaterials
/// Size: 0x0010 (0x000000 - 0x000010)
struct FMergeSKMeshOverrideMaterials
{ 
	TArray<FSkeletalMaterial>                          MatsOverride;                                               // 0x0000   (0x0010)  
};

/// Struct /Script/Pal7.PaladinBubbleInfo
/// Size: 0x0028 (0x000000 - 0x000028)
struct FPaladinBubbleInfo
{ 
	FName                                              ActorID;                                                    // 0x0000   (0x0008)  
	SDK_UNDEFINED(24,1913) /* FText */                 __um(Content);                                              // 0x0008   (0x0018)  
	float                                              Duration;                                                   // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/Pal7.PaladinBubbleTableRow
/// Size: 0x0028 (0x000008 - 0x000030)
struct FPaladinBubbleTableRow : FTableRowBase
{ 
	FName                                              ActorID;                                                    // 0x0008   (0x0008)  
	SDK_UNDEFINED(24,1914) /* FText */                 __um(Content);                                              // 0x0010   (0x0018)  
	float                                              ExpireDuration;                                             // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/Pal7.PaladinCameraModifierInfo
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPaladinCameraModifierInfo
{ 
	TArray<class UCameraModifier*>                     CameraModifiers;                                            // 0x0000   (0x0010)  
};

/// Struct /Script/Pal7.FoodTagData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FFoodTagData
{ 
	FGameplayTag                                       RecipeTag;                                                  // 0x0000   (0x0008)  
	FGameplayTag                                       WineTag;                                                    // 0x0008   (0x0008)  
	FGameplayTag                                       CombineTag;                                                 // 0x0010   (0x0008)  
};

/// Struct /Script/Pal7.FoodCombinationDataRow
/// Size: 0x0078 (0x000008 - 0x000080)
struct FFoodCombinationDataRow : FTableRowBase
{ 
	SDK_UNDEFINED(16,1915) /* FString */               __um(Des1);                                                 // 0x0008   (0x0010)  
	SDK_UNDEFINED(16,1916) /* FString */               __um(Des2);                                                 // 0x0018   (0x0010)  
	SDK_UNDEFINED(24,1917) /* FText */                 __um(Des3);                                                 // 0x0028   (0x0018)  
	int32_t                                            RecipeID;                                                   // 0x0040   (0x0004)  
	int32_t                                            WineID;                                                     // 0x0044   (0x0004)  
	float                                              Chance;                                                     // 0x0048   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x004C   (0x0004)  MISSED
	FFoodEffectData                                    BuffData;                                                   // 0x0050   (0x0028)  
	FGameplayTag                                       MuseumTag;                                                  // 0x0078   (0x0008)  
};

/// Struct /Script/Pal7.FoodDataRow
/// Size: 0x00E8 (0x000008 - 0x0000F0)
struct FFoodDataRow : FTableRowBase
{ 
	SDK_UNDEFINED(16,1918) /* FString */               __um(Des1);                                                 // 0x0008   (0x0010)  
	SDK_UNDEFINED(16,1919) /* FString */               __um(Des2);                                                 // 0x0018   (0x0010)  
	TArray<EPaladinCookSurroundType>                   EnableSurroundTypeList;                                     // 0x0028   (0x0010)  
	SDK_UNDEFINED(80,1920) /* TMap<int32_t, int32_t> */ __um(Materials);                                           // 0x0038   (0x0050)  
	TArray<FFoodEffectData>                            BuffData;                                                   // 0x0088   (0x0010)  
	SDK_UNDEFINED(40,1921) /* TWeakObjectPtr<UClass*> */ __um(InDoorFoodBP);                                       // 0x0098   (0x0028)  
	SDK_UNDEFINED(40,1922) /* TWeakObjectPtr<UClass*> */ __um(OutDoorFoodBP);                                      // 0x00C0   (0x0028)  
	FGameplayTag                                       MuseumTag;                                                  // 0x00E8   (0x0008)  
};

/// Struct /Script/Pal7.CameraModifierTable
/// Size: 0x0030 (0x000008 - 0x000038)
struct FCameraModifierTable : FTableRowBase
{ 
	FName                                              Name;                                                       // 0x0008   (0x0008)  
	SDK_UNDEFINED(40,1923) /* TWeakObjectPtr<UClass*> */ __um(Modifier);                                           // 0x0010   (0x0028)  
};

/// Struct /Script/Pal7.MiniGameContext
/// Size: 0x0014 (0x000000 - 0x000014)
struct FMiniGameContext
{ 
	FName                                              MiniGameLevel;                                              // 0x0000   (0x0008)  
	FName                                              PreLevel;                                                   // 0x0008   (0x0008)  
	bool                                               bUnLoadPreLevel;                                            // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0011   (0x0003)  MISSED
};

/// Struct /Script/Pal7.PaladinGameplayAbilityBindInfo
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPaladinGameplayAbilityBindInfo
{ 
	EPaladinAbilityInputBinds                          Command;                                                    // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	class UClass*                                      GameplayAbilityClass;                                       // 0x0008   (0x0008)  
};

/// Struct /Script/Pal7.GameplayAbilityTargetData_OverlapInfo
/// Size: 0x0048 (0x000008 - 0x000050)
struct FGameplayAbilityTargetData_OverlapInfo : FGameplayAbilityTargetData
{ 
	SDK_UNDEFINED(8,1924) /* TWeakObjectPtr<AActor*> */ __um(Actor);                                               // 0x0008   (0x0008)  
	SDK_UNDEFINED(16,1925) /* TArray<TWeakObjectPtr<UPrimitiveComponent*>> */ __um(OverlapComponents);             // 0x0010   (0x0010)  
	FTransform                                         OriginTransform;                                            // 0x0020   (0x0030)  
};

/// Struct /Script/Pal7.PaladinGameplayEffectContext
/// Size: 0x0030 (0x000070 - 0x0000A0)
struct FPaladinGameplayEffectContext : FGameplayEffectContext
{ 
	FQuat                                              WorldOrientation;                                           // 0x0070   (0x0010)  
	bool                                               bHasWorldOrientation;                                       // 0x0080   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0081   (0x0003)  MISSED
	FVector_NetQuantizeNormal                          EffectDirection;                                            // 0x0084   (0x000C)  
	bool                                               bHasEffectDirection;                                        // 0x0090   (0x0001)  
	unsigned char                                      UnknownData01_6[0xF];                                       // 0x0091   (0x000F)  MISSED
};

/// Struct /Script/Pal7.PaladinRayTracingConfigRow
/// Size: 0x0010 (0x000008 - 0x000018)
struct FPaladinRayTracingConfigRow : FTableRowBase
{ 
	SDK_UNDEFINED(16,1926) /* TArray<FString> */       __um(GraphicsIDList);                                       // 0x0008   (0x0010)  
};

/// Struct /Script/Pal7.PaladinActors
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPaladinActors
{ 
	TArray<class AActor*>                              Acors;                                                      // 0x0000   (0x0010)  
};

/// Struct /Script/Pal7.TipSettings
/// Size: 0x0080 (0x000000 - 0x000080)
struct FTipSettings
{ 
	SDK_UNDEFINED(24,1927) /* FText */                 __um(TipTextTitle);                                         // 0x0000   (0x0018)  
	SDK_UNDEFINED(24,1928) /* FText */                 __um(TipText);                                              // 0x0018   (0x0018)  
	FSlateFontInfo                                     Font;                                                       // 0x0030   (0x0050)  
};

/// Struct /Script/Pal7.ImageSequenceSettings
/// Size: 0x00A8 (0x000000 - 0x0000A8)
struct FImageSequenceSettings
{ 
	TArray<class UTexture2D*>                          Images;                                                     // 0x0000   (0x0010)  
	FVector2D                                          Scale;                                                      // 0x0010   (0x0008)  
	float                                              Interval;                                                   // 0x0018   (0x0004)  
	bool                                               bPlayReverse;                                               // 0x001C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x001D   (0x0003)  MISSED
	FSlateBrush                                        BorderBackground;                                           // 0x0020   (0x0088)  
};

/// Struct /Script/Pal7.PaladinDodgeDataRow
/// Size: 0x0010 (0x000008 - 0x000018)
struct FPaladinDodgeDataRow : FTableRowBase
{ 
	FName                                              MontageSectionName;                                         // 0x0008   (0x0008)  
	float                                              MinValue;                                                   // 0x0010   (0x0004)  
	float                                              MaxValue;                                                   // 0x0014   (0x0004)  
};

/// Struct /Script/Pal7.PaladinSlateBrushWithSoftPtr
/// Size: 0x0060 (0x000000 - 0x000060)
struct FPaladinSlateBrushWithSoftPtr
{ 
	SDK_UNDEFINED(40,1929) /* TWeakObjectPtr<UObject*> */ __um(Texture);                                           // 0x0000   (0x0028)  
	bool                                               UseTextureSize;                                             // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0029   (0x0003)  MISSED
	FVector2D                                          ImageSize;                                                  // 0x002C   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0034   (0x0004)  MISSED
	FSlateColor                                        TintColor;                                                  // 0x0038   (0x0028)  
};

/// Struct /Script/Pal7.PaladinGroupInfo
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPaladinGroupInfo
{ 
	TArray<EPaladinHeroName>                           GroupHeroNames;                                             // 0x0000   (0x0010)  
};

/// Struct /Script/Pal7.PaladinGroupDataRow
/// Size: 0x0010 (0x000008 - 0x000018)
struct FPaladinGroupDataRow : FTableRowBase
{ 
	TArray<FPaladinGroupInfo>                          GroupInfos;                                                 // 0x0008   (0x0010)  
};

/// Struct /Script/Pal7.TimeBackQuestNode
/// Size: 0x0018 (0x000000 - 0x000018)
struct FTimeBackQuestNode
{ 
	FGameplayTag                                       NodeTag;                                                    // 0x0000   (0x0008)  
	FName                                              MapID;                                                      // 0x0008   (0x0008)  
	FName                                              StartPos;                                                   // 0x0010   (0x0008)  
};

/// Struct /Script/Pal7.TimeBackQuestRow
/// Size: 0x0018 (0x000008 - 0x000020)
struct FTimeBackQuestRow : FTableRowBase
{ 
	FName                                              QuestID;                                                    // 0x0008   (0x0008)  
	TArray<FTimeBackQuestNode>                         SubNodes;                                                   // 0x0010   (0x0010)  
};

/// Struct /Script/Pal7.DynamicProbilityContainer
/// Size: 0x0050 (0x000000 - 0x000050)
struct FDynamicProbilityContainer
{ 
	SDK_UNDEFINED(80,1930) /* TMap<FName, FDynamicProbability> */ __um(DynamicProbabilityPool);                    // 0x0000   (0x0050)  
};

/// Struct /Script/Pal7.DynamicProbability
/// Size: 0x0010 (0x000000 - 0x000010)
struct FDynamicProbability
{ 
	float                                              DefaultProbability;                                         // 0x0000   (0x0004)  
	float                                              MinProbability;                                             // 0x0004   (0x0004)  
	float                                              ModifyPerNotHit;                                            // 0x0008   (0x0004)  
	float                                              CurrentProbability;                                         // 0x000C   (0x0004)  
};

/// Struct /Script/Pal7.PaladinItemInfo
/// Size: 0x0008 (0x000000 - 0x000008)
struct FPaladinItemInfo
{ 
	int32_t                                            ItmeId;                                                     // 0x0000   (0x0004)  
	int32_t                                            ItmeCount;                                                  // 0x0004   (0x0004)  
};

/// Struct /Script/Pal7.PaladinGrantAttrSetHeroRow
/// Size: 0x0018 (0x000000 - 0x000018)
struct FPaladinGrantAttrSetHeroRow
{ 
	EPaladinHeroName                                   HeroType;                                                   // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            CharacterLevel;                                             // 0x0004   (0x0004)  
	TArray<int32_t>                                    ToEquipItemIds;                                             // 0x0008   (0x0010)  
};

/// Struct /Script/Pal7.PaladinGrantAttrSetRow
/// Size: 0x0020 (0x000008 - 0x000028)
struct FPaladinGrantAttrSetRow : FTableRowBase
{ 
	TArray<FPaladinItemInfo>                           ItemInfos;                                                  // 0x0008   (0x0010)  
	TArray<FPaladinGrantAttrSetHeroRow>                Heros;                                                      // 0x0018   (0x0010)  
};

/// Struct /Script/Pal7.PaladinCookDataRow
/// Size: 0x00C8 (0x000008 - 0x0000D0)
struct FPaladinCookDataRow : FTableRowBase
{ 
	SDK_UNDEFINED(24,1931) /* FText */                 __um(FoodName);                                             // 0x0008   (0x0018)  
	SDK_UNDEFINED(24,1932) /* FText */                 __um(FoodDescription);                                      // 0x0020   (0x0018)  
	SDK_UNDEFINED(24,1933) /* FText */                 __um(FoodEffectDescription);                                // 0x0038   (0x0018)  
	bool                                               bIsDrink;                                                   // 0x0050   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0051   (0x0003)  MISSED
	int32_t                                            FoodPrice;                                                  // 0x0054   (0x0004)  
	TArray<FGameplayTag>                               FoodSetTags;                                                // 0x0058   (0x0010)  
	SDK_UNDEFINED(80,1934) /* TMap<int32_t, int32_t> */ __um(FoodRecipe);                                          // 0x0068   (0x0050)  
	class UClass*                                      FoodEffect;                                                 // 0x00B8   (0x0008)  
	class UStaticMesh*                                 FoodMesh;                                                   // 0x00C0   (0x0008)  
	class UTexture2D*                                  FoodIcon;                                                   // 0x00C8   (0x0008)  
};

/// Struct /Script/Pal7.PaladinLevelLoadingTravelWay
/// Size: 0x00A8 (0x000000 - 0x0000A8)
struct FPaladinLevelLoadingTravelWay
{ 
	unsigned char                                      UnknownData00_2[0xA8];                                      // 0x0000   (0x00A8)  MISSED
};

/// Struct /Script/Pal7.PaladinShowTipsTableRow
/// Size: 0x0040 (0x000008 - 0x000048)
struct FPaladinShowTipsTableRow : FTableRowBase
{ 
	SDK_UNDEFINED(24,1935) /* FText */                 __um(Title);                                                // 0x0008   (0x0018)  
	SDK_UNDEFINED(24,1936) /* FText */                 __um(Content);                                              // 0x0020   (0x0018)  
	float                                              ExpireDuration;                                             // 0x0038   (0x0004)  
	FName                                              Desc;                                                       // 0x003C   (0x0008)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0044   (0x0004)  MISSED
};

/// Struct /Script/Pal7.PartnerSetting
/// Size: 0x0048 (0x000008 - 0x000050)
struct FPartnerSetting : FTableRowBase
{ 
	EPaladinHeroName                                   HeroType;                                                   // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	class UBehaviorTree*                               BotBehavior;                                                // 0x0010   (0x0008)  
	FPartnerFollowSetting                              AIFollowConfig;                                             // 0x0018   (0x0018)  
	FPartnerFightSetting                               AIFightingConfig;                                           // 0x0030   (0x0018)  
	FPartnerHealSetting                                AIHealingConfig;                                            // 0x0048   (0x0008)  
};

/// Struct /Script/Pal7.PaladinRTActorInfo
/// Size: 0x0050 (0x000008 - 0x000058)
struct FPaladinRTActorInfo : FTableRowBase
{ 
	FName                                              ActorID;                                                    // 0x0008   (0x0008)  
	SDK_UNDEFINED(24,1937) /* FText */                 __um(ActorName);                                            // 0x0010   (0x0018)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0028   (0x0008)  MISSED
	SDK_UNDEFINED(40,1938) /* TWeakObjectPtr<UAnimSequenceBase*> */ __um(RandomFaceAnim);                          // 0x0030   (0x0028)  
};

/// Struct /Script/Pal7.PaladinJointStrikeAttr
/// Size: 0x0068 (0x000000 - 0x000068)
struct FPaladinJointStrikeAttr
{ 
	EPaladinHeroName                                   AccessaryHeroName;                                          // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	FName                                              AccessaryAbilityName;                                       // 0x0004   (0x0008)  
	FName                                              InstigatorAbilityName;                                      // 0x000C   (0x0008)  
	EJointStrikeType                                   JointStrikeType;                                            // 0x0014   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0015   (0x0003)  MISSED
	float                                              Distancefrompartner;                                        // 0x0018   (0x0004)  
	float                                              DistancefromLockTarget;                                     // 0x001C   (0x0004)  
	float                                              Probability;                                                // 0x0020   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0024   (0x0004)  MISSED
	FPalJointStrikeAdjust                              JointStrikeAdjustInfo;                                      // 0x0028   (0x0040)  
};

/// Struct /Script/Pal7.PaladinJointStrikeDataRow
/// Size: 0x0018 (0x000008 - 0x000020)
struct FPaladinJointStrikeDataRow : FTableRowBase
{ 
	EPaladinHeroName                                   InstigatorHeroName;                                         // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	TArray<FPaladinJointStrikeAttr>                    JointStrikeAttrs;                                           // 0x0010   (0x0010)  
};

/// Struct /Script/Pal7.PaladinAbilityUnlockConfig
/// Size: 0x0028 (0x000000 - 0x000028)
struct FPaladinAbilityUnlockConfig
{ 
	int32_t                                            UnlockLevel;                                                // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	FGameplayTagContainer                              AblityUnlockTags;                                           // 0x0008   (0x0020)  
};

/// Struct /Script/Pal7.PaladinAbilityTagConfig
/// Size: 0x0060 (0x000000 - 0x000060)
struct FPaladinAbilityTagConfig
{ 
	FGameplayTagContainer                              SourceRequiredTags;                                         // 0x0000   (0x0020)  
	FGameplayTagContainer                              SourceBlockedTags;                                          // 0x0020   (0x0020)  
	FGameplayTagContainer                              ChangeAttributeTags;                                        // 0x0040   (0x0020)  
};

/// Struct /Script/Pal7.PaladinAbilityAIConfig
/// Size: 0x0030 (0x000000 - 0x000030)
struct FPaladinAbilityAIConfig
{ 
	bool                                               IsSluggishSkill;                                            // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            Weight;                                                     // 0x0004   (0x0004)  
	bool                                               IsGreatThreatSkill;                                         // 0x0008   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	FGameplayTagContainer                              AIConfigTags;                                               // 0x0010   (0x0020)  
};

/// Struct /Script/Pal7.PaladinAbilityAttr
/// Size: 0x000C (0x000000 - 0x00000C)
struct FPaladinAbilityAttr
{ 
	float                                              MPCost;                                                     // 0x0000   (0x0004)  
	bool                                               bCanTriggerJointStrike;                                     // 0x0004   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0005   (0x0003)  MISSED
	float                                              HitGainAwakenPoint;                                         // 0x0008   (0x0004)  
};

/// Struct /Script/Pal7.PaladinAbilityCDConfig
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPaladinAbilityCDConfig
{ 
	class UClass*                                      CooldownGameplayEffectClass;                                // 0x0000   (0x0008)  
	float                                              Duration;                                                   // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/Pal7.PaladinAbilityUIData
/// Size: 0x00D8 (0x000000 - 0x0000D8)
struct FPaladinAbilityUIData
{ 
	class UTexture2D*                                  Icon;                                                       // 0x0000   (0x0008)  
	SDK_UNDEFINED(24,1939) /* FText */                 __um(AbilityDescription1);                                  // 0x0008   (0x0018)  
	SDK_UNDEFINED(24,1940) /* FText */                 __um(AbilityDescription2);                                  // 0x0020   (0x0018)  
	TArray<EPaladinAbilityType>                        AbilityType;                                                // 0x0038   (0x0010)  
	EPaladinAbilityControlType                         AbilityControlType;                                         // 0x0048   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0049   (0x0007)  MISSED
	SDK_UNDEFINED(40,1941) /* TWeakObjectPtr<UObject*> */ __um(MediaSourceMovie);                                  // 0x0050   (0x0028)  
	SDK_UNDEFINED(80,1942) /* TMap<EPaladinHeroName, TWeakObjectPtr<UObject*>> */ __um(MediaSourceMovieForQueue);  // 0x0078   (0x0050)  
	TArray<EPaladinKeyEventName>                       AbilityKeys;                                                // 0x00C8   (0x0010)  
};

/// Struct /Script/Pal7.PaladinAbilityDataRow
/// Size: 0x0218 (0x000008 - 0x000220)
struct FPaladinAbilityDataRow : FTableRowBase
{ 
	SDK_UNDEFINED(24,1943) /* FText */                 __um(AbilityName);                                          // 0x0008   (0x0018)  
	SDK_UNDEFINED(40,1944) /* TWeakObjectPtr<UClass*> */ __um(PaladinGameplayAbilityClass);                        // 0x0020   (0x0028)  
	FPaladinAbilityUnlockConfig                        UnlockConfig;                                               // 0x0048   (0x0028)  
	FPaladinAbilityTagConfig                           TagConfig;                                                  // 0x0070   (0x0060)  
	EPaladinKeyEventName                               EventNameEnum;                                              // 0x00D0   (0x0001)  
	bool                                               NeedPreAbility;                                             // 0x00D1   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x00D2   (0x0006)  MISSED
	TArray<FName>                                      AttachStaticAbilitys;                                       // 0x00D8   (0x0010)  
	bool                                               CanUseWhenNotFighting;                                      // 0x00E8   (0x0001)  
	EPaladinAbilityActiveTurnWay                       TurnWay;                                                    // 0x00E9   (0x0001)  
	bool                                               bSetWeaponInHandWhenActive;                                 // 0x00EA   (0x0001)  
	unsigned char                                      UnknownData01_5[0x5];                                       // 0x00EB   (0x0005)  MISSED
	FPaladinAbilityAIConfig                            AbilityAIConfig;                                            // 0x00F0   (0x0030)  
	FPaladinAbilityAttr                                SkillAttr;                                                  // 0x0120   (0x000C)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x012C   (0x0004)  MISSED
	FPaladinAbilityCDConfig                            CDConfig;                                                   // 0x0130   (0x0010)  
	FPaladinAbilityUIData                              AbilityUIData;                                              // 0x0140   (0x00D8)  
	bool                                               CanUseAfterAnyAbility;                                      // 0x0218   (0x0001)  
	ESkillPreLoadType                                  SkillPreLoadType;                                           // 0x0219   (0x0001)  
	unsigned char                                      UnknownData03_6[0x6];                                       // 0x021A   (0x0006)  MISSED
};

/// Struct /Script/Pal7.PaladinEXPRow
/// Size: 0x0008 (0x000008 - 0x000010)
struct FPaladinEXPRow : FTableRowBase
{ 
	int32_t                                            Exp;                                                        // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/Pal7.PaladinEffectFilter
/// Size: 0x0001 (0x000000 - 0x000001)
struct FPaladinEffectFilter
{ 
	unsigned char                                      UnknownData00_2[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Pal7.PaladinEffectStack
/// Size: 0x0028 (0x000000 - 0x000028)
struct FPaladinEffectStack
{ 
	class UClass*                                      GameplayEffect;                                             // 0x0000   (0x0008)  
	int32_t                                            StackCount;                                                 // 0x0008   (0x0004)  
	int32_t                                            NumPeriods;                                                 // 0x000C   (0x0004)  
	float                                              PeriodSecs;                                                 // 0x0010   (0x0004)  
	EGameplayEffectDurationType                        DurationType;                                               // 0x0014   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0015   (0x0003)  MISSED
	FGameplayEffectSpecHandle                          GeneratedSpec;                                              // 0x0018   (0x0010)  
};

/// Struct /Script/Pal7.PaladinFilterEffectsMap
/// Size: 0x0018 (0x000000 - 0x000018)
struct FPaladinFilterEffectsMap
{ 
	FPaladinEffectFilter                               Filter;                                                     // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	TArray<FPaladinEffectStack>                        StackedGameplayEffectsToApply;                              // 0x0008   (0x0010)  
};

/// Struct /Script/Pal7.PaladinFilterAndEffectsContainer
/// Size: 0x0018 (0x000000 - 0x000018)
struct FPaladinFilterAndEffectsContainer
{ 
	TArray<FPaladinFilterEffectsMap>                   FiltersToUse;                                               // 0x0000   (0x0010)  
	class UAbilitySystemComponent*                     SourceAbilitySystemComponent;                               // 0x0010   (0x0008)  
};

/// Struct /Script/Pal7.AssociationSkillInputData
/// Size: 0x0028 (0x000000 - 0x000028)
struct FAssociationSkillInputData
{ 
	FGameplayTagContainer                              SkillTags;                                                  // 0x0000   (0x0020)  
	FName                                              InputEvent;                                                 // 0x0020   (0x0008)  
};

/// Struct /Script/Pal7.AbilityComboDataRow
/// Size: 0x0040 (0x000008 - 0x000048)
struct FAbilityComboDataRow : FTableRowBase
{ 
	bool                                               bIsComboSlot;                                               // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	FName                                              SlotName;                                                   // 0x000C   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	class UClass*                                      PaladinGameplayAbilityClass;                                // 0x0018   (0x0008)  
	FName                                              NormalInputEvent;                                           // 0x0020   (0x0008)  
	TArray<FAssociationSkillInputData>                 ComboInputs;                                                // 0x0028   (0x0010)  
	TArray<FAssociationSkillInputData>                 BreakInputs;                                                // 0x0038   (0x0010)  
};

/// Struct /Script/Pal7.GameEndContext
/// Size: 0x0018 (0x000000 - 0x000018)
struct FGameEndContext
{ 
	EGameEndReason                                     GameEndReason;                                              // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	TArray<class AActor*>                              Instigators;                                                // 0x0008   (0x0010)  
};

/// Struct /Script/Pal7.ItemAttr
/// Size: 0x001C (0x000000 - 0x00001C)
struct FItemAttr
{ 
	float                                              HPMAX;                                                      // 0x0000   (0x0004)  
	float                                              MPMAX;                                                      // 0x0004   (0x0004)  
	float                                              PhysicalAtk;                                                // 0x0008   (0x0004)  
	float                                              PhysicalDef;                                                // 0x000C   (0x0004)  
	float                                              SpellAtk;                                                   // 0x0010   (0x0004)  
	float                                              SpellDef;                                                   // 0x0014   (0x0004)  
	float                                              CritChance;                                                 // 0x0018   (0x0004)  
};

/// Struct /Script/Pal7.PaladinBuyItemUnitInfo
/// Size: 0x0010 (0x000008 - 0x000018)
struct FPaladinBuyItemUnitInfo : FTableRowBase
{ 
	int32_t                                            Price;                                                      // 0x0008   (0x0004)  
	int32_t                                            Count;                                                      // 0x000C   (0x0004)  
	int32_t                                            MaxCount;                                                   // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/Pal7.PaladinGameDifficultyAttrMod
/// Size: 0x0020 (0x000000 - 0x000020)
struct FPaladinGameDifficultyAttrMod
{ 
	float                                              EnemyHPDifficultyRatio;                                     // 0x0000   (0x0004)  
	float                                              EnemyDamageDifficultyRatio;                                 // 0x0004   (0x0004)  
	float                                              PlayerDamageDifficultyRatio;                                // 0x0008   (0x0004)  
	float                                              EnemyAttackFrequency;                                       // 0x000C   (0x0004)  
	float                                              EnemyPhysicalAttackAddValue;                                // 0x0010   (0x0004)  
	float                                              EnemySpellAttackAddValue;                                   // 0x0014   (0x0004)  
	class UClass*                                      AIPartnerBuff;                                              // 0x0018   (0x0008)  
};

/// Struct /Script/Pal7.PaladinGeneralBuffEffectParticleConfig
/// Size: 0x00E8 (0x000000 - 0x0000E8)
struct FPaladinGeneralBuffEffectParticleConfig
{ 
	SDK_UNDEFINED(40,1945) /* TWeakObjectPtr<UParticleSystem*> */ __um(HeroParticleTemplate);                      // 0x0000   (0x0028)  
	SDK_UNDEFINED(40,1946) /* TWeakObjectPtr<UParticleSystem*> */ __um(MonsterParticleTemplate);                   // 0x0028   (0x0028)  
	SDK_UNDEFINED(80,1947) /* TMap<FName, TWeakObjectPtr<UParticleSystem*>> */ __um(SpecialCharacterParticleTemplate); // 0x0050   (0x0050)  
	FName                                              AttachSocket;                                               // 0x00A0   (0x0008)  
	EAttachmentRule                                    RotationRule;                                               // 0x00A8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x00A9   (0x0007)  MISSED
	SDK_UNDEFINED(40,1948) /* TWeakObjectPtr<UParticleSystem*> */ __um(WeaponParticleTemplate);                    // 0x00B0   (0x0028)  
	FName                                              WeaponParticleAttachSocket;                                 // 0x00D8   (0x0008)  
	FName                                              ActorParameter;                                             // 0x00E0   (0x0008)  
};

/// Struct /Script/Pal7.PaladinGeneralBuffEffectUIConfig
/// Size: 0x00F8 (0x000000 - 0x0000F8)
struct FPaladinGeneralBuffEffectUIConfig
{ 
	SDK_UNDEFINED(24,1949) /* FText */                 __um(BuffName);                                             // 0x0000   (0x0018)  
	FSlateBrush                                        IconBrush;                                                  // 0x0018   (0x0088)  
	SDK_UNDEFINED(80,1950) /* TMap<FName, FSlateBrush> */ __um(SpecialIconBrush);                                  // 0x00A0   (0x0050)  
	bool                                               bMoveUp;                                                    // 0x00F0   (0x0001)  
	bool                                               bShowSceneIcon;                                             // 0x00F1   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x00F2   (0x0006)  MISSED
};

/// Struct /Script/Pal7.PaladinGeneralBuffEffectCharacterMaterialConfig
/// Size: 0x0008 (0x000000 - 0x000008)
struct FPaladinGeneralBuffEffectCharacterMaterialConfig
{ 
	FName                                              ScalarParameterName;                                        // 0x0000   (0x0008)  
};

/// Struct /Script/Pal7.PaladinGeneralBuffEffectCollectionMaterialConfig
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPaladinGeneralBuffEffectCollectionMaterialConfig
{ 
	class UMaterialParameterCollection*                Collection;                                                 // 0x0000   (0x0008)  
	FName                                              ScalarParameterName;                                        // 0x0008   (0x0008)  
};

/// Struct /Script/Pal7.PaladinGeneralBuffEffectMaterialConfig
/// Size: 0x0030 (0x000000 - 0x000030)
struct FPaladinGeneralBuffEffectMaterialConfig
{ 
	TArray<FPaladinGeneralBuffEffectCharacterMaterialConfig> CharacterMaterialConfigs;                             // 0x0000   (0x0010)  
	TArray<FPaladinGeneralBuffEffectCollectionMaterialConfig> CollectionMaterialConfigs;                           // 0x0010   (0x0010)  
	class UCurveFloat*                                 FadeInCurve;                                                // 0x0020   (0x0008)  
	class UCurveFloat*                                 FadeOutCurve;                                               // 0x0028   (0x0008)  
};

/// Struct /Script/Pal7.PaladinPostprocessConfig
/// Size: 0x0080 (0x000000 - 0x000080)
struct FPaladinPostprocessConfig
{ 
	SDK_UNDEFINED(40,1951) /* TWeakObjectPtr<UClass*> */ __um(PostprocessClass);                                   // 0x0000   (0x0028)  
	SDK_UNDEFINED(80,1952) /* TMap<FName, TWeakObjectPtr<UClass*>> */ __um(SpecialCharacterPostprocessClass);      // 0x0028   (0x0050)  
	float                                              Scale;                                                      // 0x0078   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x007C   (0x0004)  MISSED
};

/// Struct /Script/Pal7.PaladinAudioConfig
/// Size: 0x0060 (0x000000 - 0x000060)
struct FPaladinAudioConfig
{ 
	SDK_UNDEFINED(40,1953) /* TWeakObjectPtr<USoundAtomCue*> */ __um(Sound);                                       // 0x0000   (0x0028)  
	float                                              VolumeMultiplier;                                           // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x002C   (0x0004)  MISSED
	SDK_UNDEFINED(40,1954) /* TWeakObjectPtr<USoundAttenuation*> */ __um(AttenuationSettings);                     // 0x0030   (0x0028)  
	FName                                              AttachSocket;                                               // 0x0058   (0x0008)  
};

/// Struct /Script/Pal7.PaladinGeneralBuffEffectConfig
/// Size: 0x0220 (0x000008 - 0x000228)
struct FPaladinGeneralBuffEffectConfig : FTableRowBase
{ 
	bool                                               IsDeBuff;                                                   // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	TArray<FPaladinGeneralBuffEffectParticleConfig>    ParticleConfigs;                                            // 0x0010   (0x0010)  
	FPaladinGeneralBuffEffectUIConfig                  UIConfig;                                                   // 0x0020   (0x00F8)  
	FPaladinGeneralBuffEffectMaterialConfig            MaterialConfig;                                             // 0x0118   (0x0030)  
	FPaladinPostprocessConfig                          PostprocessConfig;                                          // 0x0148   (0x0080)  
	FPaladinAudioConfig                                AudioConfig;                                                // 0x01C8   (0x0060)  
};

/// Struct /Script/Pal7.PaladinAttrUIDataRow
/// Size: 0x0020 (0x000008 - 0x000028)
struct FPaladinAttrUIDataRow : FTableRowBase
{ 
	SDK_UNDEFINED(24,1955) /* FText */                 __um(AttrName);                                             // 0x0008   (0x0018)  
	class UPaperSprite*                                Icon;                                                       // 0x0020   (0x0008)  
};

/// Struct /Script/Pal7.PaladinDebugSwitchDataRow
/// Size: 0x0008 (0x000008 - 0x000010)
struct FPaladinDebugSwitchDataRow : FTableRowBase
{ 
	bool                                               bOpenDebug;                                                 // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	FColor                                             DebugTextColor;                                             // 0x000C   (0x0004)  
};

/// Struct /Script/Pal7.PaladinStaticAssetRow
/// Size: 0x0008 (0x000008 - 0x000010)
struct FPaladinStaticAssetRow : FTableRowBase
{ 
	class UObject*                                     Obj;                                                        // 0x0008   (0x0008)  
};

/// Struct /Script/Pal7.PaladinConstantTextDataRow
/// Size: 0x0018 (0x000008 - 0x000020)
struct FPaladinConstantTextDataRow : FTableRowBase
{ 
	SDK_UNDEFINED(24,1956) /* FText */                 __um(value);                                                // 0x0008   (0x0018)  
};

/// Struct /Script/Pal7.PaladinConstantValueDataRow
/// Size: 0x0020 (0x000008 - 0x000028)
struct FPaladinConstantValueDataRow : FTableRowBase
{ 
	SDK_UNDEFINED(16,1957) /* FString */               __um(value);                                                // 0x0008   (0x0010)  
	SDK_UNDEFINED(16,1958) /* FString */               __um(Desc);                                                 // 0x0018   (0x0010)  
};

/// Struct /Script/Pal7.PaladinSaveGameData
/// Size: 0x0028 (0x000000 - 0x000028)
struct FPaladinSaveGameData
{ 
	FGameplayTag                                       CurTag;                                                     // 0x0000   (0x0008)  
	FGameplayTagContainer                              SaveGameTags;                                               // 0x0008   (0x0020)  
};

/// Struct /Script/Pal7.EquipmentUITextureStruct
/// Size: 0x0010 (0x000000 - 0x000010)
struct FEquipmentUITextureStruct
{ 
	class UPaperSprite*                                WeaponIconForBase;                                          // 0x0000   (0x0008)  
	class UPaperSprite*                                WeaponIconForLight;                                         // 0x0008   (0x0008)  
};

/// Struct /Script/Pal7.CommonUITextureStruct
/// Size: 0x0048 (0x000000 - 0x000048)
struct FCommonUITextureStruct
{ 
	class UTexture2D*                                  TensionBar;                                                 // 0x0000   (0x0008)  
	SDK_UNDEFINED(40,1959) /* TWeakObjectPtr<UTexture2D*> */ __um(Background);                                     // 0x0008   (0x0028)  
	class UTexture2D*                                  FunctionTipBorder;                                          // 0x0030   (0x0008)  
	class UPaperSprite*                                CommonSplitCircle;                                          // 0x0038   (0x0008)  
	class UPaperSprite*                                CommonSplitHalfCircle;                                      // 0x0040   (0x0008)  
};

/// Struct /Script/Pal7.OverviewModelViewStruct
/// Size: 0x0038 (0x000000 - 0x000038)
struct FOverviewModelViewStruct
{ 
	SDK_UNDEFINED(40,1960) /* TWeakObjectPtr<UAnimSequenceBase*> */ __um(OverviewStand);                           // 0x0000   (0x0028)  
	SDK_UNDEFINED(16,1961) /* TArray<TWeakObjectPtr<UAnimSequenceBase*>> */ __um(OverviewRandomIdel);              // 0x0028   (0x0010)  
};

/// Struct /Script/Pal7.EquipmentModelViewStruct
/// Size: 0x00C8 (0x000000 - 0x0000C8)
struct FEquipmentModelViewStruct
{ 
	SDK_UNDEFINED(40,1962) /* TWeakObjectPtr<UClass*> */ __um(HeroAnimBluePrint);                                  // 0x0000   (0x0028)  
	SDK_UNDEFINED(40,1963) /* TWeakObjectPtr<UAnimSequenceBase*> */ __um(Anim_EquipStand);                         // 0x0028   (0x0028)  
	SDK_UNDEFINED(40,1964) /* TWeakObjectPtr<UAnimSequenceBase*> */ __um(Anim_WeaponLoop);                         // 0x0050   (0x0028)  
	SDK_UNDEFINED(40,1965) /* TWeakObjectPtr<UAnimSequenceBase*> */ __um(Anim_WeaponStart);                        // 0x0078   (0x0028)  
	SDK_UNDEFINED(40,1966) /* TWeakObjectPtr<UAnimSequenceBase*> */ __um(Anim_WeaponStop);                         // 0x00A0   (0x0028)  
};

/// Struct /Script/Pal7.PaladinHeroUIConfigRow
/// Size: 0x0198 (0x000008 - 0x0001A0)
struct FPaladinHeroUIConfigRow : FTableRowBase
{ 
	SDK_UNDEFINED(24,1967) /* FText */                 __um(Name);                                                 // 0x0008   (0x0018)  
	class UTexture2D*                                  Icon;                                                       // 0x0020   (0x0008)  
	class UTexture2D*                                  IconBig;                                                    // 0x0028   (0x0008)  
	class UPaperSprite*                                IconForFightSwitch;                                         // 0x0030   (0x0008)  
	class UPaperSprite*                                IconForGeared;                                              // 0x0038   (0x0008)  
	FEquipmentUITextureStruct                          EquipmentUISprite;                                          // 0x0040   (0x0010)  
	FCommonUITextureStruct                             CommonUITexture;                                            // 0x0050   (0x0048)  
	EPaladinHeroName                                   HeroName;                                                   // 0x0098   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0099   (0x0007)  MISSED
	FOverviewModelViewStruct                           OverviewModelView;                                          // 0x00A0   (0x0038)  
	FEquipmentModelViewStruct                          EquipmentModelView;                                         // 0x00D8   (0x00C8)  
};

/// Struct /Script/Pal7.EquipmentModelAnimStruct
/// Size: 0x0050 (0x000000 - 0x000050)
struct FEquipmentModelAnimStruct
{ 
	SDK_UNDEFINED(40,1968) /* TWeakObjectPtr<UAnimMontage*> */ __um(Montage_Weapon);                               // 0x0000   (0x0028)  
	SDK_UNDEFINED(40,1969) /* TWeakObjectPtr<UAnimMontage*> */ __um(Montage_PaladinHero);                          // 0x0028   (0x0028)  
};

/// Struct /Script/Pal7.SuggestHeroLVByChapter
/// Size: 0x0008 (0x000008 - 0x000010)
struct FSuggestHeroLVByChapter : FTableRowBase
{ 
	int32_t                                            SuggestLV;                                                  // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/Pal7.ItemBuyTags
/// Size: 0x0010 (0x000000 - 0x000010)
struct FItemBuyTags
{ 
	TArray<FGameplayTag>                               TagList;                                                    // 0x0000   (0x0010)  
};

/// Struct /Script/Pal7.ItemBuySet
/// Size: 0x0008 (0x000000 - 0x000008)
struct FItemBuySet
{ 
	int32_t                                            ItemId;                                                     // 0x0000   (0x0004)  
	int32_t                                            LimitNum;                                                   // 0x0004   (0x0004)  
};

/// Struct /Script/Pal7.ItemBuyList
/// Size: 0x0018 (0x000008 - 0x000020)
struct FItemBuyList : FTableRowBase
{ 
	TArray<FItemBuySet>                                ItemList;                                                   // 0x0008   (0x0010)  
	FName                                              Des;                                                        // 0x0018   (0x0008)  
};

/// Struct /Script/Pal7.EquipmentForgeList
/// Size: 0x0010 (0x000008 - 0x000018)
struct FEquipmentForgeList : FTableRowBase
{ 
	TArray<int32_t>                                    EquipmentTemplateIDList;                                    // 0x0008   (0x0010)  
};

/// Struct /Script/Pal7.CardInfo
/// Size: 0x0110 (0x000008 - 0x000118)
struct FCardInfo : FTableRowBase
{ 
	int32_t                                            CardID;                                                     // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	SDK_UNDEFINED(24,1970) /* FText */                 __um(Name);                                                 // 0x0010   (0x0018)  
	SDK_UNDEFINED(24,1971) /* FText */                 __um(ShowName);                                             // 0x0028   (0x0018)  
	SDK_UNDEFINED(40,1972) /* TWeakObjectPtr<UPaperSprite*> */ __um(CardImage);                                    // 0x0040   (0x0028)  
	SDK_UNDEFINED(40,1973) /* TWeakObjectPtr<UTexture2D*> */ __um(BigCardImage);                                   // 0x0068   (0x0028)  
	SDK_UNDEFINED(40,1974) /* TWeakObjectPtr<UTexture2D*> */ __um(CardImageByLibrary);                             // 0x0090   (0x0028)  
	ECardType                                          Type;                                                       // 0x00B8   (0x0001)  
	ECardType                                          Condition;                                                  // 0x00B9   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x00BA   (0x0002)  MISSED
	int32_t                                            Damage;                                                     // 0x00BC   (0x0004)  
	int32_t                                            Heal;                                                       // 0x00C0   (0x0004)  
	int32_t                                            Rating;                                                     // 0x00C4   (0x0004)  
	SDK_UNDEFINED(24,1975) /* FText */                 __um(Des);                                                  // 0x00C8   (0x0018)  
	SDK_UNDEFINED(24,1976) /* FText */                 __um(FunctionDes);                                          // 0x00E0   (0x0018)  
	FGameplayTagContainer                              DefaultOwnCardTags;                                         // 0x00F8   (0x0020)  
};

/// Struct /Script/Pal7.CardDeskInfo
/// Size: 0x0038 (0x000008 - 0x000040)
struct FCardDeskInfo : FTableRowBase
{ 
	int32_t                                            LevelID;                                                    // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	SDK_UNDEFINED(24,1977) /* FText */                 __um(DeskInfo);                                             // 0x0010   (0x0018)  
	float                                              ExposureValue;                                              // 0x0028   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x002C   (0x0004)  MISSED
	TArray<int32_t>                                    CardIDList;                                                 // 0x0030   (0x0010)  
};

/// Struct /Script/Pal7.EquipmentMap
/// Size: 0x0050 (0x000000 - 0x000050)
struct FEquipmentMap
{ 
	SDK_UNDEFINED(80,1978) /* TMap<int32_t, FEquipmentExtraInfo> */ __um(EquipmentMap);                            // 0x0000   (0x0050)  
};

/// Struct /Script/Pal7.WeaponModifier
/// Size: 0x00D0 (0x000000 - 0x0000D0)
struct FWeaponModifier
{ 
	SDK_UNDEFINED(24,1979) /* FText */                 __um(WeaponModifierName);                                   // 0x0000   (0x0018)  
	SDK_UNDEFINED(24,1980) /* FText */                 __um(WeaponModifierIntro);                                  // 0x0018   (0x0018)  
	SDK_UNDEFINED(24,1981) /* FText */                 __um(WeaponModifierDes);                                    // 0x0030   (0x0018)  
	SDK_UNDEFINED(40,1982) /* TWeakObjectPtr<UClass*> */ __um(AbilityClass);                                       // 0x0048   (0x0028)  
	int32_t                                            MaxLevel;                                                   // 0x0070   (0x0004)  
	int32_t                                            InitModifierLevel;                                          // 0x0074   (0x0004)  
	SDK_UNDEFINED(80,1983) /* TMap<int32_t, int32_t> */ __um(EnhanceMaterialRequirement);                          // 0x0078   (0x0050)  
	int32_t                                            EnhanceMoneyRequirement;                                    // 0x00C8   (0x0004)  
	bool                                               bShowModifier;                                              // 0x00CC   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x00CD   (0x0003)  MISSED
};

/// Struct /Script/Pal7.EquipmentExtraInfo
/// Size: 0x0168 (0x000008 - 0x000170)
struct FEquipmentExtraInfo : FTableRowBase
{ 
	SDK_UNDEFINED(24,1984) /* FText */                 __um(GearName);                                             // 0x0008   (0x0018)  
	int32_t                                            GearLevelRequirement;                                       // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0024   (0x0004)  MISSED
	TArray<EPaladinHeroName>                           GearCharacterRequirements;                                  // 0x0028   (0x0010)  
	SDK_UNDEFINED(80,1985) /* TMap<FGameplayAttribute, float> */ __um(GeneralGearAttr);                            // 0x0038   (0x0050)  
	SDK_UNDEFINED(40,1986) /* TWeakObjectPtr<UClass*> */ __um(EquipAbilityClass);                                  // 0x0088   (0x0028)  
	int32_t                                            MaxWeaponEnhanceLevel;                                      // 0x00B0   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x00B4   (0x0004)  MISSED
	TArray<FWeaponModifier>                            WeaponModifiers;                                            // 0x00B8   (0x0010)  
	SDK_UNDEFINED(80,1987) /* TMap<int32_t, int32_t> */ __um(ForgeMaterialRequirement);                            // 0x00C8   (0x0050)  
	int32_t                                            ForgeMoneyRequirement;                                      // 0x0118   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x011C   (0x0004)  MISSED
	SDK_UNDEFINED(40,1988) /* TWeakObjectPtr<UClass*> */ __um(EquipmentClass);                                     // 0x0120   (0x0028)  
	SDK_UNDEFINED(40,1989) /* TWeakObjectPtr<UClass*> */ __um(EquipmentForWatch);                                  // 0x0148   (0x0028)  
};

/// Struct /Script/Pal7.EquipModifierEachLevelMagnitudeList
/// Size: 0x00B0 (0x000000 - 0x0000B0)
struct FEquipModifierEachLevelMagnitudeList
{ 
	TArray<float>                                      GeneralMagnitudeList;                                       // 0x0000   (0x0010)  
	SDK_UNDEFINED(80,1990) /* TMap<FGameplayTag, float> */ __um(TagMagnitudeList);                                 // 0x0010   (0x0050)  
	SDK_UNDEFINED(80,1991) /* TMap<FName, float> */    __um(NameMagnitudeList);                                    // 0x0060   (0x0050)  
};

/// Struct /Script/Pal7.WeaponModifierAttr
/// Size: 0x0010 (0x000000 - 0x000010)
struct FWeaponModifierAttr
{ 
	TArray<float>                                      AttrNum;                                                    // 0x0000   (0x0010)  
};

/// Struct /Script/Pal7.WeaponModifierEffect
/// Size: 0x0018 (0x000000 - 0x000018)
struct FWeaponModifierEffect
{ 
	class UClass*                                      EffectClass;                                                // 0x0000   (0x0008)  
	TArray<float>                                      SetByCallerMagnitudeArray;                                  // 0x0008   (0x0010)  
};

/// Struct /Script/Pal7.WeaponModifierAbility
/// Size: 0x0018 (0x000000 - 0x000018)
struct FWeaponModifierAbility
{ 
	class UClass*                                      AbilityClass;                                               // 0x0000   (0x0008)  
	TArray<float>                                      SetByCallerMagnitudeArray;                                  // 0x0008   (0x0010)  
};

/// Struct /Script/Pal7.ItemMap
/// Size: 0x0050 (0x000000 - 0x000050)
struct FItemMap
{ 
	SDK_UNDEFINED(80,1992) /* TMap<int32_t, int32_t> */ __um(ItemMap);                                             // 0x0000   (0x0050)  
};

/// Struct /Script/Pal7.ItemBaseInfo
/// Size: 0x0098 (0x000008 - 0x0000A0)
struct FItemBaseInfo : FTableRowBase
{ 
	SDK_UNDEFINED(24,1993) /* FText */                 __um(item_name);                                            // 0x0008   (0x0018)  
	SDK_UNDEFINED(24,1994) /* FText */                 __um(item_intro);                                           // 0x0020   (0x0018)  
	SDK_UNDEFINED(24,1995) /* FText */                 __um(item_desc);                                            // 0x0038   (0x0018)  
	EItemMainType                                      ItemMainType;                                               // 0x0050   (0x0001)  
	EItemRarity                                        ItemRarity;                                                 // 0x0051   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0052   (0x0006)  MISSED
	class UTexture2D*                                  item_icon;                                                  // 0x0058   (0x0008)  
	int32_t                                            BuyPrice;                                                   // 0x0060   (0x0004)  
	int32_t                                            SellPrice;                                                  // 0x0064   (0x0004)  
	int32_t                                            PetFoodExp;                                                 // 0x0068   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x006C   (0x0004)  MISSED
	class UClass*                                      UseAbility;                                                 // 0x0070   (0x0008)  
	FName                                              GrantFoodRecipe;                                            // 0x0078   (0x0008)  
	bool                                               bAutoDestroyOnGet;                                          // 0x0080   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0081   (0x0003)  MISSED
	int32_t                                            LimitCountInFight;                                          // 0x0084   (0x0004)  
	TArray<FGameplayTag>                               ForceGrantTags;                                             // 0x0088   (0x0010)  
	int32_t                                            MaxCount;                                                   // 0x0098   (0x0004)  
	int32_t                                            Priority;                                                   // 0x009C   (0x0004)  
};

/// Struct /Script/Pal7.PaladinMarkSettingInfo
/// Size: 0x0038 (0x000000 - 0x000038)
struct FPaladinMarkSettingInfo
{ 
	SDK_UNDEFINED(24,1996) /* FText */                 __um(DisplayName);                                          // 0x0000   (0x0018)  
	class UPaperSprite*                                MarkIcon;                                                   // 0x0018   (0x0008)  
	SDK_UNDEFINED(24,1997) /* FText */                 __um(Description);                                          // 0x0020   (0x0018)  
};

/// Struct /Script/Pal7.AreaUnitInfo
/// Size: 0x0038 (0x000000 - 0x000038)
struct FAreaUnitInfo
{ 
	FLinearColor                                       AreaColor;                                                  // 0x0000   (0x0010)  
	SDK_UNDEFINED(24,1998) /* FText */                 __um(DisplayName);                                          // 0x0010   (0x0018)  
	FName                                              PlayMode;                                                   // 0x0028   (0x0008)  
	float                                              MiniMapViewRadius;                                          // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
};

/// Struct /Script/Pal7.PaladinMapAreaRow
/// Size: 0x0018 (0x000008 - 0x000020)
struct FPaladinMapAreaRow : FTableRowBase
{ 
	FName                                              MapResourceID;                                              // 0x0008   (0x0008)  
	TArray<FAreaUnitInfo>                              AreaUnits;                                                  // 0x0010   (0x0010)  
};

/// Struct /Script/Pal7.PaladinMarkingUnitInfo
/// Size: 0x0030 (0x000000 - 0x000030)
struct FPaladinMarkingUnitInfo
{ 
	FName                                              ActorID;                                                    // 0x0000   (0x0008)  
	EPaladinMarkCategory                               MarkCategory;                                               // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	class UPaperSprite*                                MarkIcon;                                                   // 0x0010   (0x0008)  
	FName                                              CustomMarkType;                                             // 0x0018   (0x0008)  
	bool                                               bIsRangeMark : 1;                                           // 0x0020:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x0021   (0x0003)  MISSED
	float                                              RangeRadius;                                                // 0x0024   (0x0004)  
	FName                                              DetailKey;                                                  // 0x0028   (0x0008)  
};

/// Struct /Script/Pal7.PaladinMarkTypeInfo
/// Size: 0x0040 (0x000008 - 0x000048)
struct FPaladinMarkTypeInfo : FTableRowBase
{ 
	SDK_UNDEFINED(16,1999) /* FString */               __um(MarkName);                                             // 0x0008   (0x0010)  
	SDK_UNDEFINED(24,2000) /* FText */                 __um(Tips);                                                 // 0x0018   (0x0018)  
	class UPaperSprite*                                MarkIcon;                                                   // 0x0030   (0x0008)  
	class UPaperSprite*                                InteractIcon;                                               // 0x0038   (0x0008)  
	EPaladinMarkCategory                               MarkCategory;                                               // 0x0040   (0x0001)  
	bool                                               bIsRangeMark;                                               // 0x0041   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0042   (0x0002)  MISSED
	float                                              RangeRadius;                                                // 0x0044   (0x0004)  
};

/// Struct /Script/Pal7.CustomMarkerInfo
/// Size: 0x0020 (0x000000 - 0x000020)
struct FCustomMarkerInfo
{ 
	EPaladinMarkCategory                               TrackMarkType;                                              // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	class UClass*                                      MarkerIcon;                                                 // 0x0008   (0x0008)  
	FVector                                            Location;                                                   // 0x0010   (0x000C)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/Pal7.PaladinCustomMapInfo
/// Size: 0x00A0 (0x000008 - 0x0000A8)
struct FPaladinCustomMapInfo : FTableRowBase
{ 
	FName                                              LevelID;                                                    // 0x0008   (0x0008)  
	SDK_UNDEFINED(24,2001) /* FText */                 __um(DisplayName);                                          // 0x0010   (0x0018)  
	FVector                                            CenterLocation;                                             // 0x0028   (0x000C)  
	float                                              Width;                                                      // 0x0034   (0x0004)  
	float                                              Height;                                                     // 0x0038   (0x0004)  
	float                                              ViewZoom;                                                   // 0x003C   (0x0004)  
	SDK_UNDEFINED(40,2002) /* TWeakObjectPtr<UTexture2D*> */ __um(MapTexture);                                     // 0x0040   (0x0028)  
	SDK_UNDEFINED(40,2003) /* TWeakObjectPtr<UTexture2D*> */ __um(MapAreaTexture);                                 // 0x0068   (0x0028)  
	TArray<FAreaUnitInfo>                              AreaUnits;                                                  // 0x0090   (0x0010)  
	float                                              MiniMapViewRadius;                                          // 0x00A0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00A4   (0x0004)  MISSED
};

/// Struct /Script/Pal7.PaladinJumpMapContext
/// Size: 0x00C0 (0x000000 - 0x0000C0)
struct FPaladinJumpMapContext
{ 
	unsigned char                                      UnknownData00_2[0xC0];                                      // 0x0000   (0x00C0)  MISSED
};

/// Struct /Script/Pal7.PaladinDistrictLandPoint
/// Size: 0x0068 (0x000000 - 0x000068)
struct FPaladinDistrictLandPoint
{ 
	FName                                              LandPointID;                                                // 0x0000   (0x0008)  
	SDK_UNDEFINED(24,2004) /* FText */                 __um(LandPointDesc);                                        // 0x0008   (0x0018)  
	FGameplayTag                                       UnLockTags;                                                 // 0x0020   (0x0008)  
	FGameplayTagContainer                              AddQuestTags;                                               // 0x0028   (0x0020)  
	FGameplayTagContainer                              RemoveQuestTags;                                            // 0x0048   (0x0020)  
};

/// Struct /Script/Pal7.PaladinDistrictInfo
/// Size: 0x0038 (0x000008 - 0x000040)
struct FPaladinDistrictInfo : FTableRowBase
{ 
	SDK_UNDEFINED(24,2005) /* FText */                 __um(DistrictName);                                         // 0x0008   (0x0018)  
	EDistrictType                                      DistrictType;                                               // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0021   (0x0003)  MISSED
	FName                                              MapResID;                                                   // 0x0024   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x002C   (0x0004)  MISSED
	TArray<FPaladinDistrictLandPoint>                  LandPoints;                                                 // 0x0030   (0x0010)  
};

/// Struct /Script/Pal7.PaladinLevelData
/// Size: 0x0098 (0x000008 - 0x0000A0)
struct FPaladinLevelData : FTableRowBase
{ 
	SDK_UNDEFINED(24,2006) /* FText */                 __um(DisplayName);                                          // 0x0008   (0x0018)  
	SDK_UNDEFINED(80,2007) /* TMap<FName, FPaladinMapCategories> */ __um(MapCategories);                           // 0x0020   (0x0050)  
	FGameplayTag                                       LoginMapTag;                                                // 0x0070   (0x0008)  
	SDK_UNDEFINED(40,2008) /* TWeakObjectPtr<UTexture2D*> */ __um(MainBackground);                                 // 0x0078   (0x0028)  
};

/// Struct /Script/Pal7.PaladinQuestCondition
/// Size: 0x0028 (0x000000 - 0x000028)
struct FPaladinQuestCondition
{ 
	EPaladinLogicalOperation                           Operation;                                                  // 0x0000   (0x0001)  
	bool                                               bIsNot : 1;                                                 // 0x0001:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x2];                                       // 0x0002   (0x0002)  MISSED
	FGameplayTag                                       Tag;                                                        // 0x0004   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	SDK_UNDEFINED(24,2009) /* FText */                 __um(ConditionDesc);                                        // 0x0010   (0x0018)  
};

/// Struct /Script/Pal7.PaladinQuestConditionCollection
/// Size: 0x0018 (0x000000 - 0x000018)
struct FPaladinQuestConditionCollection
{ 
	TArray<FPaladinQuestCondition>                     QuestConditions;                                            // 0x0000   (0x0010)  
	EPaladinLogicalOperation                           Operation;                                                  // 0x0010   (0x0001)  
	bool                                               bVisibleWhenNotMet;                                         // 0x0011   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0012   (0x0006)  MISSED
};

/// Struct /Script/Pal7.PaladinMapInfo
/// Size: 0x0070 (0x000000 - 0x000070)
struct FPaladinMapInfo
{ 
	SDK_UNDEFINED(40,2010) /* TWeakObjectPtr<UWorld*> */ __um(Map);                                                // 0x0000   (0x0028)  
	FGameplayTag                                       Tag;                                                        // 0x0028   (0x0008)  
	FGameplayTag                                       RequiredTag;                                                // 0x0030   (0x0008)  
	FGameplayTagContainer                              ExtensionTags;                                              // 0x0038   (0x0020)  
	TArray<FPaladinQuestConditionCollection>           QuestConditions;                                            // 0x0058   (0x0010)  
	bool                                               bPostEnteredVisible : 1;                                    // 0x0068:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0069   (0x0007)  MISSED
};

/// Struct /Script/Pal7.PaladinMapCategories
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPaladinMapCategories
{ 
	TArray<FPaladinMapInfo>                            Maps;                                                       // 0x0000   (0x0010)  
};

/// Struct /Script/Pal7.MergeMeshInstance
/// Size: 0x0028 (0x000000 - 0x000028)
struct FMergeMeshInstance
{ 
	SDK_UNDEFINED(16,2011) /* FString */               __um(MergeKey);                                             // 0x0000   (0x0010)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0010   (0x0018)  MISSED
};

/// Struct /Script/Pal7.PaladinFaceMeshAnimMapping
/// Size: 0x0050 (0x000008 - 0x000058)
struct FPaladinFaceMeshAnimMapping : FTableRowBase
{ 
	SDK_UNDEFINED(40,2012) /* TWeakObjectPtr<USkeletalMesh*> */ __um(FaceMesh);                                    // 0x0008   (0x0028)  
	SDK_UNDEFINED(40,2013) /* TWeakObjectPtr<UAnimSequenceBase*> */ __um(FaceAnim);                                // 0x0030   (0x0028)  
};

/// Struct /Script/Pal7.PaladinMergeMeshInfo
/// Size: 0x0028 (0x000008 - 0x000030)
struct FPaladinMergeMeshInfo : FTableRowBase
{ 
	SDK_UNDEFINED(40,2014) /* TWeakObjectPtr<USkeletalMesh*> */ __um(MergeMesh);                                   // 0x0008   (0x0028)  
};

/// Struct /Script/Pal7.PaladinMergeMeshMaterialInfo
/// Size: 0x0038 (0x000008 - 0x000040)
struct FPaladinMergeMeshMaterialInfo : FTableRowBase
{ 
	SDK_UNDEFINED(40,2015) /* TWeakObjectPtr<UMaterialInterface*> */ __um(MaterialKey);                            // 0x0008   (0x0028)  
	SDK_UNDEFINED(16,2016) /* TArray<TWeakObjectPtr<UMaterialInterface*>> */ __um(MaterialCollection);             // 0x0030   (0x0010)  
};

/// Struct /Script/Pal7.PlayerHeroPressureLevelConfig
/// Size: 0x0010 (0x000008 - 0x000018)
struct FPlayerHeroPressureLevelConfig : FTableRowBase
{ 
	float                                              Pressure_LowerValue;                                        // 0x0008   (0x0004)  
	float                                              Pressure_UpperValue;                                        // 0x000C   (0x0004)  
	float                                              ToggleProbability;                                          // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/Pal7.MuseumPromptUnit
/// Size: 0x0058 (0x000000 - 0x000058)
struct FMuseumPromptUnit
{ 
	bool                                               bOpen;                                                      // 0x0050   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0051   (0x0007)  MISSED
};

/// Struct /Script/Pal7.MuseumPercentResult
/// Size: 0x0058 (0x000000 - 0x000058)
struct FMuseumPercentResult
{ 
	float                                              percent;                                                    // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	SDK_UNDEFINED(80,2017) /* TMap<FString, FMuseumPercentResultSub> */ __um(SubPercent);                          // 0x0008   (0x0050)  
};

/// Struct /Script/Pal7.MuseumPercentResultSub
/// Size: 0x0058 (0x000000 - 0x000058)
struct FMuseumPercentResultSub
{ 
	float                                              percent;                                                    // 0x0000   (0x0004)  
	bool                                               Open;                                                       // 0x0004   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0005   (0x0003)  MISSED
	SDK_UNDEFINED(80,2018) /* TMap<FString, float> */  __um(SubPercent);                                           // 0x0008   (0x0050)  
};

/// Struct /Script/Pal7.MuseumUnlockPercent
/// Size: 0x00A0 (0x000000 - 0x0000A0)
struct FMuseumUnlockPercent
{ 
	unsigned char                                      UnknownData00_2[0xA0];                                      // 0x0000   (0x00A0)  MISSED
};

/// Struct /Script/Pal7.MuseumUnlockPercentInfo
/// Size: 0x0008 (0x000000 - 0x000008)
struct FMuseumUnlockPercentInfo
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/Pal7.MuseumItemLockState
/// Size: 0x0008 (0x000000 - 0x000008)
struct FMuseumItemLockState
{ 
	EMuseumItemLockState                               State;                                                      // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            Level;                                                      // 0x0004   (0x0004)  
};

/// Struct /Script/Pal7.UnlockData
/// Size: 0x0080 (0x000000 - 0x000080)
struct FUnlockData
{ 
	SDK_UNDEFINED(24,2019) /* FText */                 __um(TitleText1);                                           // 0x0000   (0x0018)  
	SDK_UNDEFINED(24,2020) /* FText */                 __um(TitleText2);                                           // 0x0018   (0x0018)  
	SDK_UNDEFINED(24,2021) /* FText */                 __um(SubTitleText);                                         // 0x0030   (0x0018)  
	SDK_UNDEFINED(24,2022) /* FText */                 __um(Name);                                                 // 0x0048   (0x0018)  
	SDK_UNDEFINED(24,2023) /* FText */                 __um(ExtraText);                                            // 0x0060   (0x0018)  
	bool                                               ShowTips;                                                   // 0x0078   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0079   (0x0007)  MISSED
};

/// Struct /Script/Pal7.MuseumItemModelViewStruct
/// Size: 0x0060 (0x000000 - 0x000060)
struct FMuseumItemModelViewStruct
{ 
	FPaladinModelViewCameraInfo                        CameraInfo;                                                 // 0x0000   (0x0018)  
	TArray<FModelViewStruct>                           SkeletalModel;                                              // 0x0018   (0x0010)  
	TArray<FModelViewStruct>                           EquipSkeletalModel;                                         // 0x0028   (0x0010)  
	SDK_UNDEFINED(40,2024) /* TWeakObjectPtr<USkeletalMesh*> */ __um(WeaponSlotMesh);                              // 0x0038   (0x0028)  
};

/// Struct /Script/Pal7.MuseumItemLockConfig
/// Size: 0x00F0 (0x000000 - 0x0000F0)
struct FMuseumItemLockConfig
{ 
	FGameplayTag                                       UnlockTag;                                                  // 0x0000   (0x0008)  
	SDK_UNDEFINED(24,2025) /* FText */                 __um(Des);                                                  // 0x0008   (0x0018)  
	SDK_UNDEFINED(24,2026) /* FText */                 __um(Des_Gamepad);                                          // 0x0020   (0x0018)  
	SDK_UNDEFINED(24,2027) /* FText */                 __um(Des_TouchVersion);                                     // 0x0038   (0x0018)  
	bool                                               bEnableMultiCulture;                                        // 0x0050   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0051   (0x0007)  MISSED
	SDK_UNDEFINED(80,2028) /* TMap<EPaladinGameCulture, FLocalizationTextStruct> */ __um(Des_Cultures);            // 0x0058   (0x0050)  
	SDK_UNDEFINED(24,2029) /* FText */                 __um(InfoTips);                                             // 0x00A8   (0x0018)  
	TArray<int32_t>                                    InfoTipsItemIDList;                                         // 0x00C0   (0x0010)  
	bool                                               ShowTips;                                                   // 0x00D0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x00D1   (0x0007)  MISSED
	SDK_UNDEFINED(24,2030) /* FText */                 __um(TipsDes);                                              // 0x00D8   (0x0018)  
};

/// Struct /Script/Pal7.MuseumItemStruct
/// Size: 0x0278 (0x000008 - 0x000280)
struct FMuseumItemStruct : FTableRowBase
{ 
	SDK_UNDEFINED(24,2031) /* FText */                 __um(Name);                                                 // 0x0008   (0x0018)  
	SDK_UNDEFINED(24,2032) /* FText */                 __um(Des);                                                  // 0x0020   (0x0018)  
	SDK_UNDEFINED(24,2033) /* FText */                 __um(Des2);                                                 // 0x0038   (0x0018)  
	FMuseumItemModelViewStruct                         ModelViewInfo;                                              // 0x0050   (0x0060)  
	FPaladinSlateBrushWithSoftPtr                      Texture;                                                    // 0x00B0   (0x0060)  
	SDK_UNDEFINED(40,2034) /* TWeakObjectPtr<USoundAtomCue*> */ __um(Music);                                       // 0x0110   (0x0028)  
	FAtomSelectorLabel                                 AgentSelectorLabel;                                         // 0x0138   (0x0020)  
	FMuseumItemLockConfig                              State2UnlockConfig;                                         // 0x0158   (0x00F0)  
	TArray<FMuseumItemLockConfig>                      State3UnlockConfig;                                         // 0x0248   (0x0010)  
	SDK_UNDEFINED(40,2035) /* TWeakObjectPtr<UObject*> */ __um(MediaSourceMovie);                                  // 0x0258   (0x0028)  
};

/// Struct /Script/Pal7.OneMuseumStruct
/// Size: 0x0038 (0x000000 - 0x000038)
struct FOneMuseumStruct
{ 
	SDK_UNDEFINED(24,2036) /* FText */                 __um(Title);                                                // 0x0000   (0x0018)  
	TArray<FMuseumItemStruct>                          ItemList;                                                   // 0x0018   (0x0010)  
	TArray<FName>                                      ItemIDList;                                                 // 0x0028   (0x0010)  
};

/// Struct /Script/Pal7.MuseumOutlineStruct
/// Size: 0x0290 (0x000008 - 0x000298)
struct FMuseumOutlineStruct : FTableRowBase
{ 
	SDK_UNDEFINED(24,2037) /* FText */                 __um(TitleText1);                                           // 0x0008   (0x0018)  
	SDK_UNDEFINED(24,2038) /* FText */                 __um(TitleText2);                                           // 0x0020   (0x0018)  
	TArray<FOneMuseumStruct>                           OneMuseum;                                                  // 0x0038   (0x0010)  
	SDK_UNDEFINED(40,2039) /* TWeakObjectPtr<UClass*> */ __um(ItemInfoWidgetClass);                                // 0x0048   (0x0028)  
	FSlateBrush                                        SelectBackGroundImage;                                      // 0x0070   (0x0088)  
	FSlateBrush                                        SelectFillImage;                                            // 0x00F8   (0x0088)  
	FSlateBrush                                        UnSelectBackGroundImage;                                    // 0x0180   (0x0088)  
	FSlateBrush                                        UnSelectFillImage;                                          // 0x0208   (0x0088)  
	bool                                               ShowBackgroundImage;                                        // 0x0290   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0291   (0x0007)  MISSED
};

/// Struct /Script/Pal7.LocalizationTextStruct
/// Size: 0x0048 (0x000000 - 0x000048)
struct FLocalizationTextStruct
{ 
	SDK_UNDEFINED(24,2040) /* FText */                 __um(Des_Keyboard);                                         // 0x0000   (0x0018)  
	SDK_UNDEFINED(24,2041) /* FText */                 __um(Des_Gamepad);                                          // 0x0018   (0x0018)  
	SDK_UNDEFINED(24,2042) /* FText */                 __um(Des_TouchVersion);                                     // 0x0030   (0x0018)  
};

/// Struct /Script/Pal7.PaladinUINavigationKey
/// Size: 0x0002 (0x000000 - 0x000002)
struct FPaladinUINavigationKey
{ 
	EPaladinUIKeyControlType                           ControlType;                                                // 0x0000   (0x0001)  
	EUINavigation                                      UINavigation;                                               // 0x0001   (0x0001)  
};

/// Struct /Script/Pal7.PaladinSleepSettingInfo
/// Size: 0x0030 (0x000000 - 0x000030)
struct FPaladinSleepSettingInfo
{ 
	SDK_UNDEFINED(16,2043) /* FString */               __um(SleepDesc);                                            // 0x0000   (0x0010)  
	bool                                               bUseBlendShowMaterial;                                      // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0011   (0x0003)  MISSED
	float                                              DisappearDistance;                                          // 0x0014   (0x0004)  
	float                                              BlendDistance;                                              // 0x0018   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x001C   (0x0004)  MISSED
	TArray<FSleepLODInfo>                              SleepInfos;                                                 // 0x0020   (0x0010)  
};

/// Struct /Script/Pal7.BuyFoodList
/// Size: 0x0020 (0x000000 - 0x000020)
struct FBuyFoodList
{ 
	TArray<FName>                                      FoodList;                                                   // 0x0000   (0x0010)  
	TArray<FName>                                      DrinkList;                                                  // 0x0010   (0x0010)  
};

/// Struct /Script/Pal7.BuyItemList
/// Size: 0x0050 (0x000000 - 0x000050)
struct FBuyItemList
{ 
	SDK_UNDEFINED(80,2044) /* TMap<int32_t, FPaladinBuyItemUnitInfo> */ __um(BuyItemList);                         // 0x0000   (0x0050)  
};

/// Struct /Script/Pal7.ForgeItemListUnit
/// Size: 0x0010 (0x000000 - 0x000010)
struct FForgeItemListUnit
{ 
	TArray<int32_t>                                    ForgeItemList;                                              // 0x0000   (0x0010)  
};

/// Struct /Script/Pal7.PetSkillData
/// Size: 0x0048 (0x000000 - 0x000048)
struct FPetSkillData
{ 
	class UClass*                                      EffectClass;                                                // 0x0000   (0x0008)  
	FName                                              CurveKey;                                                   // 0x0008   (0x0008)  
	SDK_UNDEFINED(24,2045) /* FText */                 __um(DisplayName);                                          // 0x0010   (0x0018)  
	SDK_UNDEFINED(24,2046) /* FText */                 __um(DisplayDescribe);                                      // 0x0028   (0x0018)  
	bool                                               DisplayAsPercentValue;                                      // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0041   (0x0003)  MISSED
	float                                              DisplayBias;                                                // 0x0044   (0x0004)  
};

/// Struct /Script/Pal7.PetSKMDtata
/// Size: 0x0014 (0x000000 - 0x000014)
struct FPetSKMDtata
{ 
	FVector                                            RelativeScale;                                              // 0x0000   (0x000C)  
	float                                              SphereRadius;                                               // 0x000C   (0x0004)  
	float                                              PitchValue;                                                 // 0x0010   (0x0004)  
};

/// Struct /Script/Pal7.PetData
/// Size: 0x0150 (0x000008 - 0x000158)
struct FPetData : FTableRowBase
{ 
	TArray<FPetSkillData>                              PetSkills;                                                  // 0x0008   (0x0010)  
	SDK_UNDEFINED(24,2047) /* FText */                 __um(DisplayName);                                          // 0x0018   (0x0018)  
	SDK_UNDEFINED(24,2048) /* FText */                 __um(DisplayDescribe);                                      // 0x0030   (0x0018)  
	SDK_UNDEFINED(80,2049) /* TMap<FName, TWeakObjectPtr<UAnimSequenceBase*>> */ __um(PetAnimList);                // 0x0048   (0x0050)  
	SDK_UNDEFINED(40,2050) /* TWeakObjectPtr<USkeletalMesh*> */ __um(PetMesh);                                     // 0x0098   (0x0028)  
	SDK_UNDEFINED(40,2051) /* TWeakObjectPtr<USkeletalMesh*> */ __um(PetMeshForUI);                                // 0x00C0   (0x0028)  
	SDK_UNDEFINED(40,2052) /* TWeakObjectPtr<UClass*> */ __um(PetAnimClass);                                       // 0x00E8   (0x0028)  
	FPetSKMDtata                                       SKMDtata;                                                   // 0x0110   (0x0014)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0124   (0x0004)  MISSED
	SDK_UNDEFINED(40,2053) /* TWeakObjectPtr<UParticleSystem*> */ __um(ParticleTemplate);                          // 0x0128   (0x0028)  
	FName                                              AttachSocket;                                               // 0x0150   (0x0008)  
};

/// Struct /Script/Pal7.PhotoFunctionInfo
/// Size: 0x0040 (0x000000 - 0x000040)
struct FPhotoFunctionInfo
{ 
	SDK_UNDEFINED(24,2054) /* FText */                 __um(ObjName);                                              // 0x0000   (0x0018)  
	SDK_UNDEFINED(40,2055) /* TWeakObjectPtr<UObject*> */ __um(Obj);                                               // 0x0018   (0x0028)  
};

/// Struct /Script/Pal7.PhotoFunctionInfoGroup
/// Size: 0x0028 (0x000000 - 0x000028)
struct FPhotoFunctionInfoGroup
{ 
	SDK_UNDEFINED(24,2056) /* FText */                 __um(GroupName);                                            // 0x0000   (0x0018)  
	TArray<FPhotoFunctionInfo>                         FunctionInfos;                                              // 0x0018   (0x0010)  
};

/// Struct /Script/Pal7.PhotoFunctionSlider
/// Size: 0x0020 (0x000000 - 0x000020)
struct FPhotoFunctionSlider
{ 
	FFloatRange                                        ShowValueRange;                                             // 0x0000   (0x0010)  
	TArray<float>                                      EffectValues;                                               // 0x0010   (0x0010)  
};

/// Struct /Script/Pal7.PhotoFunctionDataRow
/// Size: 0x0050 (0x000008 - 0x000058)
struct FPhotoFunctionDataRow : FTableRowBase
{ 
	SDK_UNDEFINED(24,2057) /* FText */                 __um(FunctionName);                                         // 0x0008   (0x0018)  
	EPaladinPhotoMode                                  FunctionMode;                                               // 0x0020   (0x0001)  
	EPaladinPhotoModeType                              FunctionModeType;                                           // 0x0021   (0x0001)  
	bool                                               bIsOption;                                                  // 0x0022   (0x0001)  
	unsigned char                                      UnknownData00_5[0x5];                                       // 0x0023   (0x0005)  MISSED
	TArray<FPhotoFunctionInfoGroup>                    FunctionValues;                                             // 0x0028   (0x0010)  
	FPhotoFunctionSlider                               PhotoSliderValue;                                           // 0x0038   (0x0020)  
};

/// Struct /Script/Pal7.PhotoHeroDataRow
/// Size: 0x0090 (0x000008 - 0x000098)
struct FPhotoHeroDataRow : FTableRowBase
{ 
	SDK_UNDEFINED(24,2058) /* FText */                 __um(HeroName);                                             // 0x0008   (0x0018)  
	EPaladinHeroName                                   HeroNameType;                                               // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0021   (0x0007)  MISSED
	TArray<FPhotoFunctionInfo>                         HeroPoses;                                                  // 0x0028   (0x0010)  
	SDK_UNDEFINED(80,2059) /* TMap<FName, FPhotoFaceInfo> */ __um(HeroFaces);                                      // 0x0038   (0x0050)  
	TArray<FPhotoFunctionInfo>                         HeroDecorations;                                            // 0x0088   (0x0010)  
};

/// Struct /Script/Pal7.PhotoFaceInfo
/// Size: 0x0028 (0x000000 - 0x000028)
struct FPhotoFaceInfo
{ 
	SDK_UNDEFINED(24,2060) /* FText */                 __um(FaceName);                                             // 0x0000   (0x0018)  
	FName                                              EmotionName;                                                // 0x0018   (0x0008)  
	float                                              EmotionValue;                                               // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/Pal7.PaladinCombinationKeyEvent
/// Size: 0x0008 (0x000008 - 0x000010)
struct FPaladinCombinationKeyEvent : FTableRowBase
{ 
	EPaladinKeyEventName                               ResultEvent;                                                // 0x0008   (0x0001)  
	EPaladinKeyEventName                               ParentEvent;                                                // 0x0009   (0x0001)  
	EPaladinKeyEventName                               ChildEvent;                                                 // 0x000A   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x000B   (0x0001)  MISSED
	float                                              LimitTime;                                                  // 0x000C   (0x0004)  
};

/// Struct /Script/Pal7.PalAxisMappingKeyConfig
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPalAxisMappingKeyConfig
{ 
	float                                              DefaultAxisKeyMappingScaleOnKeyboard;                       // 0x0000   (0x0004)  
	float                                              DefaultAxisKeyMappingScaleOnGamepad;                        // 0x0004   (0x0004)  
	FName                                              DefaultAxisKeyMappingName;                                  // 0x0008   (0x0008)  
};

/// Struct /Script/Pal7.PaladinCustomKeySettingConfig
/// Size: 0x0050 (0x000000 - 0x000050)
struct FPaladinCustomKeySettingConfig
{ 
	bool                                               bShow;                                                      // 0x0000   (0x0001)  
	bool                                               bCanChangeKeyboard;                                         // 0x0001   (0x0001)  
	bool                                               bCanChangeGamepad;                                          // 0x0002   (0x0001)  
	unsigned char                                      UnknownData00_5[0x5];                                       // 0x0003   (0x0005)  MISSED
	FKey                                               GamepadFakeKey;                                             // 0x0008   (0x0018)  
	bool                                               bGamepadCombineShowAll;                                     // 0x0020   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0021   (0x0007)  MISSED
	TArray<FKey>                                       LimitGamepadKeys;                                           // 0x0028   (0x0010)  
	SDK_UNDEFINED(24,2061) /* FText */                 __um(Text);                                                 // 0x0038   (0x0018)  
};

/// Struct /Script/Pal7.PaladinDefaultKeySetting
/// Size: 0x00B8 (0x000008 - 0x0000C0)
struct FPaladinDefaultKeySetting : FTableRowBase
{ 
	EPaladinKeyEventName                               EventNameEnum;                                              // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	TArray<EPaladinControllerMode>                     EffectiveControllerModeList;                                // 0x0010   (0x0010)  
	EPaladinKeyEventType                               KeyType;                                                    // 0x0020   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0021   (0x0003)  MISSED
	FPalAxisMappingKeyConfig                           AxisMappingKeyConfig;                                       // 0x0024   (0x0010)  
	bool                                               NeedCache;                                                  // 0x0034   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0035   (0x0003)  MISSED
	FKey                                               KeyBoardKey;                                                // 0x0038   (0x0018)  
	FKey                                               GamePadKey;                                                 // 0x0050   (0x0018)  
	FName                                              UMGName;                                                    // 0x0068   (0x0008)  
	FPaladinCustomKeySettingConfig                     CustomConfig;                                               // 0x0070   (0x0050)  
};

/// Struct /Script/Pal7.PalControllerModeConfig
/// Size: 0x0008 (0x000008 - 0x000010)
struct FPalControllerModeConfig : FTableRowBase
{ 
	bool                                               IgnoreLookInput;                                            // 0x0008   (0x0001)  
	bool                                               IgnorePlayerMoveInput;                                      // 0x0009   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x000A   (0x0006)  MISSED
};

/// Struct /Script/Pal7.PaladinPlayModeUIConfig
/// Size: 0x0004 (0x000000 - 0x000004)
struct FPaladinPlayModeUIConfig
{ 
	bool                                               bShowUI : 1;                                                // 0x0000:0 (0x0001)  
	bool                                               bShowSeqSubtitle : 1;                                       // 0x0000:1 (0x0001)  
	bool                                               bShowMiniMap : 1;                                           // 0x0000:2 (0x0001)  
	bool                                               bShowQuest : 1;                                             // 0x0000:3 (0x0001)  
	bool                                               bShowTips : 1;                                              // 0x0000:4 (0x0001)  
	bool                                               bShowDialogue : 1;                                          // 0x0000:5 (0x0001)  
	bool                                               bShowInteraction : 1;                                       // 0x0000:6 (0x0001)  
	bool                                               bEntryTeamAbilityUIMode : 1;                                // 0x0000:7 (0x0001)  
	bool                                               bShowCookBuffTime : 1;                                      // 0x0001:0 (0x0001)  
	bool                                               bShowQuickOpen : 1;                                         // 0x0001:1 (0x0001)  
	bool                                               bShowFight : 1;                                             // 0x0001:2 (0x0001)  
	bool                                               bShowSkill : 1;                                             // 0x0001:3 (0x0001)  
	bool                                               bShowLockUI : 1;                                            // 0x0001:4 (0x0001)  
	bool                                               bShowDamageNum : 1;                                         // 0x0001:5 (0x0001)  
	bool                                               bShowBossHP : 1;                                            // 0x0001:6 (0x0001)  
	bool                                               bShowHotItem : 1;                                           // 0x0001:7 (0x0001)  
	bool                                               bShowTeamInfo : 1;                                          // 0x0002:0 (0x0001)  
	bool                                               bShowTeamInfoInTouchMode : 1;                               // 0x0002:1 (0x0001)  
	bool                                               bShowAwakeBar : 1;                                          // 0x0002:2 (0x0001)  
	bool                                               bAutoIconListVisible : 1;                                   // 0x0002:3 (0x0001)  
	bool                                               bShowMessage : 1;                                           // 0x0002:4 (0x0001)  
	bool                                               bShowQuestMsg : 1;                                          // 0x0002:5 (0x0001)  
	bool                                               bShowMuseumMsg : 1;                                         // 0x0002:6 (0x0001)  
	bool                                               bShowJoystick : 1;                                          // 0x0002:7 (0x0001)  
	bool                                               bShowAttackPanel : 1;                                       // 0x0003:0 (0x0001)  
	bool                                               bShowPuzzleGameUI : 1;                                      // 0x0003:1 (0x0001)  
	bool                                               bShowMouseCursor : 1;                                       // 0x0003:2 (0x0001)  
};

/// Struct /Script/Pal7.PaladinPlayModeCameraInfo
/// Size: 0x0020 (0x000000 - 0x000020)
struct FPaladinPlayModeCameraInfo
{ 
	ECameraModifierHandleType                          ModifierHandleType;                                         // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	TArray<class UClass*>                              CameraModifiers;                                            // 0x0008   (0x0010)  
	bool                                               bApplyCameraFollow : 1;                                     // 0x0018:0 (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0019   (0x0007)  MISSED
};

/// Struct /Script/Pal7.PaladinPlayModeInfo
/// Size: 0x00C0 (0x000008 - 0x0000C8)
struct FPaladinPlayModeInfo : FTableRowBase
{ 
	FName                                              Name;                                                       // 0x0008   (0x0008)  
	SDK_UNDEFINED(24,2062) /* FText */                 __um(Desc);                                                 // 0x0010   (0x0018)  
	char                                               Priority;                                                   // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0029   (0x0003)  MISSED
	float                                              MaxMoveSpeed;                                               // 0x002C   (0x0004)  
	EPaladinControllerMode                             ControlMode;                                                // 0x0030   (0x0001)  
	FPaladinPlayModeUIConfig                           UIConfig;                                                   // 0x0031   (0x0004)  
	bool                                               bCanSaveGame;                                               // 0x0035   (0x0001)  
	bool                                               bCanPhoto;                                                  // 0x0036   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x0037   (0x0001)  MISSED
	FPaladinPlayModeCameraInfo                         CameraInfo;                                                 // 0x0038   (0x0020)  
	bool                                               bActiveTargetTrace : 1;                                     // 0x0058:0 (0x0001)  
	bool                                               bEnableDialogue : 1;                                        // 0x0058:1 (0x0001)  
	bool                                               bActiveEnemyTrace : 1;                                      // 0x0058:2 (0x0001)  
	bool                                               bCanfighting;                                               // 0x0059   (0x0001)  
	bool                                               bMeshHideCloseToCamera;                                     // 0x005A   (0x0001)  
	bool                                               bRecoverHeroHp;                                             // 0x005B   (0x0001)  
	bool                                               bExitAwakenState;                                           // 0x005C   (0x0001)  
	bool                                               bHideLevelPickup;                                           // 0x005D   (0x0001)  
	bool                                               bForcePutdownWeapon;                                        // 0x005E   (0x0001)  
	bool                                               bEnablePlayleisureMontage;                                  // 0x005F   (0x0001)  
	bool                                               bEnablePlayerDodge;                                         // 0x0060   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x0061   (0x0007)  MISSED
	SDK_UNDEFINED(80,2063) /* TMap<FName, FName> */    __um(CustomInfos);                                          // 0x0068   (0x0050)  
	bool                                               bIsPuzzleMode : 1;                                          // 0x00B8:0 (0x0001)  
	bool                                               bBlockMuseumTips;                                           // 0x00B9   (0x0001)  
	unsigned char                                      UnknownData03_5[0x2];                                       // 0x00BA   (0x0002)  MISSED
	FName                                              UMGNameByFocusLost;                                         // 0x00BC   (0x0008)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x00C4   (0x0004)  MISSED
};

/// Struct /Script/Pal7.PaladinPreloadResource
/// Size: 0x0030 (0x000008 - 0x000038)
struct FPaladinPreloadResource : FTableRowBase
{ 
	EPaladinPreloadLifeCycle                           LifeCycleType;                                              // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	SDK_UNDEFINED(40,2064) /* TWeakObjectPtr<UObject*> */ __um(ObjectAssets);                                      // 0x0010   (0x0028)  
};

/// Struct /Script/Pal7.PaladinLockedQuestInfo
/// Size: 0x0018 (0x000000 - 0x000018)
struct FPaladinLockedQuestInfo
{ 
	FName                                              QuestID;                                                    // 0x0000   (0x0008)  
	TArray<class UPaladinCondition*>                   OpenableConditions;                                         // 0x0008   (0x0010)  
};

/// Struct /Script/Pal7.PaladinPickableQuestInfo
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPaladinPickableQuestInfo
{ 
	FName                                              QuestID;                                                    // 0x0000   (0x0008)  
	FName                                              PublisherActorID;                                           // 0x0008   (0x0008)  
};

/// Struct /Script/Pal7.PaladinQuestReward
/// Size: 0x0060 (0x000000 - 0x000060)
struct FPaladinQuestReward
{ 
	int32_t                                            AmountOfMoney;                                              // 0x0000   (0x0004)  
	int32_t                                            NumberOfExp;                                                // 0x0004   (0x0004)  
	SDK_UNDEFINED(80,2065) /* TMap<int32_t, int32_t> */ __um(ItemMap);                                             // 0x0008   (0x0050)  
	FName                                              PetName;                                                    // 0x0058   (0x0008)  
};

/// Struct /Script/Pal7.PaladinQuestInfo
/// Size: 0x0128 (0x000000 - 0x000128)
struct FPaladinQuestInfo
{ 
	FName                                              QuestID;                                                    // 0x0000   (0x0008)  
	FName                                              QuestInstanceID;                                            // 0x0008   (0x0008)  
	SDK_UNDEFINED(24,2066) /* FText */                 __um(QuestOverview);                                        // 0x0010   (0x0018)  
	SDK_UNDEFINED(24,2067) /* FText */                 __um(Subtitle);                                             // 0x0028   (0x0018)  
	EQuestCategory                                     QuestCategory;                                              // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0041   (0x0007)  MISSED
	SDK_UNDEFINED(24,2068) /* FText */                 __um(QuestDetail);                                          // 0x0048   (0x0018)  
	SDK_UNDEFINED(24,2069) /* FText */                 __um(ChapterName);                                          // 0x0060   (0x0018)  
	SDK_UNDEFINED(24,2070) /* FText */                 __um(SceneName);                                            // 0x0078   (0x0018)  
	FGuid                                              CurNodeGuid;                                                // 0x0090   (0x0010)  
	FName                                              ProcessId;                                                  // 0x00A0   (0x0008)  
	bool                                               IsCompleted;                                                // 0x00A8   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x00A9   (0x0007)  MISSED
	FPaladinQuestReward                                Reward;                                                     // 0x00B0   (0x0060)  
	TArray<FSubConditionConfigInfo>                    SubgoalInfos;                                               // 0x0110   (0x0010)  
	bool                                               bIsNodeActive : 1;                                          // 0x0120:0 (0x0001)  
	unsigned char                                      UnknownData02_4[0x3];                                       // 0x0121   (0x0003)  MISSED
	int32_t                                            QuestPriority;                                              // 0x0124   (0x0004)  
};

/// Struct /Script/Pal7.PaladinQuestPublichInfo
/// Size: 0x000C (0x000000 - 0x00000C)
struct FPaladinQuestPublichInfo
{ 
	bool                                               bCanPick;                                                   // 0x0000   (0x0001)  
	bool                                               bVisibleInWorld;                                            // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0002   (0x0002)  MISSED
	FName                                              Publisher;                                                  // 0x0004   (0x0008)  
};

/// Struct /Script/Pal7.QuestNodeSubgoalDetail
/// Size: 0x0060 (0x000000 - 0x000060)
struct FQuestNodeSubgoalDetail
{ 
	int32_t                                            CurNum;                                                     // 0x0000   (0x0004)  
	int32_t                                            TargetNum;                                                  // 0x0004   (0x0004)  
	FName                                              SubgoalKey;                                                 // 0x0008   (0x0008)  
	SDK_UNDEFINED(24,2071) /* FText */                 __um(PreText);                                              // 0x0010   (0x0018)  
	SDK_UNDEFINED(24,2072) /* FText */                 __um(SplitText);                                            // 0x0028   (0x0018)  
	SDK_UNDEFINED(24,2073) /* FText */                 __um(PostText);                                             // 0x0040   (0x0018)  
	bool                                               bShowTrack;                                                 // 0x0058   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0059   (0x0007)  MISSED
};

/// Struct /Script/Pal7.PaladinQuestPIDInfo
/// Size: 0x0020 (0x000008 - 0x000028)
struct FPaladinQuestPIDInfo : FTableRowBase
{ 
	FName                                              PID;                                                        // 0x0008   (0x0008)  
	int32_t                                            value;                                                      // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	SDK_UNDEFINED(16,2074) /* FString */               __um(Desc);                                                 // 0x0018   (0x0010)  
};

/// Struct /Script/Pal7.QuestTrackInfoCollection
/// Size: 0x0020 (0x000000 - 0x000020)
struct FQuestTrackInfoCollection
{ 
	FName                                              QuestID;                                                    // 0x0000   (0x0008)  
	EQuestCategory                                     QuestCategory;                                              // 0x0008   (0x0001)  
	bool                                               bQuestTracked : 1;                                          // 0x0009:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x6];                                       // 0x000A   (0x0006)  MISSED
	TArray<FQuestTrackInfo>                            TrackActors;                                                // 0x0010   (0x0010)  
};

/// Struct /Script/Pal7.QuestSavePreviewInfo
/// Size: 0x0028 (0x000000 - 0x000028)
struct FQuestSavePreviewInfo
{ 
	FName                                              CurrentMainQuestID;                                         // 0x0000   (0x0008)  
	FName                                              CurrentBranchQuestID;                                       // 0x0008   (0x0008)  
	SDK_UNDEFINED(24,2075) /* FText */                 __um(CurrentMainQuestTitle);                                // 0x0010   (0x0018)  
};

/// Struct /Script/Pal7.QuestInstance
/// Size: 0x0028 (0x000000 - 0x000028)
struct FQuestInstance
{ 
	FName                                              QuestID;                                                    // 0x0000   (0x0008)  
	EQuestCategory                                     QuestCategory;                                              // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	class UPaladinQuestCompositeNode*                  QuestRootNode;                                              // 0x0010   (0x0008)  
	class UPaladinQuestNode*                           CurrentActiveNode;                                          // 0x0018   (0x0008)  
	bool                                               bActive;                                                    // 0x0020   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0021   (0x0007)  MISSED
};

/// Struct /Script/Pal7.QuestAssetDataTable
/// Size: 0x0118 (0x000008 - 0x000120)
struct FQuestAssetDataTable : FTableRowBase
{ 
	FName                                              QuestID;                                                    // 0x0008   (0x0008)  
	EQuestCategory                                     QuestCategory;                                              // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0011   (0x0007)  MISSED
	SDK_UNDEFINED(24,2076) /* FText */                 __um(QuestTitle);                                           // 0x0018   (0x0018)  
	FName                                              NextQuest;                                                  // 0x0030   (0x0008)  
	SDK_UNDEFINED(24,2077) /* FText */                 __um(ChapterName);                                          // 0x0038   (0x0018)  
	SDK_UNDEFINED(24,2078) /* FText */                 __um(SceneName);                                            // 0x0050   (0x0018)  
	int32_t                                            QuestPriority;                                              // 0x0068   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x006C   (0x0004)  MISSED
	TArray<FPaladinQuestConditionCollection>           UnlockConditions;                                           // 0x0070   (0x0010)  
	TArray<FPaladinQuestConditionCollection>           InterruptConditions;                                        // 0x0080   (0x0010)  
	FName                                              PublisherActorID;                                           // 0x0090   (0x0008)  
	bool                                               bCanRepeat : 1;                                             // 0x0098:0 (0x0001)  
	unsigned char                                      UnknownData02_4[0x7];                                       // 0x0099   (0x0007)  MISSED
	class UPaladinQuestAsset*                          PALAsset;                                                   // 0x00A0   (0x0008)  
	FPaladinQuestReward                                Reward;                                                     // 0x00A8   (0x0060)  
	SDK_UNDEFINED(24,2079) /* FText */                 __um(QuestDescription);                                     // 0x0108   (0x0018)  
};

/// Struct /Script/Pal7.PaladinRichImageRow
/// Size: 0x0088 (0x000008 - 0x000090)
struct FPaladinRichImageRow : FTableRowBase
{ 
	FSlateBrush                                        Brush;                                                      // 0x0008   (0x0088)  
};

/// Struct /Script/Pal7.RootMotionSource_RotateToDynamicForce
/// Size: 0x0010 (0x0000A0 - 0x0000B0)
struct FRootMotionSource_RotateToDynamicForce : FRootMotionSource
{ 
	FRotator                                           TargetRotation;                                             // 0x0098   (0x000C)  
	bool                                               bIsValidRot;                                                // 0x00A4   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x00A5   (0x0003)  MISSED
	float                                              DeltaRate;                                                  // 0x00A8   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x00AC   (0x0004)  MISSED
};

/// Struct /Script/Pal7.RootMotionSource_Rotation
/// Size: 0x0030 (0x0000A0 - 0x0000D0)
struct FRootMotionSource_Rotation : FRootMotionSource
{ 
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x0098   (0x0008)  MISSED
	FQuat                                              StartRotation;                                              // 0x00A0   (0x0010)  
	FQuat                                              TargetRotation;                                             // 0x00B0   (0x0010)  
	class UCurveFloat*                                 TimeMappingCurve;                                           // 0x00C0   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x00C8   (0x0008)  MISSED
};

/// Struct /Script/Pal7.PaladinObjectRecord
/// Size: 0x0028 (0x000000 - 0x000028)
struct FPaladinObjectRecord
{ 
	FName                                              objectID;                                                   // 0x0000   (0x0008)  
	class UClass*                                      Class;                                                      // 0x0008   (0x0008)  
	FName                                              Name;                                                       // 0x0010   (0x0008)  
	TArray<char>                                       Data;                                                       // 0x0018   (0x0010)  
};

/// Struct /Script/Pal7.ArchiveUpdateData
/// Size: 0x0018 (0x000008 - 0x000020)
struct FArchiveUpdateData : FTableRowBase
{ 
	EPaladinSaveGameFileVersion                        Version;                                                    // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	TArray<class UClass*>                              TaskList;                                                   // 0x0010   (0x0010)  
};

/// Struct /Script/Pal7.PaladinSaveSlotJsonData
/// Size: 0x0050 (0x000000 - 0x000050)
struct FPaladinSaveSlotJsonData
{ 
	SDK_UNDEFINED(80,2080) /* TMap<EPaladinSlotSaveDataType, FString> */ __um(Data);                               // 0x0000   (0x0050)  
};

/// Struct /Script/Pal7.PaladinSaveGlobalJsonData
/// Size: 0x0050 (0x000000 - 0x000050)
struct FPaladinSaveGlobalJsonData
{ 
	SDK_UNDEFINED(80,2081) /* TMap<EPaladinGlobalSaveDataType, FString> */ __um(Data);                             // 0x0000   (0x0050)  
};

/// Struct /Script/Pal7.SavePuzzleGame_ZhaoDan
/// Size: 0x0010 (0x000000 - 0x000010)
struct FSavePuzzleGame_ZhaoDan
{ 
	TArray<bool>                                       EachSolved;                                                 // 0x0000   (0x0010)  
};

/// Struct /Script/Pal7.PaladinTeamArchiveHelper
/// Size: 0x0058 (0x000000 - 0x000058)
struct FPaladinTeamArchiveHelper
{ 
	bool                                               UseConfigLeader;                                            // 0x0000   (0x0001)  
	EPaladinHeroName                                   ConfigLeaderName;                                           // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0002   (0x0006)  MISSED
	SDK_UNDEFINED(80,2082) /* TMap<EPaladinHeroName, FPaladinHeroArchiveHelper> */ __um(HerosArchive);             // 0x0008   (0x0050)  
};

/// Struct /Script/Pal7.PaladinBossChallengeConfig
/// Size: 0x0068 (0x000008 - 0x000070)
struct FPaladinBossChallengeConfig : FTableRowBase
{ 
	FPaladinTeamArchiveHelper                          TeamArchiveHelper;                                          // 0x0008   (0x0058)  
	int32_t                                            BossLevel;                                                  // 0x0060   (0x0004)  
	FName                                              Name;                                                       // 0x0064   (0x0008)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x006C   (0x0004)  MISSED
};

/// Struct /Script/Pal7.PaladinHeroArchiveHelper
/// Size: 0x00B0 (0x000000 - 0x0000B0)
struct FPaladinHeroArchiveHelper
{ 
	bool                                               IsJoinTeam;                                                 // 0x0000   (0x0001)  
	bool                                               UseConfigLevel;                                             // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0002   (0x0002)  MISSED
	int32_t                                            ConfigLevel;                                                // 0x0004   (0x0004)  
	bool                                               AffectedByInheritArchive;                                   // 0x0008   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	SDK_UNDEFINED(80,2083) /* TMap<EItemMainType, int32_t> */ __um(Equipment);                                     // 0x0010   (0x0050)  
	SDK_UNDEFINED(80,2084) /* TMap<int32_t, FName> */  __um(SkillConfig);                                          // 0x0060   (0x0050)  
};

/// Struct /Script/Pal7.PaladinTemGrantAttrSetRow
/// Size: 0x0090 (0x000008 - 0x000098)
struct FPaladinTemGrantAttrSetRow : FTableRowBase
{ 
	FPaladinTeamArchiveHelper                          TeamArchiveHelper;                                          // 0x0008   (0x0058)  
	TArray<int32_t>                                    ItemIds;                                                    // 0x0060   (0x0010)  
	FName                                              Name;                                                       // 0x0070   (0x0008)  
	FGameplayTagContainer                              TriggerTag;                                                 // 0x0078   (0x0020)  
};

/// Struct /Script/Pal7.QuestSaveData
/// Size: 0x00A0 (0x000000 - 0x0000A0)
struct FQuestSaveData
{ 
	FName                                              QuestID;                                                    // 0x0000   (0x0008)  
	SDK_UNDEFINED(24,2085) /* FText */                 __um(QuestTitle);                                           // 0x0008   (0x0018)  
	SDK_UNDEFINED(24,2086) /* FText */                 __um(ChapterName);                                          // 0x0020   (0x0018)  
	FGuid                                              NodeGuid;                                                   // 0x0038   (0x0010)  
	EQuestCategory                                     QuestCategory;                                              // 0x0048   (0x0001)  
	bool                                               bIsCompleted;                                               // 0x0049   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x004A   (0x0006)  MISSED
	SDK_UNDEFINED(80,2087) /* TMap<FString, FString> */ __um(NodeSaveData);                                        // 0x0050   (0x0050)  
};

/// Struct /Script/Pal7.QuestSaveJsonData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FQuestSaveJsonData
{ 
	SDK_UNDEFINED(16,2088) /* FString */               __um(QuestSaveJsonData);                                    // 0x0000   (0x0010)  
};

/// Struct /Script/Pal7.PaladinItemArchiveHelper
/// Size: 0x0050 (0x000000 - 0x000050)
struct FPaladinItemArchiveHelper
{ 
	SDK_UNDEFINED(80,2089) /* TMap<int32_t, int32_t> */ __um(ItemsArchive);                                        // 0x0000   (0x0050)  
};

/// Struct /Script/Pal7.PaladinArchiveHelperRow
/// Size: 0x00A8 (0x000008 - 0x0000B0)
struct FPaladinArchiveHelperRow : FTableRowBase
{ 
	FPaladinTeamArchiveHelper                          TeamArchiveHelper;                                          // 0x0008   (0x0058)  
	FPaladinItemArchiveHelper                          ItemsArchiveHelper;                                         // 0x0060   (0x0050)  
};

/// Struct /Script/Pal7.SaveMonsterInfo
/// Size: 0x00A0 (0x000000 - 0x0000A0)
struct FSaveMonsterInfo
{ 
	SDK_UNDEFINED(24,2090) /* FText */                 __um(MonsterName);                                          // 0x0000   (0x0018)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0018   (0x0008)  MISSED
	FTransform                                         Transform;                                                  // 0x0020   (0x0030)  
	SDK_UNDEFINED(80,2091) /* TMap<FString, float> */  __um(Attributes);                                           // 0x0050   (0x0050)  
};

/// Struct /Script/Pal7.SaveBattleField
/// Size: 0x0010 (0x000000 - 0x000010)
struct FSaveBattleField
{ 
	TArray<FSaveMonsterInfo>                           Monsters;                                                   // 0x0000   (0x0010)  
};

/// Struct /Script/Pal7.SaveLimitItem
/// Size: 0x0050 (0x000000 - 0x000050)
struct FSaveLimitItem
{ 
	SDK_UNDEFINED(80,2092) /* TMap<int32_t, int32_t> */ __um(RecordList);                                          // 0x0000   (0x0050)  
};

/// Struct /Script/Pal7.SaveItemCategory
/// Size: 0x0050 (0x000000 - 0x000050)
struct FSaveItemCategory
{ 
	SDK_UNDEFINED(80,2093) /* TMap<int32_t, int32_t> */ __um(ItemMap);                                             // 0x0000   (0x0050)  
};

/// Struct /Script/Pal7.PaladinSlotMetaData
/// Size: 0x00C8 (0x000000 - 0x0000C8)
struct FPaladinSlotMetaData
{ 
	EPaladinSaveGameFileVersion                        SlotVer;                                                    // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	SDK_UNDEFINED(16,2094) /* FString */               __um(SlotName);                                             // 0x0008   (0x0010)  
	int32_t                                            SlotIndex;                                                  // 0x0018   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x001C   (0x0004)  MISSED
	SDK_UNDEFINED(16,2095) /* FString */               __um(LevelID);                                              // 0x0020   (0x0010)  
	int32_t                                            TeamQueueIndex;                                             // 0x0030   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0034   (0x0004)  MISSED
	FDateTime                                          CreateTime;                                                 // 0x0038   (0x0008)  
	int32_t                                            ElapsedTime;                                                // 0x0040   (0x0004)  
	int32_t                                            LeadingLevel;                                               // 0x0044   (0x0004)  
	int32_t                                            WidthHeightRatio;                                           // 0x0048   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x004C   (0x0004)  MISSED
	SDK_UNDEFINED(24,2096) /* FText */                 __um(MainQuestChapterName);                                 // 0x0050   (0x0018)  
	SDK_UNDEFINED(24,2097) /* FText */                 __um(MainQuestOverview);                                    // 0x0068   (0x0018)  
	FName                                              MainQuestID;                                                // 0x0080   (0x0008)  
	bool                                               FinishGame;                                                 // 0x0088   (0x0001)  
	EPaladinGameDifficulty                             GameDifficulty;                                             // 0x0089   (0x0001)  
	unsigned char                                      UnknownData04_5[0x2];                                       // 0x008A   (0x0002)  MISSED
	FName                                              MapRowID;                                                   // 0x008C   (0x0008)  
	FLinearColor                                       MapAreaColor;                                               // 0x0094   (0x0010)  
	unsigned char                                      UnknownData05_5[0x4];                                       // 0x00A4   (0x0004)  MISSED
	SDK_UNDEFINED(24,2098) /* FText */                 __um(AreaName);                                             // 0x00A8   (0x0018)  
	unsigned char                                      UnknownData06_6[0x8];                                       // 0x00C0   (0x0008)  MISSED
};

/// Struct /Script/Pal7.PaladinSlotScreenShotData
/// Size: 0x0038 (0x000000 - 0x000038)
struct FPaladinSlotScreenShotData
{ 
	TArray<char>                                       TmpCompressedScreenShot;                                    // 0x0000   (0x0010)  
	TArray<FColor>                                     ScreenShot;                                                 // 0x0010   (0x0010)  
	class UTexture2D*                                  Image;                                                      // 0x0020   (0x0008)  
	TArray<FColor>                                     ScreenShotBuffer;                                           // 0x0028   (0x0010)  
};

/// Struct /Script/Pal7.DialogueBindingOverrideData
/// Size: 0x0024 (0x000000 - 0x000024)
struct FDialogueBindingOverrideData
{ 
	FMovieSceneObjectBindingID                         ObjectBindingID;                                            // 0x0000   (0x0018)  
	FName                                              PlayerID;                                                   // 0x0018   (0x0008)  
	bool                                               bOverridesDefault;                                          // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0021   (0x0003)  MISSED
};

/// Struct /Script/Pal7.PaladinSequenceConfigInfo
/// Size: 0x0088 (0x000008 - 0x000090)
struct FPaladinSequenceConfigInfo : FTableRowBase
{ 
	SDK_UNDEFINED(40,2099) /* TWeakObjectPtr<ULevelSequence*> */ __um(SequenceAsset);                              // 0x0008   (0x0028)  
	FName                                              LevelID;                                                    // 0x0030   (0x0008)  
	SDK_UNDEFINED(80,2100) /* TMap<FString, float> */  __um(CommandMap);                                           // 0x0038   (0x0050)  
	bool                                               bShowLoadingUI;                                             // 0x0088   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0089   (0x0007)  MISSED
};

/// Struct /Script/Pal7.MemorySequenceInfo
/// Size: 0x00A0 (0x000008 - 0x0000A8)
struct FMemorySequenceInfo : FTableRowBase
{ 
	SDK_UNDEFINED(24,2101) /* FText */                 __um(ChapterName);                                          // 0x0008   (0x0018)  
	SDK_UNDEFINED(24,2102) /* FText */                 __um(MemoryName);                                           // 0x0020   (0x0018)  
	SDK_UNDEFINED(40,2103) /* TWeakObjectPtr<UTexture2D*> */ __um(PreviewImage);                                   // 0x0038   (0x0028)  
	SDK_UNDEFINED(40,2104) /* TWeakObjectPtr<ULevelSequence*> */ __um(SequenceAsset);                              // 0x0060   (0x0028)  
	FName                                              LevelID;                                                    // 0x0088   (0x0008)  
	SDK_UNDEFINED(24,2105) /* FText */                 __um(MemoryInfo);                                           // 0x0090   (0x0018)  
};

/// Struct /Script/Pal7.FunctionKeyData
/// Size: 0x0080 (0x000008 - 0x000088)
struct FFunctionKeyData : FTableRowBase
{ 
	SDK_UNDEFINED(24,2106) /* FText */                 __um(Name);                                                 // 0x0008   (0x0018)  
	FKey                                               KeyBoardKey;                                                // 0x0020   (0x0018)  
	bool                                               bKeyboardMultKeys;                                          // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0039   (0x0007)  MISSED
	TArray<FKey>                                       KeyboardKeys;                                               // 0x0040   (0x0010)  
	FKey                                               GamePadKey;                                                 // 0x0050   (0x0018)  
	bool                                               bMultKeys;                                                  // 0x0068   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0069   (0x0007)  MISSED
	TArray<FKey>                                       GamepadKeys;                                                // 0x0070   (0x0010)  
	EOpenFunctionID                                    UnlockFunction;                                             // 0x0080   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0081   (0x0007)  MISSED
};

/// Struct /Script/Pal7.PageKeyData
/// Size: 0x0040 (0x000008 - 0x000048)
struct FPageKeyData : FTableRowBase
{ 
	SDK_UNDEFINED(24,2107) /* FText */                 __um(PageName);                                             // 0x0008   (0x0018)  
	SDK_UNDEFINED(24,2108) /* FText */                 __um(PageInfo);                                             // 0x0020   (0x0018)  
	TArray<FFunctionKeyData>                           KeysSetting;                                                // 0x0038   (0x0010)  
};

/// Struct /Script/Pal7.UIKeyData
/// Size: 0x0028 (0x000008 - 0x000030)
struct FUIKeyData : FTableRowBase
{ 
	SDK_UNDEFINED(24,2109) /* FText */                 __um(UIName);                                               // 0x0008   (0x0018)  
	TArray<FPageKeyData>                               PagesSetting;                                               // 0x0020   (0x0010)  
};

/// Struct /Script/Pal7.KeyIconData
/// Size: 0x00A0 (0x000008 - 0x0000A8)
struct FKeyIconData : FTableRowBase
{ 
	FKey                                               Key;                                                        // 0x0008   (0x0018)  
	FSlateBrush                                        Icon;                                                       // 0x0020   (0x0088)  
};

/// Struct /Script/Pal7.PaladinCameraMobility
/// Size: 0x000C (0x000000 - 0x00000C)
struct FPaladinCameraMobility
{ 
	unsigned char                                      UnknownData00_2[0xC];                                       // 0x0000   (0x000C)  MISSED
};

/// Struct /Script/Pal7.AsycTimelimitRow
/// Size: 0x0008 (0x000008 - 0x000010)
struct FAsycTimelimitRow : FTableRowBase
{ 
	EAsycTimeLimitState                                State;                                                      // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	float                                              AsyncLoadingTimeLimit;                                      // 0x000C   (0x0004)  
};

/// Struct /Script/Pal7.PaladinWidgetIconData
/// Size: 0x0070 (0x000008 - 0x000078)
struct FPaladinWidgetIconData : FTableRowBase
{ 
	SDK_UNDEFINED(24,2110) /* FText */                 __um(FunctionInfo);                                         // 0x0008   (0x0018)  
	bool                                               bCommonFont;                                                // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0021   (0x0007)  MISSED
	SDK_UNDEFINED(80,2111) /* TMap<FName, FPaladinIconData> */ __um(WidgetIcons);                                  // 0x0028   (0x0050)  
};

/// Struct /Script/Pal7.PaladinIconData
/// Size: 0x0118 (0x000000 - 0x000118)
struct FPaladinIconData
{ 
	FSlateBrush                                        WidgetIcon;                                                 // 0x0000   (0x0088)  
	FSlateFontInfo                                     Font;                                                       // 0x0088   (0x0050)  
	FSlateColor                                        FontColor;                                                  // 0x00D8   (0x0028)  
	FVector2D                                          InShadowOffset;                                             // 0x0100   (0x0008)  
	FLinearColor                                       InShadowColor;                                              // 0x0108   (0x0010)  
};

/// Struct /Script/Pal7.PaladinLoadingUIData
/// Size: 0x0060 (0x000008 - 0x000068)
struct FPaladinLoadingUIData : FTableRowBase
{ 
	SDK_UNDEFINED(24,2112) /* FText */                 __um(ShowTitle);                                            // 0x0008   (0x0018)  
	SDK_UNDEFINED(24,2113) /* FText */                 __um(ContentFormat);                                        // 0x0020   (0x0018)  
	bool                                               bShowStartGame;                                             // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0039   (0x0007)  MISSED
	SDK_UNDEFINED(40,2114) /* TWeakObjectPtr<USoundAtomCue*> */ __um(Music);                                       // 0x0040   (0x0028)  
};

/// Struct /Script/Pal7.PaladinUIData
/// Size: 0x0078 (0x000008 - 0x000080)
struct FPaladinUIData : FTableRowBase
{ 
	SDK_UNDEFINED(40,2115) /* TWeakObjectPtr<UClass*> */ __um(UIClass);                                            // 0x0008   (0x0028)  
	bool                                               PauseGame;                                                  // 0x0030   (0x0001)  
	bool                                               PauseHero;                                                  // 0x0031   (0x0001)  
	bool                                               bRayTracingEnable;                                          // 0x0032   (0x0001)  
	bool                                               bPlayModeEnable;                                            // 0x0033   (0x0001)  
	bool                                               OpenByFunctionID;                                           // 0x0034   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0035   (0x0003)  MISSED
	TArray<EOpenFunctionID>                            FunctionIDList;                                             // 0x0038   (0x0010)  
	bool                                               bGamepadShowMouse;                                          // 0x0048   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0049   (0x0007)  MISSED
	SDK_UNDEFINED(40,2116) /* TWeakObjectPtr<UClass*> */ __um(TouchUIClass);                                       // 0x0050   (0x0028)  
	float                                              TouchScale;                                                 // 0x0078   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x007C   (0x0004)  MISSED
};

/// Struct /Script/Pal7.GradTable
/// Size: 0x0010 (0x000008 - 0x000018)
struct FGradTable : FTableRowBase
{ 
	EBattleEndGrade                                    GradeLevel;                                                 // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	FFloatInterval                                     CloseInterval;                                              // 0x000C   (0x0008)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/Pal7.PlayerReplyInformation
/// Size: 0x0108 (0x000000 - 0x000108)
struct FPlayerReplyInformation
{ 
	SDK_UNDEFINED(24,2117) /* FText */                 __um(txtInfo);                                              // 0x0000   (0x0018)  
	FDialogueNode                                      Node;                                                       // 0x0018   (0x00F0)  
};

/// Struct /Script/Pal7.UseSkillPanelWidget
/// Size: 0x0010 (0x000000 - 0x000010)
struct FUseSkillPanelWidget
{ 
	class UTextBlock*                                  SkillText;                                                  // 0x0000   (0x0008)  
	class UUserWidget*                                 SkillImage;                                                 // 0x0008   (0x0008)  
};

